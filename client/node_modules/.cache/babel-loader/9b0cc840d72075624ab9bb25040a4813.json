{"ast":null,"code":"/** @jsx $jsx */\nimport $jsx from '../../../shared/$jsx.js';\nexport default {\n  render(self) {\n    const {\n      sliderLabel,\n      sliderValue,\n      sliderValueEditable,\n      alphaLabelText\n    } = self.params;\n    return $jsx(\"div\", {\n      class: \"color-picker-module color-picker-module-alpha-slider\"\n    }, $jsx(\"div\", {\n      class: \"color-picker-slider-wrap\"\n    }, sliderLabel && $jsx(\"div\", {\n      class: \"color-picker-slider-label\"\n    }, alphaLabelText), $jsx(\"div\", {\n      class: \"range-slider color-picker-slider color-picker-slider-alpha\"\n    }), sliderValue && $jsx(\"div\", {\n      class: \"color-picker-slider-value\"\n    }, sliderValueEditable ? $jsx(\"input\", {\n      type: \"number\",\n      step: \"0.01\",\n      min: \"0\",\n      max: \"1\",\n      class: \"color-picker-value-alpha\"\n    }) : $jsx(\"span\", {\n      class: \"color-picker-value-alpha\"\n    }))));\n  },\n\n  init(self) {\n    self.alphaRangeSlider = self.app.range.create({\n      el: self.$el.find('.color-picker-slider-alpha'),\n      min: 0,\n      max: 1,\n      step: 0.01,\n      value: 1,\n      on: {\n        change(range, value) {\n          const alpha = Math.floor(value * 100) / 100;\n          self.setValue({\n            alpha\n          });\n        }\n\n      }\n    });\n\n    function handleInputChange(e) {\n      const alpha = self.value.alpha;\n      let value = parseFloat(e.target.value);\n\n      if (Number.isNaN(value)) {\n        e.target.value = alpha;\n        return;\n      }\n\n      value = Math.max(0, Math.min(1, value));\n      self.setValue({\n        alpha: value\n      });\n    }\n\n    self.$el.on('change', '.color-picker-module-alpha-slider input', handleInputChange);\n\n    self.destroyAlphaSliderEvents = function destroyAlphaSliderEvents() {\n      self.$el.off('change', '.color-picker-module-alpha-slider input', handleInputChange);\n    };\n  },\n\n  update(self) {\n    const {\n      value\n    } = self;\n    const {\n      sliderValue,\n      sliderValueEditable\n    } = self.params;\n    const {\n      alpha\n    } = value;\n    self.alphaRangeSlider.value = alpha;\n    self.alphaRangeSlider.layout();\n\n    if (sliderValue && sliderValueEditable) {\n      self.$el.find('input.color-picker-value-alpha').val(alpha);\n    } else {\n      self.$el.find('span.color-picker-value-alpha').text(alpha);\n    }\n  },\n\n  destroy(self) {\n    if (self.alphaRangeSlider && self.alphaRangeSlider.destroy) {\n      self.alphaRangeSlider.destroy();\n    }\n\n    delete self.alphaRangeSlider;\n    if (self.destroyAlphaSliderEvents) self.destroyAlphaSliderEvents();\n    delete self.destroyAlphaSliderEvents;\n  }\n\n};","map":{"version":3,"names":["$jsx","render","self","sliderLabel","sliderValue","sliderValueEditable","alphaLabelText","params","class","type","step","min","max","init","alphaRangeSlider","app","range","create","el","$el","find","value","on","change","alpha","Math","floor","setValue","handleInputChange","e","parseFloat","target","Number","isNaN","destroyAlphaSliderEvents","off","update","layout","val","text","destroy"],"sources":["C:/Users/Babak/userlogin/node_modules/framework7/components/color-picker/modules/alpha-slider.js"],"sourcesContent":["/** @jsx $jsx */\nimport $jsx from '../../../shared/$jsx.js';\nexport default {\n  render(self) {\n    const {\n      sliderLabel,\n      sliderValue,\n      sliderValueEditable,\n      alphaLabelText\n    } = self.params;\n    return $jsx(\"div\", {\n      class: \"color-picker-module color-picker-module-alpha-slider\"\n    }, $jsx(\"div\", {\n      class: \"color-picker-slider-wrap\"\n    }, sliderLabel && $jsx(\"div\", {\n      class: \"color-picker-slider-label\"\n    }, alphaLabelText), $jsx(\"div\", {\n      class: \"range-slider color-picker-slider color-picker-slider-alpha\"\n    }), sliderValue && $jsx(\"div\", {\n      class: \"color-picker-slider-value\"\n    }, sliderValueEditable ? $jsx(\"input\", {\n      type: \"number\",\n      step: \"0.01\",\n      min: \"0\",\n      max: \"1\",\n      class: \"color-picker-value-alpha\"\n    }) : $jsx(\"span\", {\n      class: \"color-picker-value-alpha\"\n    }))));\n  },\n\n  init(self) {\n    self.alphaRangeSlider = self.app.range.create({\n      el: self.$el.find('.color-picker-slider-alpha'),\n      min: 0,\n      max: 1,\n      step: 0.01,\n      value: 1,\n      on: {\n        change(range, value) {\n          const alpha = Math.floor(value * 100) / 100;\n          self.setValue({\n            alpha\n          });\n        }\n\n      }\n    });\n\n    function handleInputChange(e) {\n      const alpha = self.value.alpha;\n      let value = parseFloat(e.target.value);\n\n      if (Number.isNaN(value)) {\n        e.target.value = alpha;\n        return;\n      }\n\n      value = Math.max(0, Math.min(1, value));\n      self.setValue({\n        alpha: value\n      });\n    }\n\n    self.$el.on('change', '.color-picker-module-alpha-slider input', handleInputChange);\n\n    self.destroyAlphaSliderEvents = function destroyAlphaSliderEvents() {\n      self.$el.off('change', '.color-picker-module-alpha-slider input', handleInputChange);\n    };\n  },\n\n  update(self) {\n    const {\n      value\n    } = self;\n    const {\n      sliderValue,\n      sliderValueEditable\n    } = self.params;\n    const {\n      alpha\n    } = value;\n    self.alphaRangeSlider.value = alpha;\n    self.alphaRangeSlider.layout();\n\n    if (sliderValue && sliderValueEditable) {\n      self.$el.find('input.color-picker-value-alpha').val(alpha);\n    } else {\n      self.$el.find('span.color-picker-value-alpha').text(alpha);\n    }\n  },\n\n  destroy(self) {\n    if (self.alphaRangeSlider && self.alphaRangeSlider.destroy) {\n      self.alphaRangeSlider.destroy();\n    }\n\n    delete self.alphaRangeSlider;\n    if (self.destroyAlphaSliderEvents) self.destroyAlphaSliderEvents();\n    delete self.destroyAlphaSliderEvents;\n  }\n\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}