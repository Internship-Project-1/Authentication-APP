{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { forwardRef, useRef, useImperativeHandle, useState, useEffect } from 'react';\nimport { classNames, getExtraAttrs, emit } from '../shared/utils.js';\nimport { f7 } from '../shared/f7.js';\nconst AreaChart = /*#__PURE__*/forwardRef((props, ref) => {\n  const {\n    className,\n    id,\n    style,\n    lineChart = false,\n    datasets = [],\n    axis = false,\n    axisLabels = [],\n    tooltip = false,\n    legend = false,\n    toggleDatasets = false,\n    width = 640,\n    height = 320,\n    maxAxisLabels = 8,\n    formatAxisLabel: formatAxisLabelProp,\n    formatLegendLabel: formatLegendLabelProp,\n    formatTooltip: formatTooltipProp,\n    formatTooltipAxisLabel,\n    formatTooltipTotal,\n    formatTooltipDataset,\n    children\n  } = props;\n  const [currentIndex, setCurrentIndex] = useState(null);\n  const previousIndex = useRef(null);\n  const [hiddenDatasets, setHiddenDatasets] = useState([]);\n  const extraAttrs = getExtraAttrs(props);\n  const elRef = useRef(null);\n  const svgElRef = useRef(null);\n  const f7Tooltip = useRef(null);\n  const linesOffsets = useRef(null);\n  useImperativeHandle(ref, () => ({\n    el: elRef.current\n  }));\n\n  const getVisibleLegends = () => {\n    if (!maxAxisLabels || axisLabels.length <= maxAxisLabels) return axisLabels;\n    const skipStep = Math.ceil(axisLabels.length / maxAxisLabels);\n    const filtered = axisLabels.filter((label, index) => index % skipStep === 0);\n    return filtered;\n  };\n\n  const getSummValues = () => {\n    const summValues = [];\n    datasets.filter((dataset, index) => !hiddenDatasets.includes(index)).forEach(_ref => {\n      let {\n        values\n      } = _ref;\n      values.forEach((value, valueIndex) => {\n        if (!summValues[valueIndex]) summValues[valueIndex] = 0;\n        summValues[valueIndex] += value;\n      });\n    });\n    return summValues;\n  };\n\n  const getChartData = () => {\n    const data = [];\n\n    if (!datasets.length) {\n      return data;\n    }\n\n    const lastValues = datasets[0].values.map(() => 0);\n    let maxValue = 0;\n\n    if (lineChart) {\n      datasets.forEach(_ref2 => {\n        let {\n          values\n        } = _ref2;\n        const datasetMaxValue = Math.max(...values);\n        if (datasetMaxValue > maxValue) maxValue = datasetMaxValue;\n      });\n    } else {\n      maxValue = Math.max(...getSummValues());\n    }\n\n    datasets.filter((dataset, index) => !hiddenDatasets.includes(index)).forEach(_ref3 => {\n      let {\n        label,\n        values,\n        color\n      } = _ref3;\n      const points = values.map((originalValue, valueIndex) => {\n        lastValues[valueIndex] += originalValue;\n        const value = lineChart ? originalValue : lastValues[valueIndex];\n        const x = valueIndex / (values.length - 1) * width;\n        const y = height - value / maxValue * height;\n\n        if (lineChart) {\n          return `${valueIndex === 0 ? 'M' : 'L'}${x},${y}`;\n        }\n\n        return `${x} ${y}`;\n      });\n\n      if (!lineChart) {\n        points.push(`${width} ${height} 0 ${height}`);\n      }\n\n      data.push({\n        label,\n        points: points.join(' '),\n        color\n      });\n    });\n    return data.reverse();\n  };\n\n  const getVerticalLines = () => {\n    const lines = [];\n\n    if (!datasets.length) {\n      return lines;\n    }\n\n    const values = datasets[0].values;\n    values.forEach((value, valueIndex) => {\n      const x = valueIndex / (values.length - 1) * width;\n      lines.push(x);\n    });\n    return lines;\n  };\n\n  const toggleDataset = index => {\n    if (!toggleDatasets) return;\n\n    if (hiddenDatasets.includes(index)) {\n      hiddenDatasets.splice(hiddenDatasets.indexOf(index), 1);\n    } else {\n      hiddenDatasets.push(index);\n    }\n\n    setHiddenDatasets([...hiddenDatasets]);\n  };\n\n  const formatAxisLabel = label => {\n    if (formatAxisLabelProp) return formatAxisLabelProp(label);\n    return label;\n  };\n\n  const formatLegendLabel = label => {\n    if (formatLegendLabelProp) return formatLegendLabelProp(label);\n    return label;\n  };\n\n  const calcLinesOffsets = () => {\n    const lines = svgElRef.current.querySelectorAll('line');\n    linesOffsets.current = [];\n\n    for (let i = 0; i < lines.length; i += 1) {\n      linesOffsets.current.push(lines[i].getBoundingClientRect().left);\n    }\n  };\n\n  const formatTooltip = () => {\n    if (currentIndex === null) return '';\n    let total = 0;\n    const currentValues = datasets.filter((dataset, index) => !hiddenDatasets.includes(index)).map(dataset => ({\n      color: dataset.color,\n      label: dataset.label,\n      value: dataset.values[currentIndex]\n    }));\n    currentValues.forEach(dataset => {\n      total += dataset.value;\n    });\n\n    if (formatTooltipProp) {\n      return formatTooltipProp({\n        index: currentIndex,\n        total,\n        datasets: currentValues\n      });\n    }\n\n    let labelText = formatTooltipAxisLabel ? formatTooltipAxisLabel(axisLabels[currentIndex]) : formatAxisLabel(axisLabels[currentIndex]);\n    if (!labelText) labelText = '';\n    const totalText = formatTooltipTotal ? formatTooltipTotal(total) : total; // prettier-ignore\n\n    const datasetsText = currentValues.length > 0 ? `\n      <ul class=\"area-chart-tooltip-list\">\n        ${currentValues.map(_ref4 => {\n      let {\n        label,\n        color,\n        value\n      } = _ref4;\n      const valueText = formatTooltipDataset ? formatTooltipDataset(label, value, color) : `${label}: ${value}`;\n      return `\n              <li><span style=\"background-color: ${color};\"></span>${valueText}</li>\n            `;\n    }).join('')}\n      </ul>` : ''; // prettier-ignore\n\n    return `\n      <div class=\"area-chart-tooltip-label\">${labelText}</div>\n      <div class=\"area-chart-tooltip-total\">${totalText}</div>\n      ${datasetsText}\n    `;\n  };\n\n  const setTooltip = () => {\n    if (!tooltip) return;\n    const hasVisibleDataSets = datasets.filter((dataset, index) => !hiddenDatasets.includes(index)).length > 0;\n\n    if (!hasVisibleDataSets) {\n      if (f7Tooltip.current && f7Tooltip.current.hide) f7Tooltip.current.hide();\n      return;\n    }\n\n    if (currentIndex !== null && !f7Tooltip.current) {\n      f7Tooltip.current = f7.tooltip.create({\n        trigger: 'manual',\n        containerEl: elRef.current,\n        targetEl: svgElRef.current.querySelector(`line[data-index=\"${currentIndex}\"]`),\n        text: formatTooltip(),\n        cssClass: 'area-chart-tooltip'\n      });\n\n      if (f7Tooltip.current && f7Tooltip.current.show) {\n        f7Tooltip.current.show();\n      }\n\n      return;\n    }\n\n    if (!f7Tooltip.current || !f7Tooltip.current.hide || !f7Tooltip.current.show) {\n      return;\n    }\n\n    if (currentIndex !== null) {\n      f7Tooltip.current.setText(formatTooltip());\n      f7Tooltip.current.setTargetEl(svgElRef.current.querySelector(`line[data-index=\"${currentIndex}\"]`));\n      f7Tooltip.current.show();\n    } else {\n      f7Tooltip.current.hide();\n    }\n  };\n\n  const onMouseEnter = () => {\n    calcLinesOffsets();\n  };\n\n  const onMouseMove = e => {\n    if (!linesOffsets.current) {\n      calcLinesOffsets();\n    }\n\n    let currentLeft = e.pageX;\n    if (typeof currentLeft === 'undefined') currentLeft = 0;\n    const distances = linesOffsets.current.map(left => Math.abs(currentLeft - left));\n    const minDistance = Math.min(...distances);\n    const closestIndex = distances.indexOf(minDistance);\n    setCurrentIndex(closestIndex);\n  };\n\n  const onMouseLeave = () => {\n    setCurrentIndex(null);\n  };\n\n  const attachEvents = () => {\n    if (!svgElRef.current) return;\n    svgElRef.current.addEventListener('mouseenter', onMouseEnter);\n    svgElRef.current.addEventListener('mousemove', onMouseMove);\n    svgElRef.current.addEventListener('mouseleave', onMouseLeave);\n  };\n\n  const detachEvents = () => {\n    if (!svgElRef.current) return;\n    svgElRef.current.removeEventListener('mouseenter', onMouseEnter);\n    svgElRef.current.removeEventListener('mousemove', onMouseMove);\n    svgElRef.current.removeEventListener('mouseleave', onMouseLeave);\n  };\n\n  useEffect(() => {\n    if (previousIndex.current === currentIndex) return;\n    previousIndex.current = currentIndex;\n    emit(props, 'select', currentIndex);\n    setTooltip();\n  }, [currentIndex]);\n  useEffect(() => {\n    attachEvents();\n    return detachEvents;\n  });\n  useEffect(() => {\n    return () => {\n      if (f7Tooltip.current && f7Tooltip.current.destroy) {\n        f7Tooltip.current.destroy();\n      }\n\n      f7Tooltip.current = null;\n    };\n  }, []);\n  const classes = classNames('area-chart', className);\n  const chartData = getChartData();\n  const verticalLines = getVerticalLines();\n  const visibleLegends = getVisibleLegends();\n  const LegendItemTag = toggleDatasets ? 'button' : 'span';\n  const ChartTag = lineChart ? 'path' : 'polygon';\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    id: id,\n    style: style,\n    className: classes,\n    ref: elRef\n  }, extraAttrs), /*#__PURE__*/React.createElement(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: width,\n    height: height,\n    viewBox: `0 0 ${width} ${height}`,\n    preserveAspectRatio: \"none\",\n    ref: svgElRef\n  }, chartData.map((data, index) => /*#__PURE__*/React.createElement(ChartTag, {\n    key: `${ChartTag}-${index}`,\n    fill: lineChart ? undefined : data.color,\n    stroke: lineChart ? data.color : undefined,\n    fillRule: \"evenodd\",\n    points: lineChart ? undefined : data.points,\n    d: lineChart ? data.points : undefined\n  })), verticalLines.map((line, index) => /*#__PURE__*/React.createElement(\"line\", {\n    key: `line-${index}`,\n    \"data-index\": index,\n    fill: \"#000\",\n    x1: line,\n    y1: 0,\n    x2: line,\n    y2: height,\n    className: classNames({\n      'area-chart-current-line': currentIndex === index\n    })\n  }))), axis && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"area-chart-axis\"\n  }, axisLabels.map((label, index) => /*#__PURE__*/React.createElement(\"span\", {\n    key: index\n  }, visibleLegends.includes(label) && /*#__PURE__*/React.createElement(\"span\", null, formatAxisLabel(label))))), legend && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"area-chart-legend\"\n  }, datasets.map((dataset, index) => /*#__PURE__*/React.createElement(LegendItemTag, {\n    key: index,\n    className: classNames('area-chart-legend-item', {\n      'area-chart-legend-item-hidden': hiddenDatasets.includes(index),\n      'area-chart-legend-button': toggleDatasets\n    }),\n    type: toggleDatasets ? 'button' : undefined,\n    onClick: () => toggleDataset(index)\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      backgroundColor: dataset.color\n    }\n  }), formatLegendLabel(dataset.label)))), children);\n});\nAreaChart.displayName = 'f7-area-chart';\nexport default AreaChart;","map":{"version":3,"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","React","forwardRef","useRef","useImperativeHandle","useState","useEffect","classNames","getExtraAttrs","emit","f7","AreaChart","props","ref","className","id","style","lineChart","datasets","axis","axisLabels","tooltip","legend","toggleDatasets","width","height","maxAxisLabels","formatAxisLabel","formatAxisLabelProp","formatLegendLabel","formatLegendLabelProp","formatTooltip","formatTooltipProp","formatTooltipAxisLabel","formatTooltipTotal","formatTooltipDataset","children","currentIndex","setCurrentIndex","previousIndex","hiddenDatasets","setHiddenDatasets","extraAttrs","elRef","svgElRef","f7Tooltip","linesOffsets","el","current","getVisibleLegends","skipStep","Math","ceil","filtered","filter","label","index","getSummValues","summValues","dataset","includes","forEach","_ref","values","value","valueIndex","getChartData","data","lastValues","map","maxValue","_ref2","datasetMaxValue","max","_ref3","color","points","originalValue","x","y","push","join","reverse","getVerticalLines","lines","toggleDataset","splice","indexOf","calcLinesOffsets","querySelectorAll","getBoundingClientRect","left","total","currentValues","labelText","totalText","datasetsText","_ref4","valueText","setTooltip","hasVisibleDataSets","hide","create","trigger","containerEl","targetEl","querySelector","text","cssClass","show","setText","setTargetEl","onMouseEnter","onMouseMove","e","currentLeft","pageX","distances","abs","minDistance","min","closestIndex","onMouseLeave","attachEvents","addEventListener","detachEvents","removeEventListener","destroy","classes","chartData","verticalLines","visibleLegends","LegendItemTag","ChartTag","createElement","xmlns","viewBox","preserveAspectRatio","fill","undefined","stroke","fillRule","d","line","x1","y1","x2","y2","type","onClick","backgroundColor","displayName"],"sources":["C:/Users/Babak/userlogin/node_modules/framework7-react/components/area-chart.js"],"sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { forwardRef, useRef, useImperativeHandle, useState, useEffect } from 'react';\nimport { classNames, getExtraAttrs, emit } from '../shared/utils.js';\nimport { f7 } from '../shared/f7.js';\n\nconst AreaChart = /*#__PURE__*/forwardRef((props, ref) => {\n  const {\n    className,\n    id,\n    style,\n    lineChart = false,\n    datasets = [],\n    axis = false,\n    axisLabels = [],\n    tooltip = false,\n    legend = false,\n    toggleDatasets = false,\n    width = 640,\n    height = 320,\n    maxAxisLabels = 8,\n    formatAxisLabel: formatAxisLabelProp,\n    formatLegendLabel: formatLegendLabelProp,\n    formatTooltip: formatTooltipProp,\n    formatTooltipAxisLabel,\n    formatTooltipTotal,\n    formatTooltipDataset,\n    children\n  } = props;\n  const [currentIndex, setCurrentIndex] = useState(null);\n  const previousIndex = useRef(null);\n  const [hiddenDatasets, setHiddenDatasets] = useState([]);\n  const extraAttrs = getExtraAttrs(props);\n  const elRef = useRef(null);\n  const svgElRef = useRef(null);\n  const f7Tooltip = useRef(null);\n  const linesOffsets = useRef(null);\n  useImperativeHandle(ref, () => ({\n    el: elRef.current\n  }));\n\n  const getVisibleLegends = () => {\n    if (!maxAxisLabels || axisLabels.length <= maxAxisLabels) return axisLabels;\n    const skipStep = Math.ceil(axisLabels.length / maxAxisLabels);\n    const filtered = axisLabels.filter((label, index) => index % skipStep === 0);\n    return filtered;\n  };\n\n  const getSummValues = () => {\n    const summValues = [];\n    datasets.filter((dataset, index) => !hiddenDatasets.includes(index)).forEach(_ref => {\n      let {\n        values\n      } = _ref;\n      values.forEach((value, valueIndex) => {\n        if (!summValues[valueIndex]) summValues[valueIndex] = 0;\n        summValues[valueIndex] += value;\n      });\n    });\n    return summValues;\n  };\n\n  const getChartData = () => {\n    const data = [];\n\n    if (!datasets.length) {\n      return data;\n    }\n\n    const lastValues = datasets[0].values.map(() => 0);\n    let maxValue = 0;\n\n    if (lineChart) {\n      datasets.forEach(_ref2 => {\n        let {\n          values\n        } = _ref2;\n        const datasetMaxValue = Math.max(...values);\n        if (datasetMaxValue > maxValue) maxValue = datasetMaxValue;\n      });\n    } else {\n      maxValue = Math.max(...getSummValues());\n    }\n\n    datasets.filter((dataset, index) => !hiddenDatasets.includes(index)).forEach(_ref3 => {\n      let {\n        label,\n        values,\n        color\n      } = _ref3;\n      const points = values.map((originalValue, valueIndex) => {\n        lastValues[valueIndex] += originalValue;\n        const value = lineChart ? originalValue : lastValues[valueIndex];\n        const x = valueIndex / (values.length - 1) * width;\n        const y = height - value / maxValue * height;\n\n        if (lineChart) {\n          return `${valueIndex === 0 ? 'M' : 'L'}${x},${y}`;\n        }\n\n        return `${x} ${y}`;\n      });\n\n      if (!lineChart) {\n        points.push(`${width} ${height} 0 ${height}`);\n      }\n\n      data.push({\n        label,\n        points: points.join(' '),\n        color\n      });\n    });\n    return data.reverse();\n  };\n\n  const getVerticalLines = () => {\n    const lines = [];\n\n    if (!datasets.length) {\n      return lines;\n    }\n\n    const values = datasets[0].values;\n    values.forEach((value, valueIndex) => {\n      const x = valueIndex / (values.length - 1) * width;\n      lines.push(x);\n    });\n    return lines;\n  };\n\n  const toggleDataset = index => {\n    if (!toggleDatasets) return;\n\n    if (hiddenDatasets.includes(index)) {\n      hiddenDatasets.splice(hiddenDatasets.indexOf(index), 1);\n    } else {\n      hiddenDatasets.push(index);\n    }\n\n    setHiddenDatasets([...hiddenDatasets]);\n  };\n\n  const formatAxisLabel = label => {\n    if (formatAxisLabelProp) return formatAxisLabelProp(label);\n    return label;\n  };\n\n  const formatLegendLabel = label => {\n    if (formatLegendLabelProp) return formatLegendLabelProp(label);\n    return label;\n  };\n\n  const calcLinesOffsets = () => {\n    const lines = svgElRef.current.querySelectorAll('line');\n    linesOffsets.current = [];\n\n    for (let i = 0; i < lines.length; i += 1) {\n      linesOffsets.current.push(lines[i].getBoundingClientRect().left);\n    }\n  };\n\n  const formatTooltip = () => {\n    if (currentIndex === null) return '';\n    let total = 0;\n    const currentValues = datasets.filter((dataset, index) => !hiddenDatasets.includes(index)).map(dataset => ({\n      color: dataset.color,\n      label: dataset.label,\n      value: dataset.values[currentIndex]\n    }));\n    currentValues.forEach(dataset => {\n      total += dataset.value;\n    });\n\n    if (formatTooltipProp) {\n      return formatTooltipProp({\n        index: currentIndex,\n        total,\n        datasets: currentValues\n      });\n    }\n\n    let labelText = formatTooltipAxisLabel ? formatTooltipAxisLabel(axisLabels[currentIndex]) : formatAxisLabel(axisLabels[currentIndex]);\n    if (!labelText) labelText = '';\n    const totalText = formatTooltipTotal ? formatTooltipTotal(total) : total; // prettier-ignore\n\n    const datasetsText = currentValues.length > 0 ? `\n      <ul class=\"area-chart-tooltip-list\">\n        ${currentValues.map(_ref4 => {\n      let {\n        label,\n        color,\n        value\n      } = _ref4;\n      const valueText = formatTooltipDataset ? formatTooltipDataset(label, value, color) : `${label}: ${value}`;\n      return `\n              <li><span style=\"background-color: ${color};\"></span>${valueText}</li>\n            `;\n    }).join('')}\n      </ul>` : ''; // prettier-ignore\n\n    return `\n      <div class=\"area-chart-tooltip-label\">${labelText}</div>\n      <div class=\"area-chart-tooltip-total\">${totalText}</div>\n      ${datasetsText}\n    `;\n  };\n\n  const setTooltip = () => {\n    if (!tooltip) return;\n    const hasVisibleDataSets = datasets.filter((dataset, index) => !hiddenDatasets.includes(index)).length > 0;\n\n    if (!hasVisibleDataSets) {\n      if (f7Tooltip.current && f7Tooltip.current.hide) f7Tooltip.current.hide();\n      return;\n    }\n\n    if (currentIndex !== null && !f7Tooltip.current) {\n      f7Tooltip.current = f7.tooltip.create({\n        trigger: 'manual',\n        containerEl: elRef.current,\n        targetEl: svgElRef.current.querySelector(`line[data-index=\"${currentIndex}\"]`),\n        text: formatTooltip(),\n        cssClass: 'area-chart-tooltip'\n      });\n\n      if (f7Tooltip.current && f7Tooltip.current.show) {\n        f7Tooltip.current.show();\n      }\n\n      return;\n    }\n\n    if (!f7Tooltip.current || !f7Tooltip.current.hide || !f7Tooltip.current.show) {\n      return;\n    }\n\n    if (currentIndex !== null) {\n      f7Tooltip.current.setText(formatTooltip());\n      f7Tooltip.current.setTargetEl(svgElRef.current.querySelector(`line[data-index=\"${currentIndex}\"]`));\n      f7Tooltip.current.show();\n    } else {\n      f7Tooltip.current.hide();\n    }\n  };\n\n  const onMouseEnter = () => {\n    calcLinesOffsets();\n  };\n\n  const onMouseMove = e => {\n    if (!linesOffsets.current) {\n      calcLinesOffsets();\n    }\n\n    let currentLeft = e.pageX;\n    if (typeof currentLeft === 'undefined') currentLeft = 0;\n    const distances = linesOffsets.current.map(left => Math.abs(currentLeft - left));\n    const minDistance = Math.min(...distances);\n    const closestIndex = distances.indexOf(minDistance);\n    setCurrentIndex(closestIndex);\n  };\n\n  const onMouseLeave = () => {\n    setCurrentIndex(null);\n  };\n\n  const attachEvents = () => {\n    if (!svgElRef.current) return;\n    svgElRef.current.addEventListener('mouseenter', onMouseEnter);\n    svgElRef.current.addEventListener('mousemove', onMouseMove);\n    svgElRef.current.addEventListener('mouseleave', onMouseLeave);\n  };\n\n  const detachEvents = () => {\n    if (!svgElRef.current) return;\n    svgElRef.current.removeEventListener('mouseenter', onMouseEnter);\n    svgElRef.current.removeEventListener('mousemove', onMouseMove);\n    svgElRef.current.removeEventListener('mouseleave', onMouseLeave);\n  };\n\n  useEffect(() => {\n    if (previousIndex.current === currentIndex) return;\n    previousIndex.current = currentIndex;\n    emit(props, 'select', currentIndex);\n    setTooltip();\n  }, [currentIndex]);\n  useEffect(() => {\n    attachEvents();\n    return detachEvents;\n  });\n  useEffect(() => {\n    return () => {\n      if (f7Tooltip.current && f7Tooltip.current.destroy) {\n        f7Tooltip.current.destroy();\n      }\n\n      f7Tooltip.current = null;\n    };\n  }, []);\n  const classes = classNames('area-chart', className);\n  const chartData = getChartData();\n  const verticalLines = getVerticalLines();\n  const visibleLegends = getVisibleLegends();\n  const LegendItemTag = toggleDatasets ? 'button' : 'span';\n  const ChartTag = lineChart ? 'path' : 'polygon';\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    id: id,\n    style: style,\n    className: classes,\n    ref: elRef\n  }, extraAttrs), /*#__PURE__*/React.createElement(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: width,\n    height: height,\n    viewBox: `0 0 ${width} ${height}`,\n    preserveAspectRatio: \"none\",\n    ref: svgElRef\n  }, chartData.map((data, index) => /*#__PURE__*/React.createElement(ChartTag, {\n    key: `${ChartTag}-${index}`,\n    fill: lineChart ? undefined : data.color,\n    stroke: lineChart ? data.color : undefined,\n    fillRule: \"evenodd\",\n    points: lineChart ? undefined : data.points,\n    d: lineChart ? data.points : undefined\n  })), verticalLines.map((line, index) => /*#__PURE__*/React.createElement(\"line\", {\n    key: `line-${index}`,\n    \"data-index\": index,\n    fill: \"#000\",\n    x1: line,\n    y1: 0,\n    x2: line,\n    y2: height,\n    className: classNames({\n      'area-chart-current-line': currentIndex === index\n    })\n  }))), axis && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"area-chart-axis\"\n  }, axisLabels.map((label, index) => /*#__PURE__*/React.createElement(\"span\", {\n    key: index\n  }, visibleLegends.includes(label) && /*#__PURE__*/React.createElement(\"span\", null, formatAxisLabel(label))))), legend && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"area-chart-legend\"\n  }, datasets.map((dataset, index) => /*#__PURE__*/React.createElement(LegendItemTag, {\n    key: index,\n    className: classNames('area-chart-legend-item', {\n      'area-chart-legend-item-hidden': hiddenDatasets.includes(index),\n      'area-chart-legend-button': toggleDatasets\n    }),\n    type: toggleDatasets ? 'button' : undefined,\n    onClick: () => toggleDataset(index)\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      backgroundColor: dataset.color\n    }\n  }), formatLegendLabel(dataset.label)))), children);\n});\nAreaChart.displayName = 'f7-area-chart';\nexport default AreaChart;"],"mappings":"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"},"metadata":{},"sourceType":"module"}