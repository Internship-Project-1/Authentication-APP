{"ast":null,"code":"function processQueue(router, routerQueue, routeQueue, to, from, resolve, reject, direction) {\n  const queue = [];\n\n  if (Array.isArray(routeQueue)) {\n    queue.push(...routeQueue);\n  } else if (routeQueue && typeof routeQueue === 'function') {\n    queue.push(routeQueue);\n  }\n\n  if (routerQueue) {\n    if (Array.isArray(routerQueue)) {\n      queue.push(...routerQueue);\n    } else {\n      queue.push(routerQueue);\n    }\n  }\n\n  function next() {\n    if (queue.length === 0) {\n      resolve();\n      return;\n    }\n\n    const queueItem = queue.shift();\n    queueItem.call(router, {\n      router,\n      to,\n      from,\n\n      resolve() {\n        next();\n      },\n\n      reject() {\n        reject();\n      },\n\n      direction,\n      app: router.app\n    });\n  }\n\n  next();\n}\n\nexport default function processRouteQueue(to, from, resolve, reject, direction) {\n  const router = this;\n\n  function enterNextRoute() {\n    if (to && to.route && (router.params.routesBeforeEnter || to.route.beforeEnter)) {\n      router.allowPageChange = false;\n      processQueue(router, router.params.routesBeforeEnter, to.route.beforeEnter, to, from, () => {\n        router.allowPageChange = true;\n        resolve();\n      }, () => {\n        reject();\n      }, direction);\n    } else {\n      resolve();\n    }\n  }\n\n  function leaveCurrentRoute() {\n    if (from && from.route && (router.params.routesBeforeLeave || from.route.beforeLeave)) {\n      router.allowPageChange = false;\n      processQueue(router, router.params.routesBeforeLeave, from.route.beforeLeave, to, from, () => {\n        router.allowPageChange = true;\n        enterNextRoute();\n      }, () => {\n        reject();\n      }, direction);\n    } else {\n      enterNextRoute();\n    }\n  }\n\n  leaveCurrentRoute();\n}","map":{"version":3,"names":["processQueue","router","routerQueue","routeQueue","to","from","resolve","reject","direction","queue","Array","isArray","push","next","length","queueItem","shift","call","app","processRouteQueue","enterNextRoute","route","params","routesBeforeEnter","beforeEnter","allowPageChange","leaveCurrentRoute","routesBeforeLeave","beforeLeave"],"sources":["C:/Users/Babak/userlogin/node_modules/framework7/modules/router/process-route-queue.js"],"sourcesContent":["function processQueue(router, routerQueue, routeQueue, to, from, resolve, reject, direction) {\n  const queue = [];\n\n  if (Array.isArray(routeQueue)) {\n    queue.push(...routeQueue);\n  } else if (routeQueue && typeof routeQueue === 'function') {\n    queue.push(routeQueue);\n  }\n\n  if (routerQueue) {\n    if (Array.isArray(routerQueue)) {\n      queue.push(...routerQueue);\n    } else {\n      queue.push(routerQueue);\n    }\n  }\n\n  function next() {\n    if (queue.length === 0) {\n      resolve();\n      return;\n    }\n\n    const queueItem = queue.shift();\n    queueItem.call(router, {\n      router,\n      to,\n      from,\n\n      resolve() {\n        next();\n      },\n\n      reject() {\n        reject();\n      },\n\n      direction,\n      app: router.app\n    });\n  }\n\n  next();\n}\n\nexport default function processRouteQueue(to, from, resolve, reject, direction) {\n  const router = this;\n\n  function enterNextRoute() {\n    if (to && to.route && (router.params.routesBeforeEnter || to.route.beforeEnter)) {\n      router.allowPageChange = false;\n      processQueue(router, router.params.routesBeforeEnter, to.route.beforeEnter, to, from, () => {\n        router.allowPageChange = true;\n        resolve();\n      }, () => {\n        reject();\n      }, direction);\n    } else {\n      resolve();\n    }\n  }\n\n  function leaveCurrentRoute() {\n    if (from && from.route && (router.params.routesBeforeLeave || from.route.beforeLeave)) {\n      router.allowPageChange = false;\n      processQueue(router, router.params.routesBeforeLeave, from.route.beforeLeave, to, from, () => {\n        router.allowPageChange = true;\n        enterNextRoute();\n      }, () => {\n        reject();\n      }, direction);\n    } else {\n      enterNextRoute();\n    }\n  }\n\n  leaveCurrentRoute();\n}"],"mappings":"AAAA,SAASA,YAAT,CAAsBC,MAAtB,EAA8BC,WAA9B,EAA2CC,UAA3C,EAAuDC,EAAvD,EAA2DC,IAA3D,EAAiEC,OAAjE,EAA0EC,MAA1E,EAAkFC,SAAlF,EAA6F;EAC3F,MAAMC,KAAK,GAAG,EAAd;;EAEA,IAAIC,KAAK,CAACC,OAAN,CAAcR,UAAd,CAAJ,EAA+B;IAC7BM,KAAK,CAACG,IAAN,CAAW,GAAGT,UAAd;EACD,CAFD,MAEO,IAAIA,UAAU,IAAI,OAAOA,UAAP,KAAsB,UAAxC,EAAoD;IACzDM,KAAK,CAACG,IAAN,CAAWT,UAAX;EACD;;EAED,IAAID,WAAJ,EAAiB;IACf,IAAIQ,KAAK,CAACC,OAAN,CAAcT,WAAd,CAAJ,EAAgC;MAC9BO,KAAK,CAACG,IAAN,CAAW,GAAGV,WAAd;IACD,CAFD,MAEO;MACLO,KAAK,CAACG,IAAN,CAAWV,WAAX;IACD;EACF;;EAED,SAASW,IAAT,GAAgB;IACd,IAAIJ,KAAK,CAACK,MAAN,KAAiB,CAArB,EAAwB;MACtBR,OAAO;MACP;IACD;;IAED,MAAMS,SAAS,GAAGN,KAAK,CAACO,KAAN,EAAlB;IACAD,SAAS,CAACE,IAAV,CAAehB,MAAf,EAAuB;MACrBA,MADqB;MAErBG,EAFqB;MAGrBC,IAHqB;;MAKrBC,OAAO,GAAG;QACRO,IAAI;MACL,CAPoB;;MASrBN,MAAM,GAAG;QACPA,MAAM;MACP,CAXoB;;MAarBC,SAbqB;MAcrBU,GAAG,EAAEjB,MAAM,CAACiB;IAdS,CAAvB;EAgBD;;EAEDL,IAAI;AACL;;AAED,eAAe,SAASM,iBAAT,CAA2Bf,EAA3B,EAA+BC,IAA/B,EAAqCC,OAArC,EAA8CC,MAA9C,EAAsDC,SAAtD,EAAiE;EAC9E,MAAMP,MAAM,GAAG,IAAf;;EAEA,SAASmB,cAAT,GAA0B;IACxB,IAAIhB,EAAE,IAAIA,EAAE,CAACiB,KAAT,KAAmBpB,MAAM,CAACqB,MAAP,CAAcC,iBAAd,IAAmCnB,EAAE,CAACiB,KAAH,CAASG,WAA/D,CAAJ,EAAiF;MAC/EvB,MAAM,CAACwB,eAAP,GAAyB,KAAzB;MACAzB,YAAY,CAACC,MAAD,EAASA,MAAM,CAACqB,MAAP,CAAcC,iBAAvB,EAA0CnB,EAAE,CAACiB,KAAH,CAASG,WAAnD,EAAgEpB,EAAhE,EAAoEC,IAApE,EAA0E,MAAM;QAC1FJ,MAAM,CAACwB,eAAP,GAAyB,IAAzB;QACAnB,OAAO;MACR,CAHW,EAGT,MAAM;QACPC,MAAM;MACP,CALW,EAKTC,SALS,CAAZ;IAMD,CARD,MAQO;MACLF,OAAO;IACR;EACF;;EAED,SAASoB,iBAAT,GAA6B;IAC3B,IAAIrB,IAAI,IAAIA,IAAI,CAACgB,KAAb,KAAuBpB,MAAM,CAACqB,MAAP,CAAcK,iBAAd,IAAmCtB,IAAI,CAACgB,KAAL,CAAWO,WAArE,CAAJ,EAAuF;MACrF3B,MAAM,CAACwB,eAAP,GAAyB,KAAzB;MACAzB,YAAY,CAACC,MAAD,EAASA,MAAM,CAACqB,MAAP,CAAcK,iBAAvB,EAA0CtB,IAAI,CAACgB,KAAL,CAAWO,WAArD,EAAkExB,EAAlE,EAAsEC,IAAtE,EAA4E,MAAM;QAC5FJ,MAAM,CAACwB,eAAP,GAAyB,IAAzB;QACAL,cAAc;MACf,CAHW,EAGT,MAAM;QACPb,MAAM;MACP,CALW,EAKTC,SALS,CAAZ;IAMD,CARD,MAQO;MACLY,cAAc;IACf;EACF;;EAEDM,iBAAiB;AAClB"},"metadata":{},"sourceType":"module"}