{"ast":null,"code":"import { getWindow, getDocument } from 'ssr-window';\nimport $ from '../../shared/dom7.js';\nimport { extend, deleteProps } from '../../shared/utils.js';\nimport Framework7Class from '../../shared/class.js';\nimport { getDevice } from '../../shared/get-device.js';\nconst textEditorButtonsMap = {\n  // f7-icon, material-icon, command\n  bold: ['bold', 'format_bold', 'bold'],\n  italic: ['italic', 'format_italic', 'italic'],\n  underline: ['underline', 'format_underlined', 'underline'],\n  strikeThrough: ['strikethrough', 'strikethrough_s', 'strikeThrough'],\n  orderedList: ['list_number', 'format_list_numbered', 'insertOrderedList'],\n  unorderedList: ['list_bullet', 'format_list_bulleted', 'insertUnorderedList'],\n  link: ['link', 'link', 'createLink'],\n  image: ['photo', 'image', 'insertImage'],\n  paragraph: ['paragraph', '<i class=\"icon\">Â¶</i>', 'formatBlock.P'],\n  h1: ['<i class=\"icon\">H<sub>1</sub></i>', '<i class=\"icon\">H<sub>1</sub></i>', 'formatBlock.H1'],\n  h2: ['<i class=\"icon\">H<sub>2</sub></i>', '<i class=\"icon\">H<sub>2</sub></i>', 'formatBlock.H2'],\n  h3: ['<i class=\"icon\">H<sub>3</sub></i>', '<i class=\"icon\">H<sub>3</sub></i>', 'formatBlock.H3'],\n  alignLeft: ['text_alignleft', 'format_align_left', 'justifyLeft'],\n  alignCenter: ['text_aligncenter', 'format_align_center', 'justifyCenter'],\n  alignRight: ['text_alignright', 'format_align_right', 'justifyRight'],\n  alignJustify: ['text_justify', 'format_align_justify', 'justifyFull'],\n  subscript: ['textformat_subscript', '<i class=\"icon\">A<sub>1</sub></i>', 'subscript'],\n  superscript: ['textformat_superscript', '<i class=\"icon\">A<sup>1</sup></i>', 'superscript'],\n  indent: ['increase_indent', 'format_indent_increase', 'indent'],\n  outdent: ['decrease_indent', 'format_indent_decrease', 'outdent']\n};\n\nclass TextEditor extends Framework7Class {\n  constructor(app, params) {\n    super(params, [app]);\n    const self = this;\n    const document = getDocument();\n    const device = getDevice();\n    const defaults = extend({}, app.params.textEditor); // Extend defaults with modules params\n\n    self.useModulesParams(defaults);\n    self.params = extend(defaults, params);\n    const el = self.params.el;\n    if (!el) return self;\n    const $el = $(el);\n    if ($el.length === 0) return self;\n    if ($el[0].f7TextEditor) return $el[0].f7TextEditor;\n    let $contentEl = $el.children('.text-editor-content');\n\n    if (!$contentEl.length) {\n      $el.append('<div class=\"text-editor-content\" contenteditable></div>');\n      $contentEl = $el.children('.text-editor-content');\n    }\n\n    extend(self, {\n      app,\n      $el,\n      el: $el[0],\n      $contentEl,\n      contentEl: $contentEl[0]\n    });\n\n    if ('value' in params) {\n      self.value = self.params.value;\n    }\n\n    if (self.params.mode === 'keyboard-toolbar') {\n      if (!(device.cordova || device.capacitor) && !device.android) {\n        self.params.mode = 'popover';\n      }\n    }\n\n    if (typeof self.params.buttons === 'string') {\n      try {\n        self.params.buttons = JSON.parse(self.params.buttons);\n      } catch (err) {\n        throw new Error('Framework7: TextEditor: wrong \"buttons\" parameter format');\n      }\n    }\n\n    $el[0].f7TextEditor = self; // Bind\n\n    self.onButtonClick = self.onButtonClick.bind(self);\n    self.onFocus = self.onFocus.bind(self);\n    self.onBlur = self.onBlur.bind(self);\n    self.onInput = self.onInput.bind(self);\n    self.onPaste = self.onPaste.bind(self);\n    self.onSelectionChange = self.onSelectionChange.bind(self);\n    self.closeKeyboardToolbar = self.closeKeyboardToolbar.bind(self); // Handle Events\n\n    self.attachEvents = function attachEvents() {\n      if (self.params.mode === 'toolbar') {\n        self.$el.find('.text-editor-toolbar').on('click', 'button', self.onButtonClick);\n      }\n\n      if (self.params.mode === 'keyboard-toolbar') {\n        self.$keyboardToolbarEl.on('click', 'button', self.onButtonClick);\n        self.$el.parents('.page').on('page:beforeout', self.closeKeyboardToolbar);\n      }\n\n      if (self.params.mode === 'popover' && self.popover) {\n        self.popover.$el.on('click', 'button', self.onButtonClick);\n      }\n\n      self.$contentEl.on('paste', self.onPaste);\n      self.$contentEl.on('focus', self.onFocus);\n      self.$contentEl.on('blur', self.onBlur);\n      self.$contentEl.on('input', self.onInput, true);\n      $(document).on('selectionchange', self.onSelectionChange);\n    };\n\n    self.detachEvents = function detachEvents() {\n      if (self.params.mode === 'toolbar') {\n        self.$el.find('.text-editor-toolbar').off('click', 'button', self.onButtonClick);\n      }\n\n      if (self.params.mode === 'keyboard-toolbar') {\n        self.$keyboardToolbarEl.off('click', 'button', self.onButtonClick);\n        self.$el.parents('.page').off('page:beforeout', self.closeKeyboardToolbar);\n      }\n\n      if (self.params.mode === 'popover' && self.popover) {\n        self.popover.$el.off('click', 'button', self.onButtonClick);\n      }\n\n      self.$contentEl.off('paste', self.onPaste);\n      self.$contentEl.off('focus', self.onFocus);\n      self.$contentEl.off('blur', self.onBlur);\n      self.$contentEl.off('input', self.onInput, true);\n      $(document).off('selectionchange', self.onSelectionChange);\n    }; // Install Modules\n\n\n    self.useModules(); // Init\n\n    self.init();\n    return self;\n  }\n\n  setValue(newValue) {\n    const self = this;\n    const currentValue = self.value;\n    if (currentValue === newValue) return self;\n    self.value = newValue;\n    self.$contentEl.html(newValue);\n    self.$el.trigger('texteditor:change', self.value);\n    self.emit('local::change textEditorChange', self, self.value);\n    return self;\n  }\n\n  getValue() {\n    const self = this;\n    return self.value;\n  }\n\n  clearValue() {\n    const self = this;\n    self.setValue('');\n\n    if (self.params.placeholder && !self.$contentEl.html()) {\n      self.insertPlaceholder();\n    }\n\n    return self;\n  }\n\n  createLink() {\n    const self = this;\n    const window = getWindow();\n    const document = getDocument();\n    const currentSelection = window.getSelection();\n    const selectedNodes = [];\n    let $selectedLinks;\n\n    if (currentSelection && currentSelection.anchorNode && $(currentSelection.anchorNode).parents(self.$el).length) {\n      let anchorNode = currentSelection.anchorNode;\n\n      while (anchorNode) {\n        selectedNodes.push(anchorNode);\n\n        if (!anchorNode.nextSibling || anchorNode === currentSelection.focusNode) {\n          anchorNode = null;\n        }\n\n        if (anchorNode) {\n          anchorNode = anchorNode.nextSibling;\n        }\n      }\n\n      const selectedNodesLinks = [];\n      const $selectedNodes = $(selectedNodes);\n\n      for (let i = 0; i < $selectedNodes.length; i += 1) {\n        const childNodes = $selectedNodes[i].children;\n\n        if (childNodes) {\n          for (let j = 0; j < childNodes.length; j += 1) {\n            if ($(childNodes[j]).is('a')) {\n              selectedNodesLinks.push(childNodes[j]);\n            }\n          }\n        }\n      }\n\n      $selectedLinks = $selectedNodes.closest('a').add($(selectedNodesLinks));\n    }\n\n    if ($selectedLinks && $selectedLinks.length) {\n      $selectedLinks.each(linkNode => {\n        const selection = window.getSelection();\n        const range = document.createRange();\n        range.selectNodeContents(linkNode);\n        selection.removeAllRanges();\n        selection.addRange(range);\n        document.execCommand('unlink', false);\n        selection.removeAllRanges();\n      });\n      return self;\n    }\n\n    const currentRange = self.getSelectionRange();\n    if (!currentRange) return self;\n    const dialog = self.app.dialog.prompt(self.params.linkUrlText, '', link => {\n      if (link && link.trim().length) {\n        self.setSelectionRange(currentRange);\n        document.execCommand('createLink', false, link.trim());\n        self.$el.trigger('texteditor:insertlink', {\n          url: link.trim()\n        });\n        self.emit('local:insertLink textEditorInsertLink', self, link.trim());\n      }\n    });\n    dialog.$el.find('input').focus();\n    return self;\n  }\n\n  insertImage() {\n    const self = this;\n    const document = getDocument();\n    const currentRange = self.getSelectionRange();\n    if (!currentRange) return self;\n    const dialog = self.app.dialog.prompt(self.params.imageUrlText, '', imageUrl => {\n      if (imageUrl && imageUrl.trim().length) {\n        self.setSelectionRange(currentRange);\n        document.execCommand('insertImage', false, imageUrl.trim());\n        self.$el.trigger('texteditor:insertimage', {\n          url: imageUrl.trim()\n        });\n        self.emit('local:insertImage textEditorInsertImage', self, imageUrl.trim());\n      }\n    });\n    dialog.$el.find('input').focus();\n    return self;\n  }\n\n  removePlaceholder() {\n    const self = this;\n    self.$contentEl.find('.text-editor-placeholder').remove();\n  }\n\n  insertPlaceholder() {\n    const self = this;\n    self.$contentEl.append(`<div class=\"text-editor-placeholder\">${self.params.placeholder}</div>`);\n  }\n\n  onSelectionChange() {\n    const self = this;\n    const window = getWindow();\n    const document = getDocument();\n    if (self.params.mode === 'toolbar') return;\n    const selection = window.getSelection();\n    const selectionIsInContent = $(selection.anchorNode).parents(self.contentEl).length || selection.anchorNode === self.contentEl;\n\n    if (self.params.mode === 'keyboard-toolbar') {\n      if (!selectionIsInContent) {\n        self.closeKeyboardToolbar();\n      } else {\n        self.openKeyboardToolbar();\n      }\n\n      return;\n    }\n\n    if (self.params.mode === 'popover') {\n      const selectionIsInPopover = $(selection.anchorNode).parents(self.popover.el).length || selection.anchorNode === self.popover.el;\n\n      if (!selectionIsInContent && !selectionIsInPopover) {\n        self.closePopover();\n        return;\n      }\n\n      if (!selection.isCollapsed && selection.rangeCount) {\n        const range = selection.getRangeAt(0);\n        const rect = range.getBoundingClientRect();\n        const rootEl = self.app.$el[0] || document.body;\n        self.openPopover(rect.x + (window.scrollX || 0) - rootEl.offsetLeft, rect.y + (window.scrollY || 0) - rootEl.offsetTop, rect.width, rect.height);\n      } else if (selection.isCollapsed) {\n        self.closePopover();\n      }\n    }\n  }\n\n  onPaste(e) {\n    const self = this;\n    const document = getDocument();\n\n    if (self.params.clearFormattingOnPaste && e.clipboardData && e.clipboardData.getData) {\n      const text = e.clipboardData.getData('text/plain');\n      e.preventDefault();\n      document.execCommand('insertText', false, text);\n    }\n  }\n\n  onInput() {\n    const self = this;\n    const value = self.$contentEl.html();\n    self.value = value;\n    self.$el.trigger('texteditor:input');\n    self.emit('local:input textEditorInput', self, self.value);\n    self.$el.trigger('texteditor:change', self.value);\n    self.emit('local::change textEditorChange', self, self.value);\n  }\n\n  onFocus() {\n    const self = this;\n    self.removePlaceholder();\n    self.$contentEl.focus();\n    self.$el.trigger('texteditor:focus');\n    self.emit('local::focus textEditorFocus', self);\n  }\n\n  onBlur() {\n    const self = this;\n    const window = getWindow();\n    const document = getDocument();\n\n    if (self.params.placeholder && self.$contentEl.html() === '') {\n      self.insertPlaceholder();\n    }\n\n    if (self.params.mode === 'popover') {\n      const selection = window.getSelection();\n      const selectionIsInContent = $(selection.anchorNode).parents(self.contentEl).length || selection.anchorNode === self.contentEl;\n      const inPopover = document.activeElement && self.popover && $(document.activeElement).closest(self.popover.$el).length;\n\n      if (!inPopover && !selectionIsInContent) {\n        self.closePopover();\n      }\n    }\n\n    if (self.params.mode === 'keyboard-toolbar') {\n      const selection = window.getSelection();\n      const selectionIsInContent = $(selection.anchorNode).parents(self.contentEl).length || selection.anchorNode === self.contentEl;\n\n      if (!selectionIsInContent) {\n        self.closeKeyboardToolbar();\n      }\n    }\n\n    self.$el.trigger('texteditor:blur');\n    self.emit('local::blur textEditorBlur', self);\n  }\n\n  onButtonClick(e) {\n    const self = this;\n    const window = getWindow();\n    const document = getDocument();\n    const selection = window.getSelection();\n    const selectionIsInContent = $(selection.anchorNode).parents(self.contentEl).length || selection.anchorNode === self.contentEl;\n    if (!selectionIsInContent) return;\n    const $buttonEl = $(e.target).closest('button');\n\n    if ($buttonEl.parents('form').length) {\n      e.preventDefault();\n    }\n\n    const button = $buttonEl.attr('data-button');\n    const buttonData = self.params.customButtons && self.params.customButtons[button];\n    if (!button || !(textEditorButtonsMap[button] || buttonData)) return;\n    $buttonEl.trigger('texteditor:buttonclick', button);\n    self.emit('local::buttonClick textEditorButtonClick', self, button);\n\n    if (buttonData) {\n      if (buttonData.onClick) buttonData.onClick(self, $buttonEl[0]);\n      return;\n    }\n\n    const command = textEditorButtonsMap[button][2];\n\n    if (command === 'createLink') {\n      self.createLink();\n      return;\n    }\n\n    if (command === 'insertImage') {\n      self.insertImage();\n      return;\n    }\n\n    if (command.indexOf('formatBlock') === 0) {\n      const tagName = command.split('.')[1];\n      const $anchorNode = $(selection.anchorNode);\n\n      if ($anchorNode.parents(tagName.toLowerCase()).length || $anchorNode.is(tagName)) {\n        document.execCommand('formatBlock', false, 'div');\n      } else {\n        document.execCommand('formatBlock', false, tagName);\n      }\n\n      return;\n    }\n\n    document.execCommand(command, false);\n  } // eslint-disable-next-line\n\n\n  getSelectionRange() {\n    const window = getWindow();\n    const document = getDocument();\n\n    if (window.getSelection) {\n      const sel = window.getSelection();\n\n      if (sel.getRangeAt && sel.rangeCount) {\n        return sel.getRangeAt(0);\n      }\n    } else if (document.selection && document.selection.createRange) {\n      return document.selection.createRange();\n    }\n\n    return null;\n  } // eslint-disable-next-line\n\n\n  setSelectionRange(range) {\n    const window = getWindow();\n    const document = getDocument();\n\n    if (range) {\n      if (window.getSelection) {\n        const sel = window.getSelection();\n        sel.removeAllRanges();\n        sel.addRange(range);\n      } else if (document.selection && range.select) {\n        range.select();\n      }\n    }\n  }\n\n  renderButtons() {\n    const self = this;\n    let html = '';\n\n    function renderButton(button) {\n      const iconClass = self.app.theme === 'md' ? 'material-icons' : 'f7-icons';\n\n      if (self.params.customButtons && self.params.customButtons[button]) {\n        const buttonData = self.params.customButtons[button];\n        return `<button type=\"button\" class=\"text-editor-button\" data-button=\"${button}\">${buttonData.content || ''}</button>`;\n      }\n\n      if (!textEditorButtonsMap[button]) return '';\n      const iconContent = textEditorButtonsMap[button][self.app.theme === 'md' ? 1 : 0];\n      return `<button type=\"button\" class=\"text-editor-button\" data-button=\"${button}\">${iconContent.indexOf('<') >= 0 ? iconContent : `<i class=\"${iconClass}\">${iconContent}</i>`}</button>`.trim();\n    }\n\n    self.params.buttons.forEach((button, buttonIndex) => {\n      if (Array.isArray(button)) {\n        button.forEach(b => {\n          html += renderButton(b);\n        });\n\n        if (buttonIndex < self.params.buttons.length - 1 && self.params.dividers) {\n          html += '<div class=\"text-editor-button-divider\"></div>';\n        }\n      } else {\n        html += renderButton(button);\n      }\n    });\n    return html;\n  }\n\n  createToolbar() {\n    const self = this;\n    self.$el.prepend(`<div class=\"text-editor-toolbar\">${self.renderButtons()}</div>`);\n  }\n\n  createKeyboardToolbar() {\n    const self = this;\n    self.$keyboardToolbarEl = $(`<div class=\"toolbar toolbar-bottom text-editor-keyboard-toolbar\"><div class=\"toolbar-inner\">${self.renderButtons()}</div></div>`);\n  }\n\n  createPopover() {\n    const self = this;\n    self.popover = self.app.popover.create({\n      content: `\n        <div class=\"popover dark text-editor-popover\">\n          <div class=\"popover-inner\">${self.renderButtons()}</div>\n        </div>\n      `,\n      closeByOutsideClick: false,\n      backdrop: false\n    });\n  }\n\n  openKeyboardToolbar() {\n    const self = this;\n    if (self.$keyboardToolbarEl.parent(self.app.$el).length) return;\n    self.$el.trigger('texteditor:keyboardopen');\n    self.emit('local::keyboardOpen textEditorKeyboardOpen', self);\n    self.app.$el.append(self.$keyboardToolbarEl);\n  }\n\n  closeKeyboardToolbar() {\n    const self = this;\n    self.$keyboardToolbarEl.remove();\n    self.$el.trigger('texteditor:keyboardclose');\n    self.emit('local::keyboardClose textEditorKeyboardClose', self);\n  }\n\n  openPopover(targetX, targetY, targetWidth, targetHeight) {\n    const self = this;\n    if (!self.popover) return;\n    Object.assign(self.popover.params, {\n      targetX,\n      targetY,\n      targetWidth,\n      targetHeight\n    });\n    clearTimeout(self.popoverTimeout);\n    self.popoverTimeout = setTimeout(() => {\n      if (!self.popover) return;\n\n      if (self.popover.opened) {\n        self.popover.resize();\n      } else {\n        self.$el.trigger('texteditor:popoveropen');\n        self.emit('local::popoverOpen textEditorPopoverOpen', self);\n        self.popover.open();\n      }\n    }, 400);\n  }\n\n  closePopover() {\n    const self = this;\n    clearTimeout(self.popoverTimeout);\n    if (!self.popover || !self.popover.opened) return;\n    self.popoverTimeout = setTimeout(() => {\n      if (!self.popover) return;\n      self.$el.trigger('texteditor:popoverclose');\n      self.emit('local::popoverClose textEditorPopoverClose', self);\n      self.popover.close();\n    }, 400);\n  }\n\n  init() {\n    const self = this;\n\n    if (self.value) {\n      self.$contentEl.html(self.value);\n    } else {\n      self.value = self.$contentEl.html();\n    }\n\n    if (self.params.placeholder && self.value === '') {\n      self.insertPlaceholder();\n    }\n\n    if (self.params.mode === 'toolbar') {\n      self.createToolbar();\n    } else if (self.params.mode === 'popover') {\n      self.createPopover();\n    } else if (self.params.mode === 'keyboard-toolbar') {\n      self.createKeyboardToolbar();\n    }\n\n    self.attachEvents();\n    self.$el.trigger('texteditor:init');\n    self.emit('local::init textEditorInit', self);\n    return self;\n  }\n\n  destroy() {\n    let self = this;\n    self.$el.trigger('texteditor:beforedestroy');\n    self.emit('local::beforeDestroy textEditorBeforeDestroy', self);\n    self.detachEvents();\n\n    if (self.params.mode === 'keyboard-toolbar' && self.$keyboardToolbarEl) {\n      self.$keyboardToolbarEl.remove();\n    }\n\n    if (self.popover) {\n      self.popover.close(false);\n      self.popover.destroy();\n    }\n\n    delete self.$el[0].f7TextEditor;\n    deleteProps(self);\n    self = null;\n  }\n\n}\n\nexport default TextEditor;","map":{"version":3,"names":["getWindow","getDocument","$","extend","deleteProps","Framework7Class","getDevice","textEditorButtonsMap","bold","italic","underline","strikeThrough","orderedList","unorderedList","link","image","paragraph","h1","h2","h3","alignLeft","alignCenter","alignRight","alignJustify","subscript","superscript","indent","outdent","TextEditor","constructor","app","params","self","document","device","defaults","textEditor","useModulesParams","el","$el","length","f7TextEditor","$contentEl","children","append","contentEl","value","mode","cordova","capacitor","android","buttons","JSON","parse","err","Error","onButtonClick","bind","onFocus","onBlur","onInput","onPaste","onSelectionChange","closeKeyboardToolbar","attachEvents","find","on","$keyboardToolbarEl","parents","popover","detachEvents","off","useModules","init","setValue","newValue","currentValue","html","trigger","emit","getValue","clearValue","placeholder","insertPlaceholder","createLink","window","currentSelection","getSelection","selectedNodes","$selectedLinks","anchorNode","push","nextSibling","focusNode","selectedNodesLinks","$selectedNodes","i","childNodes","j","is","closest","add","each","linkNode","selection","range","createRange","selectNodeContents","removeAllRanges","addRange","execCommand","currentRange","getSelectionRange","dialog","prompt","linkUrlText","trim","setSelectionRange","url","focus","insertImage","imageUrlText","imageUrl","removePlaceholder","remove","selectionIsInContent","openKeyboardToolbar","selectionIsInPopover","closePopover","isCollapsed","rangeCount","getRangeAt","rect","getBoundingClientRect","rootEl","body","openPopover","x","scrollX","offsetLeft","y","scrollY","offsetTop","width","height","e","clearFormattingOnPaste","clipboardData","getData","text","preventDefault","inPopover","activeElement","$buttonEl","target","button","attr","buttonData","customButtons","onClick","command","indexOf","tagName","split","$anchorNode","toLowerCase","sel","select","renderButtons","renderButton","iconClass","theme","content","iconContent","forEach","buttonIndex","Array","isArray","b","dividers","createToolbar","prepend","createKeyboardToolbar","createPopover","create","closeByOutsideClick","backdrop","parent","targetX","targetY","targetWidth","targetHeight","Object","assign","clearTimeout","popoverTimeout","setTimeout","opened","resize","open","close","destroy"],"sources":["C:/Users/Babak/userlogin/node_modules/framework7/components/text-editor/text-editor-class.js"],"sourcesContent":["import { getWindow, getDocument } from 'ssr-window';\nimport $ from '../../shared/dom7.js';\nimport { extend, deleteProps } from '../../shared/utils.js';\nimport Framework7Class from '../../shared/class.js';\nimport { getDevice } from '../../shared/get-device.js';\nconst textEditorButtonsMap = {\n  // f7-icon, material-icon, command\n  bold: ['bold', 'format_bold', 'bold'],\n  italic: ['italic', 'format_italic', 'italic'],\n  underline: ['underline', 'format_underlined', 'underline'],\n  strikeThrough: ['strikethrough', 'strikethrough_s', 'strikeThrough'],\n  orderedList: ['list_number', 'format_list_numbered', 'insertOrderedList'],\n  unorderedList: ['list_bullet', 'format_list_bulleted', 'insertUnorderedList'],\n  link: ['link', 'link', 'createLink'],\n  image: ['photo', 'image', 'insertImage'],\n  paragraph: ['paragraph', '<i class=\"icon\">Â¶</i>', 'formatBlock.P'],\n  h1: ['<i class=\"icon\">H<sub>1</sub></i>', '<i class=\"icon\">H<sub>1</sub></i>', 'formatBlock.H1'],\n  h2: ['<i class=\"icon\">H<sub>2</sub></i>', '<i class=\"icon\">H<sub>2</sub></i>', 'formatBlock.H2'],\n  h3: ['<i class=\"icon\">H<sub>3</sub></i>', '<i class=\"icon\">H<sub>3</sub></i>', 'formatBlock.H3'],\n  alignLeft: ['text_alignleft', 'format_align_left', 'justifyLeft'],\n  alignCenter: ['text_aligncenter', 'format_align_center', 'justifyCenter'],\n  alignRight: ['text_alignright', 'format_align_right', 'justifyRight'],\n  alignJustify: ['text_justify', 'format_align_justify', 'justifyFull'],\n  subscript: ['textformat_subscript', '<i class=\"icon\">A<sub>1</sub></i>', 'subscript'],\n  superscript: ['textformat_superscript', '<i class=\"icon\">A<sup>1</sup></i>', 'superscript'],\n  indent: ['increase_indent', 'format_indent_increase', 'indent'],\n  outdent: ['decrease_indent', 'format_indent_decrease', 'outdent']\n};\n\nclass TextEditor extends Framework7Class {\n  constructor(app, params) {\n    super(params, [app]);\n    const self = this;\n    const document = getDocument();\n    const device = getDevice();\n    const defaults = extend({}, app.params.textEditor); // Extend defaults with modules params\n\n    self.useModulesParams(defaults);\n    self.params = extend(defaults, params);\n    const el = self.params.el;\n    if (!el) return self;\n    const $el = $(el);\n    if ($el.length === 0) return self;\n    if ($el[0].f7TextEditor) return $el[0].f7TextEditor;\n    let $contentEl = $el.children('.text-editor-content');\n\n    if (!$contentEl.length) {\n      $el.append('<div class=\"text-editor-content\" contenteditable></div>');\n      $contentEl = $el.children('.text-editor-content');\n    }\n\n    extend(self, {\n      app,\n      $el,\n      el: $el[0],\n      $contentEl,\n      contentEl: $contentEl[0]\n    });\n\n    if ('value' in params) {\n      self.value = self.params.value;\n    }\n\n    if (self.params.mode === 'keyboard-toolbar') {\n      if (!(device.cordova || device.capacitor) && !device.android) {\n        self.params.mode = 'popover';\n      }\n    }\n\n    if (typeof self.params.buttons === 'string') {\n      try {\n        self.params.buttons = JSON.parse(self.params.buttons);\n      } catch (err) {\n        throw new Error('Framework7: TextEditor: wrong \"buttons\" parameter format');\n      }\n    }\n\n    $el[0].f7TextEditor = self; // Bind\n\n    self.onButtonClick = self.onButtonClick.bind(self);\n    self.onFocus = self.onFocus.bind(self);\n    self.onBlur = self.onBlur.bind(self);\n    self.onInput = self.onInput.bind(self);\n    self.onPaste = self.onPaste.bind(self);\n    self.onSelectionChange = self.onSelectionChange.bind(self);\n    self.closeKeyboardToolbar = self.closeKeyboardToolbar.bind(self); // Handle Events\n\n    self.attachEvents = function attachEvents() {\n      if (self.params.mode === 'toolbar') {\n        self.$el.find('.text-editor-toolbar').on('click', 'button', self.onButtonClick);\n      }\n\n      if (self.params.mode === 'keyboard-toolbar') {\n        self.$keyboardToolbarEl.on('click', 'button', self.onButtonClick);\n        self.$el.parents('.page').on('page:beforeout', self.closeKeyboardToolbar);\n      }\n\n      if (self.params.mode === 'popover' && self.popover) {\n        self.popover.$el.on('click', 'button', self.onButtonClick);\n      }\n\n      self.$contentEl.on('paste', self.onPaste);\n      self.$contentEl.on('focus', self.onFocus);\n      self.$contentEl.on('blur', self.onBlur);\n      self.$contentEl.on('input', self.onInput, true);\n      $(document).on('selectionchange', self.onSelectionChange);\n    };\n\n    self.detachEvents = function detachEvents() {\n      if (self.params.mode === 'toolbar') {\n        self.$el.find('.text-editor-toolbar').off('click', 'button', self.onButtonClick);\n      }\n\n      if (self.params.mode === 'keyboard-toolbar') {\n        self.$keyboardToolbarEl.off('click', 'button', self.onButtonClick);\n        self.$el.parents('.page').off('page:beforeout', self.closeKeyboardToolbar);\n      }\n\n      if (self.params.mode === 'popover' && self.popover) {\n        self.popover.$el.off('click', 'button', self.onButtonClick);\n      }\n\n      self.$contentEl.off('paste', self.onPaste);\n      self.$contentEl.off('focus', self.onFocus);\n      self.$contentEl.off('blur', self.onBlur);\n      self.$contentEl.off('input', self.onInput, true);\n      $(document).off('selectionchange', self.onSelectionChange);\n    }; // Install Modules\n\n\n    self.useModules(); // Init\n\n    self.init();\n    return self;\n  }\n\n  setValue(newValue) {\n    const self = this;\n    const currentValue = self.value;\n    if (currentValue === newValue) return self;\n    self.value = newValue;\n    self.$contentEl.html(newValue);\n    self.$el.trigger('texteditor:change', self.value);\n    self.emit('local::change textEditorChange', self, self.value);\n    return self;\n  }\n\n  getValue() {\n    const self = this;\n    return self.value;\n  }\n\n  clearValue() {\n    const self = this;\n    self.setValue('');\n\n    if (self.params.placeholder && !self.$contentEl.html()) {\n      self.insertPlaceholder();\n    }\n\n    return self;\n  }\n\n  createLink() {\n    const self = this;\n    const window = getWindow();\n    const document = getDocument();\n    const currentSelection = window.getSelection();\n    const selectedNodes = [];\n    let $selectedLinks;\n\n    if (currentSelection && currentSelection.anchorNode && $(currentSelection.anchorNode).parents(self.$el).length) {\n      let anchorNode = currentSelection.anchorNode;\n\n      while (anchorNode) {\n        selectedNodes.push(anchorNode);\n\n        if (!anchorNode.nextSibling || anchorNode === currentSelection.focusNode) {\n          anchorNode = null;\n        }\n\n        if (anchorNode) {\n          anchorNode = anchorNode.nextSibling;\n        }\n      }\n\n      const selectedNodesLinks = [];\n      const $selectedNodes = $(selectedNodes);\n\n      for (let i = 0; i < $selectedNodes.length; i += 1) {\n        const childNodes = $selectedNodes[i].children;\n\n        if (childNodes) {\n          for (let j = 0; j < childNodes.length; j += 1) {\n            if ($(childNodes[j]).is('a')) {\n              selectedNodesLinks.push(childNodes[j]);\n            }\n          }\n        }\n      }\n\n      $selectedLinks = $selectedNodes.closest('a').add($(selectedNodesLinks));\n    }\n\n    if ($selectedLinks && $selectedLinks.length) {\n      $selectedLinks.each(linkNode => {\n        const selection = window.getSelection();\n        const range = document.createRange();\n        range.selectNodeContents(linkNode);\n        selection.removeAllRanges();\n        selection.addRange(range);\n        document.execCommand('unlink', false);\n        selection.removeAllRanges();\n      });\n      return self;\n    }\n\n    const currentRange = self.getSelectionRange();\n    if (!currentRange) return self;\n    const dialog = self.app.dialog.prompt(self.params.linkUrlText, '', link => {\n      if (link && link.trim().length) {\n        self.setSelectionRange(currentRange);\n        document.execCommand('createLink', false, link.trim());\n        self.$el.trigger('texteditor:insertlink', {\n          url: link.trim()\n        });\n        self.emit('local:insertLink textEditorInsertLink', self, link.trim());\n      }\n    });\n    dialog.$el.find('input').focus();\n    return self;\n  }\n\n  insertImage() {\n    const self = this;\n    const document = getDocument();\n    const currentRange = self.getSelectionRange();\n    if (!currentRange) return self;\n    const dialog = self.app.dialog.prompt(self.params.imageUrlText, '', imageUrl => {\n      if (imageUrl && imageUrl.trim().length) {\n        self.setSelectionRange(currentRange);\n        document.execCommand('insertImage', false, imageUrl.trim());\n        self.$el.trigger('texteditor:insertimage', {\n          url: imageUrl.trim()\n        });\n        self.emit('local:insertImage textEditorInsertImage', self, imageUrl.trim());\n      }\n    });\n    dialog.$el.find('input').focus();\n    return self;\n  }\n\n  removePlaceholder() {\n    const self = this;\n    self.$contentEl.find('.text-editor-placeholder').remove();\n  }\n\n  insertPlaceholder() {\n    const self = this;\n    self.$contentEl.append(`<div class=\"text-editor-placeholder\">${self.params.placeholder}</div>`);\n  }\n\n  onSelectionChange() {\n    const self = this;\n    const window = getWindow();\n    const document = getDocument();\n    if (self.params.mode === 'toolbar') return;\n    const selection = window.getSelection();\n    const selectionIsInContent = $(selection.anchorNode).parents(self.contentEl).length || selection.anchorNode === self.contentEl;\n\n    if (self.params.mode === 'keyboard-toolbar') {\n      if (!selectionIsInContent) {\n        self.closeKeyboardToolbar();\n      } else {\n        self.openKeyboardToolbar();\n      }\n\n      return;\n    }\n\n    if (self.params.mode === 'popover') {\n      const selectionIsInPopover = $(selection.anchorNode).parents(self.popover.el).length || selection.anchorNode === self.popover.el;\n\n      if (!selectionIsInContent && !selectionIsInPopover) {\n        self.closePopover();\n        return;\n      }\n\n      if (!selection.isCollapsed && selection.rangeCount) {\n        const range = selection.getRangeAt(0);\n        const rect = range.getBoundingClientRect();\n        const rootEl = self.app.$el[0] || document.body;\n        self.openPopover(rect.x + (window.scrollX || 0) - rootEl.offsetLeft, rect.y + (window.scrollY || 0) - rootEl.offsetTop, rect.width, rect.height);\n      } else if (selection.isCollapsed) {\n        self.closePopover();\n      }\n    }\n  }\n\n  onPaste(e) {\n    const self = this;\n    const document = getDocument();\n\n    if (self.params.clearFormattingOnPaste && e.clipboardData && e.clipboardData.getData) {\n      const text = e.clipboardData.getData('text/plain');\n      e.preventDefault();\n      document.execCommand('insertText', false, text);\n    }\n  }\n\n  onInput() {\n    const self = this;\n    const value = self.$contentEl.html();\n    self.value = value;\n    self.$el.trigger('texteditor:input');\n    self.emit('local:input textEditorInput', self, self.value);\n    self.$el.trigger('texteditor:change', self.value);\n    self.emit('local::change textEditorChange', self, self.value);\n  }\n\n  onFocus() {\n    const self = this;\n    self.removePlaceholder();\n    self.$contentEl.focus();\n    self.$el.trigger('texteditor:focus');\n    self.emit('local::focus textEditorFocus', self);\n  }\n\n  onBlur() {\n    const self = this;\n    const window = getWindow();\n    const document = getDocument();\n\n    if (self.params.placeholder && self.$contentEl.html() === '') {\n      self.insertPlaceholder();\n    }\n\n    if (self.params.mode === 'popover') {\n      const selection = window.getSelection();\n      const selectionIsInContent = $(selection.anchorNode).parents(self.contentEl).length || selection.anchorNode === self.contentEl;\n      const inPopover = document.activeElement && self.popover && $(document.activeElement).closest(self.popover.$el).length;\n\n      if (!inPopover && !selectionIsInContent) {\n        self.closePopover();\n      }\n    }\n\n    if (self.params.mode === 'keyboard-toolbar') {\n      const selection = window.getSelection();\n      const selectionIsInContent = $(selection.anchorNode).parents(self.contentEl).length || selection.anchorNode === self.contentEl;\n\n      if (!selectionIsInContent) {\n        self.closeKeyboardToolbar();\n      }\n    }\n\n    self.$el.trigger('texteditor:blur');\n    self.emit('local::blur textEditorBlur', self);\n  }\n\n  onButtonClick(e) {\n    const self = this;\n    const window = getWindow();\n    const document = getDocument();\n    const selection = window.getSelection();\n    const selectionIsInContent = $(selection.anchorNode).parents(self.contentEl).length || selection.anchorNode === self.contentEl;\n    if (!selectionIsInContent) return;\n    const $buttonEl = $(e.target).closest('button');\n\n    if ($buttonEl.parents('form').length) {\n      e.preventDefault();\n    }\n\n    const button = $buttonEl.attr('data-button');\n    const buttonData = self.params.customButtons && self.params.customButtons[button];\n    if (!button || !(textEditorButtonsMap[button] || buttonData)) return;\n    $buttonEl.trigger('texteditor:buttonclick', button);\n    self.emit('local::buttonClick textEditorButtonClick', self, button);\n\n    if (buttonData) {\n      if (buttonData.onClick) buttonData.onClick(self, $buttonEl[0]);\n      return;\n    }\n\n    const command = textEditorButtonsMap[button][2];\n\n    if (command === 'createLink') {\n      self.createLink();\n      return;\n    }\n\n    if (command === 'insertImage') {\n      self.insertImage();\n      return;\n    }\n\n    if (command.indexOf('formatBlock') === 0) {\n      const tagName = command.split('.')[1];\n      const $anchorNode = $(selection.anchorNode);\n\n      if ($anchorNode.parents(tagName.toLowerCase()).length || $anchorNode.is(tagName)) {\n        document.execCommand('formatBlock', false, 'div');\n      } else {\n        document.execCommand('formatBlock', false, tagName);\n      }\n\n      return;\n    }\n\n    document.execCommand(command, false);\n  } // eslint-disable-next-line\n\n\n  getSelectionRange() {\n    const window = getWindow();\n    const document = getDocument();\n\n    if (window.getSelection) {\n      const sel = window.getSelection();\n\n      if (sel.getRangeAt && sel.rangeCount) {\n        return sel.getRangeAt(0);\n      }\n    } else if (document.selection && document.selection.createRange) {\n      return document.selection.createRange();\n    }\n\n    return null;\n  } // eslint-disable-next-line\n\n\n  setSelectionRange(range) {\n    const window = getWindow();\n    const document = getDocument();\n\n    if (range) {\n      if (window.getSelection) {\n        const sel = window.getSelection();\n        sel.removeAllRanges();\n        sel.addRange(range);\n      } else if (document.selection && range.select) {\n        range.select();\n      }\n    }\n  }\n\n  renderButtons() {\n    const self = this;\n    let html = '';\n\n    function renderButton(button) {\n      const iconClass = self.app.theme === 'md' ? 'material-icons' : 'f7-icons';\n\n      if (self.params.customButtons && self.params.customButtons[button]) {\n        const buttonData = self.params.customButtons[button];\n        return `<button type=\"button\" class=\"text-editor-button\" data-button=\"${button}\">${buttonData.content || ''}</button>`;\n      }\n\n      if (!textEditorButtonsMap[button]) return '';\n      const iconContent = textEditorButtonsMap[button][self.app.theme === 'md' ? 1 : 0];\n      return `<button type=\"button\" class=\"text-editor-button\" data-button=\"${button}\">${iconContent.indexOf('<') >= 0 ? iconContent : `<i class=\"${iconClass}\">${iconContent}</i>`}</button>`.trim();\n    }\n\n    self.params.buttons.forEach((button, buttonIndex) => {\n      if (Array.isArray(button)) {\n        button.forEach(b => {\n          html += renderButton(b);\n        });\n\n        if (buttonIndex < self.params.buttons.length - 1 && self.params.dividers) {\n          html += '<div class=\"text-editor-button-divider\"></div>';\n        }\n      } else {\n        html += renderButton(button);\n      }\n    });\n    return html;\n  }\n\n  createToolbar() {\n    const self = this;\n    self.$el.prepend(`<div class=\"text-editor-toolbar\">${self.renderButtons()}</div>`);\n  }\n\n  createKeyboardToolbar() {\n    const self = this;\n    self.$keyboardToolbarEl = $(`<div class=\"toolbar toolbar-bottom text-editor-keyboard-toolbar\"><div class=\"toolbar-inner\">${self.renderButtons()}</div></div>`);\n  }\n\n  createPopover() {\n    const self = this;\n    self.popover = self.app.popover.create({\n      content: `\n        <div class=\"popover dark text-editor-popover\">\n          <div class=\"popover-inner\">${self.renderButtons()}</div>\n        </div>\n      `,\n      closeByOutsideClick: false,\n      backdrop: false\n    });\n  }\n\n  openKeyboardToolbar() {\n    const self = this;\n    if (self.$keyboardToolbarEl.parent(self.app.$el).length) return;\n    self.$el.trigger('texteditor:keyboardopen');\n    self.emit('local::keyboardOpen textEditorKeyboardOpen', self);\n    self.app.$el.append(self.$keyboardToolbarEl);\n  }\n\n  closeKeyboardToolbar() {\n    const self = this;\n    self.$keyboardToolbarEl.remove();\n    self.$el.trigger('texteditor:keyboardclose');\n    self.emit('local::keyboardClose textEditorKeyboardClose', self);\n  }\n\n  openPopover(targetX, targetY, targetWidth, targetHeight) {\n    const self = this;\n    if (!self.popover) return;\n    Object.assign(self.popover.params, {\n      targetX,\n      targetY,\n      targetWidth,\n      targetHeight\n    });\n    clearTimeout(self.popoverTimeout);\n    self.popoverTimeout = setTimeout(() => {\n      if (!self.popover) return;\n\n      if (self.popover.opened) {\n        self.popover.resize();\n      } else {\n        self.$el.trigger('texteditor:popoveropen');\n        self.emit('local::popoverOpen textEditorPopoverOpen', self);\n        self.popover.open();\n      }\n    }, 400);\n  }\n\n  closePopover() {\n    const self = this;\n    clearTimeout(self.popoverTimeout);\n    if (!self.popover || !self.popover.opened) return;\n    self.popoverTimeout = setTimeout(() => {\n      if (!self.popover) return;\n      self.$el.trigger('texteditor:popoverclose');\n      self.emit('local::popoverClose textEditorPopoverClose', self);\n      self.popover.close();\n    }, 400);\n  }\n\n  init() {\n    const self = this;\n\n    if (self.value) {\n      self.$contentEl.html(self.value);\n    } else {\n      self.value = self.$contentEl.html();\n    }\n\n    if (self.params.placeholder && self.value === '') {\n      self.insertPlaceholder();\n    }\n\n    if (self.params.mode === 'toolbar') {\n      self.createToolbar();\n    } else if (self.params.mode === 'popover') {\n      self.createPopover();\n    } else if (self.params.mode === 'keyboard-toolbar') {\n      self.createKeyboardToolbar();\n    }\n\n    self.attachEvents();\n    self.$el.trigger('texteditor:init');\n    self.emit('local::init textEditorInit', self);\n    return self;\n  }\n\n  destroy() {\n    let self = this;\n    self.$el.trigger('texteditor:beforedestroy');\n    self.emit('local::beforeDestroy textEditorBeforeDestroy', self);\n    self.detachEvents();\n\n    if (self.params.mode === 'keyboard-toolbar' && self.$keyboardToolbarEl) {\n      self.$keyboardToolbarEl.remove();\n    }\n\n    if (self.popover) {\n      self.popover.close(false);\n      self.popover.destroy();\n    }\n\n    delete self.$el[0].f7TextEditor;\n    deleteProps(self);\n    self = null;\n  }\n\n}\n\nexport default TextEditor;"],"mappings":"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"},"metadata":{},"sourceType":"module"}