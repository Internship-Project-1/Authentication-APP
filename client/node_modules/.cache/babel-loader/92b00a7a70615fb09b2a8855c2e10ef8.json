{"ast":null,"code":"import $ from '../../shared/dom7.js';\nimport { extend } from '../../shared/utils.js';\nimport { getSupport } from '../../shared/get-support.js';\n\nfunction resizableView(view) {\n  const app = view.app;\n  const support = getSupport();\n  if (view.resizableInitialized) return;\n  extend(view, {\n    resizable: true,\n    resizableWidth: null,\n    resizableInitialized: true\n  });\n  const $htmlEl = $('html');\n  const {\n    $el\n  } = view;\n  if (!$el) return;\n  let $resizeHandlerEl;\n  let isTouched;\n  let isMoved;\n  const touchesStart = {};\n  let touchesDiff;\n  let width;\n  let minWidth;\n  let maxWidth;\n\n  function transformCSSWidth(v) {\n    if (!v) return null;\n\n    if (v.indexOf('%') >= 0 || v.indexOf('vw') >= 0) {\n      return parseInt(v, 10) / 100 * app.width;\n    }\n\n    const newV = parseInt(v, 10);\n    if (Number.isNaN(newV)) return null;\n    return newV;\n  }\n\n  function isResizable() {\n    return view.resizable && $el.hasClass('view-resizable') && $el.hasClass('view-master-detail');\n  }\n\n  function handleTouchStart(e) {\n    if (!isResizable()) return;\n    touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n    isMoved = false;\n    isTouched = true;\n    const $pageMasterEl = $el.children('.page-master');\n    minWidth = transformCSSWidth($pageMasterEl.css('min-width'));\n    maxWidth = transformCSSWidth($pageMasterEl.css('max-width'));\n  }\n\n  function handleTouchMove(e) {\n    if (!isTouched) return;\n    e.f7PreventSwipePanel = true;\n    const pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n\n    if (!isMoved) {\n      width = $resizeHandlerEl[0].offsetLeft + $resizeHandlerEl[0].offsetWidth;\n      $el.addClass('view-resizing');\n      $htmlEl.css('cursor', 'col-resize');\n    }\n\n    isMoved = true;\n    e.preventDefault();\n    touchesDiff = pageX - touchesStart.x;\n    let newWidth = width + touchesDiff;\n\n    if (minWidth && !Number.isNaN(minWidth)) {\n      newWidth = Math.max(newWidth, minWidth);\n    }\n\n    if (maxWidth && !Number.isNaN(maxWidth)) {\n      newWidth = Math.min(newWidth, maxWidth);\n    }\n\n    newWidth = Math.min(Math.max(newWidth, 0), app.width);\n    view.resizableWidth = newWidth;\n    $htmlEl[0].style.setProperty('--f7-page-master-width', `${newWidth}px`);\n    $el.trigger('view:resize', newWidth);\n    view.emit('local::resize viewResize', view, newWidth);\n  }\n\n  function handleTouchEnd() {\n    $('html').css('cursor', '');\n\n    if (!isTouched || !isMoved) {\n      isTouched = false;\n      isMoved = false;\n      return;\n    }\n\n    isTouched = false;\n    isMoved = false;\n    $htmlEl[0].style.setProperty('--f7-page-master-width', `${view.resizableWidth}px`);\n    $el.removeClass('view-resizing');\n  }\n\n  function handleResize() {\n    if (!view.resizableWidth) return;\n    minWidth = transformCSSWidth($resizeHandlerEl.css('min-width'));\n    maxWidth = transformCSSWidth($resizeHandlerEl.css('max-width'));\n\n    if (minWidth && !Number.isNaN(minWidth) && view.resizableWidth < minWidth) {\n      view.resizableWidth = Math.max(view.resizableWidth, minWidth);\n    }\n\n    if (maxWidth && !Number.isNaN(maxWidth) && view.resizableWidth > maxWidth) {\n      view.resizableWidth = Math.min(view.resizableWidth, maxWidth);\n    }\n\n    view.resizableWidth = Math.min(Math.max(view.resizableWidth, 0), app.width);\n    $htmlEl[0].style.setProperty('--f7-page-master-width', `${view.resizableWidth}px`);\n  }\n\n  $resizeHandlerEl = view.$el.children('.view-resize-handler');\n\n  if (!$resizeHandlerEl.length) {\n    view.$el.append('<div class=\"view-resize-handler\"></div>');\n    $resizeHandlerEl = view.$el.children('.view-resize-handler');\n  }\n\n  view.$resizeHandlerEl = $resizeHandlerEl;\n  $el.addClass('view-resizable'); // Add Events\n\n  const passive = support.passiveListener ? {\n    passive: true\n  } : false;\n  view.$el.on(app.touchEvents.start, '.view-resize-handler', handleTouchStart, passive);\n  app.on('touchmove:active', handleTouchMove);\n  app.on('touchend:passive', handleTouchEnd);\n  app.on('resize', handleResize);\n  view.on('beforeOpen', handleResize);\n  view.once('viewDestroy', () => {\n    $el.removeClass('view-resizable');\n    view.$resizeHandlerEl.remove();\n    view.$el.off(app.touchEvents.start, '.view-resize-handler', handleTouchStart, passive);\n    app.off('touchmove:active', handleTouchMove);\n    app.off('touchend:passive', handleTouchEnd);\n    app.off('resize', handleResize);\n    view.off('beforeOpen', handleResize);\n  });\n}\n\nexport default resizableView;","map":{"version":3,"names":["$","extend","getSupport","resizableView","view","app","support","resizableInitialized","resizable","resizableWidth","$htmlEl","$el","$resizeHandlerEl","isTouched","isMoved","touchesStart","touchesDiff","width","minWidth","maxWidth","transformCSSWidth","v","indexOf","parseInt","newV","Number","isNaN","isResizable","hasClass","handleTouchStart","e","x","type","targetTouches","pageX","y","pageY","$pageMasterEl","children","css","handleTouchMove","f7PreventSwipePanel","offsetLeft","offsetWidth","addClass","preventDefault","newWidth","Math","max","min","style","setProperty","trigger","emit","handleTouchEnd","removeClass","handleResize","length","append","passive","passiveListener","on","touchEvents","start","once","remove","off"],"sources":["C:/Users/Babak/userlogin/node_modules/framework7/components/view/resizable-view.js"],"sourcesContent":["import $ from '../../shared/dom7.js';\nimport { extend } from '../../shared/utils.js';\nimport { getSupport } from '../../shared/get-support.js';\n\nfunction resizableView(view) {\n  const app = view.app;\n  const support = getSupport();\n  if (view.resizableInitialized) return;\n  extend(view, {\n    resizable: true,\n    resizableWidth: null,\n    resizableInitialized: true\n  });\n  const $htmlEl = $('html');\n  const {\n    $el\n  } = view;\n  if (!$el) return;\n  let $resizeHandlerEl;\n  let isTouched;\n  let isMoved;\n  const touchesStart = {};\n  let touchesDiff;\n  let width;\n  let minWidth;\n  let maxWidth;\n\n  function transformCSSWidth(v) {\n    if (!v) return null;\n\n    if (v.indexOf('%') >= 0 || v.indexOf('vw') >= 0) {\n      return parseInt(v, 10) / 100 * app.width;\n    }\n\n    const newV = parseInt(v, 10);\n    if (Number.isNaN(newV)) return null;\n    return newV;\n  }\n\n  function isResizable() {\n    return view.resizable && $el.hasClass('view-resizable') && $el.hasClass('view-master-detail');\n  }\n\n  function handleTouchStart(e) {\n    if (!isResizable()) return;\n    touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n    isMoved = false;\n    isTouched = true;\n    const $pageMasterEl = $el.children('.page-master');\n    minWidth = transformCSSWidth($pageMasterEl.css('min-width'));\n    maxWidth = transformCSSWidth($pageMasterEl.css('max-width'));\n  }\n\n  function handleTouchMove(e) {\n    if (!isTouched) return;\n    e.f7PreventSwipePanel = true;\n    const pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n\n    if (!isMoved) {\n      width = $resizeHandlerEl[0].offsetLeft + $resizeHandlerEl[0].offsetWidth;\n      $el.addClass('view-resizing');\n      $htmlEl.css('cursor', 'col-resize');\n    }\n\n    isMoved = true;\n    e.preventDefault();\n    touchesDiff = pageX - touchesStart.x;\n    let newWidth = width + touchesDiff;\n\n    if (minWidth && !Number.isNaN(minWidth)) {\n      newWidth = Math.max(newWidth, minWidth);\n    }\n\n    if (maxWidth && !Number.isNaN(maxWidth)) {\n      newWidth = Math.min(newWidth, maxWidth);\n    }\n\n    newWidth = Math.min(Math.max(newWidth, 0), app.width);\n    view.resizableWidth = newWidth;\n    $htmlEl[0].style.setProperty('--f7-page-master-width', `${newWidth}px`);\n    $el.trigger('view:resize', newWidth);\n    view.emit('local::resize viewResize', view, newWidth);\n  }\n\n  function handleTouchEnd() {\n    $('html').css('cursor', '');\n\n    if (!isTouched || !isMoved) {\n      isTouched = false;\n      isMoved = false;\n      return;\n    }\n\n    isTouched = false;\n    isMoved = false;\n    $htmlEl[0].style.setProperty('--f7-page-master-width', `${view.resizableWidth}px`);\n    $el.removeClass('view-resizing');\n  }\n\n  function handleResize() {\n    if (!view.resizableWidth) return;\n    minWidth = transformCSSWidth($resizeHandlerEl.css('min-width'));\n    maxWidth = transformCSSWidth($resizeHandlerEl.css('max-width'));\n\n    if (minWidth && !Number.isNaN(minWidth) && view.resizableWidth < minWidth) {\n      view.resizableWidth = Math.max(view.resizableWidth, minWidth);\n    }\n\n    if (maxWidth && !Number.isNaN(maxWidth) && view.resizableWidth > maxWidth) {\n      view.resizableWidth = Math.min(view.resizableWidth, maxWidth);\n    }\n\n    view.resizableWidth = Math.min(Math.max(view.resizableWidth, 0), app.width);\n    $htmlEl[0].style.setProperty('--f7-page-master-width', `${view.resizableWidth}px`);\n  }\n\n  $resizeHandlerEl = view.$el.children('.view-resize-handler');\n\n  if (!$resizeHandlerEl.length) {\n    view.$el.append('<div class=\"view-resize-handler\"></div>');\n    $resizeHandlerEl = view.$el.children('.view-resize-handler');\n  }\n\n  view.$resizeHandlerEl = $resizeHandlerEl;\n  $el.addClass('view-resizable'); // Add Events\n\n  const passive = support.passiveListener ? {\n    passive: true\n  } : false;\n  view.$el.on(app.touchEvents.start, '.view-resize-handler', handleTouchStart, passive);\n  app.on('touchmove:active', handleTouchMove);\n  app.on('touchend:passive', handleTouchEnd);\n  app.on('resize', handleResize);\n  view.on('beforeOpen', handleResize);\n  view.once('viewDestroy', () => {\n    $el.removeClass('view-resizable');\n    view.$resizeHandlerEl.remove();\n    view.$el.off(app.touchEvents.start, '.view-resize-handler', handleTouchStart, passive);\n    app.off('touchmove:active', handleTouchMove);\n    app.off('touchend:passive', handleTouchEnd);\n    app.off('resize', handleResize);\n    view.off('beforeOpen', handleResize);\n  });\n}\n\nexport default resizableView;"],"mappings":"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"},"metadata":{},"sourceType":"module"}