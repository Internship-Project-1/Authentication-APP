{"ast":null,"code":"import $ from '../../shared/dom7.js';\nimport { extend } from '../../shared/utils.js';\nimport History from '../../shared/history.js';\nimport asyncComponent from './async-component.js';\n\nfunction tabLoad(tabRoute, loadOptions) {\n  if (loadOptions === void 0) {\n    loadOptions = {};\n  }\n\n  const router = this;\n  const options = extend({\n    animate: router.params.animate,\n    browserHistory: true,\n    history: true,\n    parentPageEl: null,\n    preload: false,\n    on: {}\n  }, loadOptions);\n  let currentRoute;\n  let previousRoute;\n\n  if (options.route) {\n    // Set Route\n    if (!options.preload && options.route !== router.currentRoute) {\n      previousRoute = router.previousRoute;\n      router.currentRoute = options.route;\n    }\n\n    if (options.preload) {\n      currentRoute = options.route;\n      previousRoute = router.currentRoute;\n    } else {\n      currentRoute = router.currentRoute;\n      if (!previousRoute) previousRoute = router.previousRoute;\n    } // Update Browser History\n\n\n    if (router.params.browserHistory && options.browserHistory && !options.reloadPrevious) {\n      History[router.params.browserHistoryTabs](router.view.id, {\n        url: options.route.url\n      }, (router.params.browserHistoryRoot || '') + router.params.browserHistorySeparator + options.route.url);\n    } // Update Router History\n\n\n    if (options.history) {\n      router.history[Math.max(router.history.length - 1, 0)] = options.route.url;\n      router.saveHistory();\n    }\n  } // Show Tab\n\n\n  const $parentPageEl = $(options.parentPageEl || router.currentPageEl);\n  let tabEl;\n\n  if ($parentPageEl.length && $parentPageEl.find(`#${tabRoute.id}`).length) {\n    tabEl = $parentPageEl.find(`#${tabRoute.id}`).eq(0);\n  } else if (router.view.selector) {\n    tabEl = `${router.view.selector} #${tabRoute.id}`;\n  } else {\n    tabEl = `#${tabRoute.id}`;\n  }\n\n  const tabShowResult = router.app.tab.show({\n    tabEl,\n    animate: options.animate,\n    tabRoute: options.route\n  });\n  const {\n    $newTabEl,\n    $oldTabEl,\n    animated,\n    onTabsChanged\n  } = tabShowResult;\n\n  if ($newTabEl && $newTabEl.parents('.page').length > 0 && options.route) {\n    const tabParentPageData = $newTabEl.parents('.page')[0].f7Page;\n\n    if (tabParentPageData && options.route) {\n      tabParentPageData.route = options.route;\n    }\n  } // Tab Content Loaded\n\n\n  function onTabLoaded(contentEl) {\n    // Remove theme elements\n    router.removeThemeElements($newTabEl);\n    let tabEventTarget = $newTabEl;\n    if (typeof contentEl !== 'string') tabEventTarget = $(contentEl);\n    tabEventTarget.trigger('tab:init tab:mounted', tabRoute);\n    router.emit('tabInit tabMounted', $newTabEl[0], tabRoute);\n\n    if ($oldTabEl && $oldTabEl.length) {\n      if (animated) {\n        onTabsChanged(() => {\n          router.emit('routeChanged', router.currentRoute, router.previousRoute, router);\n\n          if (router.params.unloadTabContent) {\n            router.tabRemove($oldTabEl, $newTabEl, tabRoute);\n          }\n        });\n      } else {\n        router.emit('routeChanged', router.currentRoute, router.previousRoute, router);\n\n        if (router.params.unloadTabContent) {\n          router.tabRemove($oldTabEl, $newTabEl, tabRoute);\n        }\n      }\n    }\n  }\n\n  if ($newTabEl[0].f7RouterTabLoaded) {\n    if (!$oldTabEl || !$oldTabEl.length) return router;\n\n    if (animated) {\n      onTabsChanged(() => {\n        router.emit('routeChanged', router.currentRoute, router.previousRoute, router);\n      });\n    } else {\n      router.emit('routeChanged', router.currentRoute, router.previousRoute, router);\n    }\n\n    return router;\n  } // Load Tab Content\n\n\n  function loadTab(loadTabParams, loadTabOptions) {\n    // Load Tab Props\n    const {\n      url,\n      content,\n      el,\n      component,\n      componentUrl\n    } = loadTabParams; // Component/Template Callbacks\n\n    function resolve(contentEl) {\n      router.allowPageChange = true;\n      if (!contentEl) return;\n\n      if (typeof contentEl === 'string') {\n        $newTabEl.html(contentEl);\n      } else {\n        $newTabEl.html('');\n\n        if (contentEl.f7Component) {\n          contentEl.f7Component.mount(componentEl => {\n            $newTabEl.append(componentEl);\n          });\n        } else {\n          $newTabEl.append(contentEl);\n        }\n      }\n\n      $newTabEl[0].f7RouterTabLoaded = true;\n      onTabLoaded(contentEl);\n    }\n\n    function reject() {\n      router.allowPageChange = true;\n      return router;\n    }\n\n    if (content) {\n      resolve(content);\n    } else if (el) {\n      resolve(el);\n    } else if (component || componentUrl) {\n      // Load from component (F7/Vue/React/...)\n      try {\n        router.tabComponentLoader({\n          tabEl: $newTabEl[0],\n          component,\n          componentUrl,\n          options: loadTabOptions,\n          resolve,\n          reject\n        });\n      } catch (err) {\n        router.allowPageChange = true;\n        throw err;\n      }\n    } else if (url) {\n      // Load using XHR\n      if (router.xhrAbortController) {\n        router.xhrAbortController.abort();\n        router.xhrAbortController = false;\n      }\n\n      router.xhrRequest(url, loadTabOptions).then(tabContent => {\n        resolve(tabContent);\n      }).catch(() => {\n        router.allowPageChange = true;\n      });\n    }\n  }\n\n  let hasContentLoadProp;\n  'url content component el componentUrl'.split(' ').forEach(tabLoadProp => {\n    if (tabRoute[tabLoadProp]) {\n      hasContentLoadProp = true;\n      loadTab({\n        [tabLoadProp]: tabRoute[tabLoadProp]\n      }, options);\n    }\n  }); // Async\n\n  function asyncResolve(resolveParams, resolveOptions) {\n    loadTab(resolveParams, extend(options, resolveOptions));\n  }\n\n  function asyncReject() {\n    router.allowPageChange = true;\n  }\n\n  if (tabRoute.async) {\n    tabRoute.async.call(router, {\n      router,\n      to: currentRoute,\n      from: previousRoute,\n      resolve: asyncResolve,\n      reject: asyncReject,\n      app: router.app\n    });\n  } else if (tabRoute.asyncComponent) {\n    asyncComponent(router, tabRoute.asyncComponent, asyncResolve, asyncReject);\n  } else if (!hasContentLoadProp) {\n    router.allowPageChange = true;\n  }\n\n  return router;\n}\n\nfunction tabRemove($oldTabEl, $newTabEl, tabRoute) {\n  const router = this;\n  let hasTabComponentChild;\n\n  if ($oldTabEl[0]) {\n    $oldTabEl[0].f7RouterTabLoaded = false;\n    delete $oldTabEl[0].f7RouterTabLoaded;\n  }\n\n  $oldTabEl.children().each(tabChild => {\n    if (tabChild.f7Component) {\n      hasTabComponentChild = true;\n      $(tabChild).trigger('tab:beforeremove', tabRoute);\n      tabChild.f7Component.destroy();\n    }\n  });\n\n  if (!hasTabComponentChild) {\n    $oldTabEl.trigger('tab:beforeremove', tabRoute);\n  }\n\n  router.emit('tabBeforeRemove', $oldTabEl[0], $newTabEl[0], tabRoute);\n  router.removeTabContent($oldTabEl[0], tabRoute);\n}\n\nexport { tabLoad, tabRemove };","map":{"version":3,"names":["$","extend","History","asyncComponent","tabLoad","tabRoute","loadOptions","router","options","animate","params","browserHistory","history","parentPageEl","preload","on","currentRoute","previousRoute","route","reloadPrevious","browserHistoryTabs","view","id","url","browserHistoryRoot","browserHistorySeparator","Math","max","length","saveHistory","$parentPageEl","currentPageEl","tabEl","find","eq","selector","tabShowResult","app","tab","show","$newTabEl","$oldTabEl","animated","onTabsChanged","parents","tabParentPageData","f7Page","onTabLoaded","contentEl","removeThemeElements","tabEventTarget","trigger","emit","unloadTabContent","tabRemove","f7RouterTabLoaded","loadTab","loadTabParams","loadTabOptions","content","el","component","componentUrl","resolve","allowPageChange","html","f7Component","mount","componentEl","append","reject","tabComponentLoader","err","xhrAbortController","abort","xhrRequest","then","tabContent","catch","hasContentLoadProp","split","forEach","tabLoadProp","asyncResolve","resolveParams","resolveOptions","asyncReject","async","call","to","from","hasTabComponentChild","children","each","tabChild","destroy","removeTabContent"],"sources":["C:/Users/Babak/userlogin/node_modules/framework7/modules/router/tab.js"],"sourcesContent":["import $ from '../../shared/dom7.js';\nimport { extend } from '../../shared/utils.js';\nimport History from '../../shared/history.js';\nimport asyncComponent from './async-component.js';\n\nfunction tabLoad(tabRoute, loadOptions) {\n  if (loadOptions === void 0) {\n    loadOptions = {};\n  }\n\n  const router = this;\n  const options = extend({\n    animate: router.params.animate,\n    browserHistory: true,\n    history: true,\n    parentPageEl: null,\n    preload: false,\n    on: {}\n  }, loadOptions);\n  let currentRoute;\n  let previousRoute;\n\n  if (options.route) {\n    // Set Route\n    if (!options.preload && options.route !== router.currentRoute) {\n      previousRoute = router.previousRoute;\n      router.currentRoute = options.route;\n    }\n\n    if (options.preload) {\n      currentRoute = options.route;\n      previousRoute = router.currentRoute;\n    } else {\n      currentRoute = router.currentRoute;\n      if (!previousRoute) previousRoute = router.previousRoute;\n    } // Update Browser History\n\n\n    if (router.params.browserHistory && options.browserHistory && !options.reloadPrevious) {\n      History[router.params.browserHistoryTabs](router.view.id, {\n        url: options.route.url\n      }, (router.params.browserHistoryRoot || '') + router.params.browserHistorySeparator + options.route.url);\n    } // Update Router History\n\n\n    if (options.history) {\n      router.history[Math.max(router.history.length - 1, 0)] = options.route.url;\n      router.saveHistory();\n    }\n  } // Show Tab\n\n\n  const $parentPageEl = $(options.parentPageEl || router.currentPageEl);\n  let tabEl;\n\n  if ($parentPageEl.length && $parentPageEl.find(`#${tabRoute.id}`).length) {\n    tabEl = $parentPageEl.find(`#${tabRoute.id}`).eq(0);\n  } else if (router.view.selector) {\n    tabEl = `${router.view.selector} #${tabRoute.id}`;\n  } else {\n    tabEl = `#${tabRoute.id}`;\n  }\n\n  const tabShowResult = router.app.tab.show({\n    tabEl,\n    animate: options.animate,\n    tabRoute: options.route\n  });\n  const {\n    $newTabEl,\n    $oldTabEl,\n    animated,\n    onTabsChanged\n  } = tabShowResult;\n\n  if ($newTabEl && $newTabEl.parents('.page').length > 0 && options.route) {\n    const tabParentPageData = $newTabEl.parents('.page')[0].f7Page;\n\n    if (tabParentPageData && options.route) {\n      tabParentPageData.route = options.route;\n    }\n  } // Tab Content Loaded\n\n\n  function onTabLoaded(contentEl) {\n    // Remove theme elements\n    router.removeThemeElements($newTabEl);\n    let tabEventTarget = $newTabEl;\n    if (typeof contentEl !== 'string') tabEventTarget = $(contentEl);\n    tabEventTarget.trigger('tab:init tab:mounted', tabRoute);\n    router.emit('tabInit tabMounted', $newTabEl[0], tabRoute);\n\n    if ($oldTabEl && $oldTabEl.length) {\n      if (animated) {\n        onTabsChanged(() => {\n          router.emit('routeChanged', router.currentRoute, router.previousRoute, router);\n\n          if (router.params.unloadTabContent) {\n            router.tabRemove($oldTabEl, $newTabEl, tabRoute);\n          }\n        });\n      } else {\n        router.emit('routeChanged', router.currentRoute, router.previousRoute, router);\n\n        if (router.params.unloadTabContent) {\n          router.tabRemove($oldTabEl, $newTabEl, tabRoute);\n        }\n      }\n    }\n  }\n\n  if ($newTabEl[0].f7RouterTabLoaded) {\n    if (!$oldTabEl || !$oldTabEl.length) return router;\n\n    if (animated) {\n      onTabsChanged(() => {\n        router.emit('routeChanged', router.currentRoute, router.previousRoute, router);\n      });\n    } else {\n      router.emit('routeChanged', router.currentRoute, router.previousRoute, router);\n    }\n\n    return router;\n  } // Load Tab Content\n\n\n  function loadTab(loadTabParams, loadTabOptions) {\n    // Load Tab Props\n    const {\n      url,\n      content,\n      el,\n      component,\n      componentUrl\n    } = loadTabParams; // Component/Template Callbacks\n\n    function resolve(contentEl) {\n      router.allowPageChange = true;\n      if (!contentEl) return;\n\n      if (typeof contentEl === 'string') {\n        $newTabEl.html(contentEl);\n      } else {\n        $newTabEl.html('');\n\n        if (contentEl.f7Component) {\n          contentEl.f7Component.mount(componentEl => {\n            $newTabEl.append(componentEl);\n          });\n        } else {\n          $newTabEl.append(contentEl);\n        }\n      }\n\n      $newTabEl[0].f7RouterTabLoaded = true;\n      onTabLoaded(contentEl);\n    }\n\n    function reject() {\n      router.allowPageChange = true;\n      return router;\n    }\n\n    if (content) {\n      resolve(content);\n    } else if (el) {\n      resolve(el);\n    } else if (component || componentUrl) {\n      // Load from component (F7/Vue/React/...)\n      try {\n        router.tabComponentLoader({\n          tabEl: $newTabEl[0],\n          component,\n          componentUrl,\n          options: loadTabOptions,\n          resolve,\n          reject\n        });\n      } catch (err) {\n        router.allowPageChange = true;\n        throw err;\n      }\n    } else if (url) {\n      // Load using XHR\n      if (router.xhrAbortController) {\n        router.xhrAbortController.abort();\n        router.xhrAbortController = false;\n      }\n\n      router.xhrRequest(url, loadTabOptions).then(tabContent => {\n        resolve(tabContent);\n      }).catch(() => {\n        router.allowPageChange = true;\n      });\n    }\n  }\n\n  let hasContentLoadProp;\n  'url content component el componentUrl'.split(' ').forEach(tabLoadProp => {\n    if (tabRoute[tabLoadProp]) {\n      hasContentLoadProp = true;\n      loadTab({\n        [tabLoadProp]: tabRoute[tabLoadProp]\n      }, options);\n    }\n  }); // Async\n\n  function asyncResolve(resolveParams, resolveOptions) {\n    loadTab(resolveParams, extend(options, resolveOptions));\n  }\n\n  function asyncReject() {\n    router.allowPageChange = true;\n  }\n\n  if (tabRoute.async) {\n    tabRoute.async.call(router, {\n      router,\n      to: currentRoute,\n      from: previousRoute,\n      resolve: asyncResolve,\n      reject: asyncReject,\n      app: router.app\n    });\n  } else if (tabRoute.asyncComponent) {\n    asyncComponent(router, tabRoute.asyncComponent, asyncResolve, asyncReject);\n  } else if (!hasContentLoadProp) {\n    router.allowPageChange = true;\n  }\n\n  return router;\n}\n\nfunction tabRemove($oldTabEl, $newTabEl, tabRoute) {\n  const router = this;\n  let hasTabComponentChild;\n\n  if ($oldTabEl[0]) {\n    $oldTabEl[0].f7RouterTabLoaded = false;\n    delete $oldTabEl[0].f7RouterTabLoaded;\n  }\n\n  $oldTabEl.children().each(tabChild => {\n    if (tabChild.f7Component) {\n      hasTabComponentChild = true;\n      $(tabChild).trigger('tab:beforeremove', tabRoute);\n      tabChild.f7Component.destroy();\n    }\n  });\n\n  if (!hasTabComponentChild) {\n    $oldTabEl.trigger('tab:beforeremove', tabRoute);\n  }\n\n  router.emit('tabBeforeRemove', $oldTabEl[0], $newTabEl[0], tabRoute);\n  router.removeTabContent($oldTabEl[0], tabRoute);\n}\n\nexport { tabLoad, tabRemove };"],"mappings":"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"},"metadata":{},"sourceType":"module"}