{"ast":null,"code":"import $ from '../../../shared/dom7.js';\nimport { getSupport } from '../../../shared/get-support.js';\n/** @jsx $jsx */\n\nimport $jsx from '../../../shared/$jsx.js';\nexport default {\n  render() {\n    return $jsx(\"div\", {\n      class: \"color-picker-module color-picker-module-sb-spectrum\"\n    }, $jsx(\"div\", {\n      class: \"color-picker-sb-spectrum\",\n      style: \"background-color: hsl(0, 100%, 50%)\"\n    }, $jsx(\"div\", {\n      class: \"color-picker-sb-spectrum-handle\"\n    })));\n  },\n\n  init(self) {\n    const {\n      app\n    } = self;\n    let isTouched;\n    let isMoved;\n    let touchStartX;\n    let touchStartY;\n    let touchCurrentX;\n    let touchCurrentY;\n    let specterRect;\n    let specterIsTouched;\n    let specterHandleIsTouched;\n    const {\n      $el\n    } = self;\n\n    function setSBFromSpecterCoords(x, y) {\n      let s = (x - specterRect.left) / specterRect.width;\n      let b = (y - specterRect.top) / specterRect.height;\n      s = Math.max(0, Math.min(1, s));\n      b = 1 - Math.max(0, Math.min(1, b));\n      self.setValue({\n        hsb: [self.value.hue, s, b]\n      });\n    }\n\n    function handleTouchStart(e) {\n      if (isMoved || isTouched) return;\n      touchStartX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n      touchCurrentX = touchStartX;\n      touchStartY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n      touchCurrentY = touchStartY;\n      const $targetEl = $(e.target);\n      specterHandleIsTouched = $targetEl.closest('.color-picker-sb-spectrum-handle').length > 0;\n\n      if (!specterHandleIsTouched) {\n        specterIsTouched = $targetEl.closest('.color-picker-sb-spectrum').length > 0;\n      }\n\n      if (specterIsTouched) {\n        specterRect = $el.find('.color-picker-sb-spectrum')[0].getBoundingClientRect();\n        setSBFromSpecterCoords(touchStartX, touchStartY);\n      }\n\n      if (specterHandleIsTouched || specterIsTouched) {\n        $el.find('.color-picker-sb-spectrum-handle').addClass('color-picker-sb-spectrum-handle-pressed');\n      }\n    }\n\n    function handleTouchMove(e) {\n      if (!(specterIsTouched || specterHandleIsTouched)) return;\n      touchCurrentX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n      touchCurrentY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n      e.preventDefault();\n\n      if (!isMoved) {\n        // First move\n        isMoved = true;\n\n        if (specterHandleIsTouched) {\n          specterRect = $el.find('.color-picker-sb-spectrum')[0].getBoundingClientRect();\n        }\n      }\n\n      if (specterIsTouched || specterHandleIsTouched) {\n        setSBFromSpecterCoords(touchCurrentX, touchCurrentY);\n      }\n    }\n\n    function handleTouchEnd() {\n      isMoved = false;\n\n      if (specterIsTouched || specterHandleIsTouched) {\n        $el.find('.color-picker-sb-spectrum-handle').removeClass('color-picker-sb-spectrum-handle-pressed');\n      }\n\n      specterIsTouched = false;\n      specterHandleIsTouched = false;\n    }\n\n    function handleResize() {\n      self.modules['sb-spectrum'].update(self);\n    }\n\n    const passiveListener = app.touchEvents.start === 'touchstart' && getSupport().passiveListener ? {\n      passive: true,\n      capture: false\n    } : false;\n    self.$el.on(app.touchEvents.start, handleTouchStart, passiveListener);\n    app.on('touchmove:active', handleTouchMove);\n    app.on('touchend:passive', handleTouchEnd);\n    app.on('resize', handleResize);\n\n    self.destroySpectrumEvents = function destroySpectrumEvents() {\n      self.$el.off(app.touchEvents.start, handleTouchStart, passiveListener);\n      app.off('touchmove:active', handleTouchMove);\n      app.off('touchend:passive', handleTouchEnd);\n      app.off('resize', handleResize);\n    };\n  },\n\n  update(self) {\n    const {\n      value\n    } = self;\n    const {\n      hsl,\n      hsb\n    } = value;\n    const specterWidth = self.$el.find('.color-picker-sb-spectrum')[0].offsetWidth;\n    const specterHeight = self.$el.find('.color-picker-sb-spectrum')[0].offsetHeight;\n    self.$el.find('.color-picker-sb-spectrum').css('background-color', `hsl(${hsl[0]}, 100%, 50%)`);\n    self.$el.find('.color-picker-sb-spectrum-handle').css('background-color', `hsl(${hsl[0]}, ${hsl[1] * 100}%, ${hsl[2] * 100}%)`).transform(`translate(${specterWidth * hsb[1]}px, ${specterHeight * (1 - hsb[2])}px)`);\n  },\n\n  destroy(self) {\n    if (self.destroySpectrumEvents) self.destroySpectrumEvents();\n    delete self.destroySpectrumEvents;\n  }\n\n};","map":{"version":3,"names":["$","getSupport","$jsx","render","class","style","init","self","app","isTouched","isMoved","touchStartX","touchStartY","touchCurrentX","touchCurrentY","specterRect","specterIsTouched","specterHandleIsTouched","$el","setSBFromSpecterCoords","x","y","s","left","width","b","top","height","Math","max","min","setValue","hsb","value","hue","handleTouchStart","e","type","targetTouches","pageX","pageY","$targetEl","target","closest","length","find","getBoundingClientRect","addClass","handleTouchMove","preventDefault","handleTouchEnd","removeClass","handleResize","modules","update","passiveListener","touchEvents","start","passive","capture","on","destroySpectrumEvents","off","hsl","specterWidth","offsetWidth","specterHeight","offsetHeight","css","transform","destroy"],"sources":["C:/Users/Babak/userlogin/node_modules/framework7/components/color-picker/modules/sb-spectrum.js"],"sourcesContent":["import $ from '../../../shared/dom7.js';\nimport { getSupport } from '../../../shared/get-support.js';\n/** @jsx $jsx */\n\nimport $jsx from '../../../shared/$jsx.js';\nexport default {\n  render() {\n    return $jsx(\"div\", {\n      class: \"color-picker-module color-picker-module-sb-spectrum\"\n    }, $jsx(\"div\", {\n      class: \"color-picker-sb-spectrum\",\n      style: \"background-color: hsl(0, 100%, 50%)\"\n    }, $jsx(\"div\", {\n      class: \"color-picker-sb-spectrum-handle\"\n    })));\n  },\n\n  init(self) {\n    const {\n      app\n    } = self;\n    let isTouched;\n    let isMoved;\n    let touchStartX;\n    let touchStartY;\n    let touchCurrentX;\n    let touchCurrentY;\n    let specterRect;\n    let specterIsTouched;\n    let specterHandleIsTouched;\n    const {\n      $el\n    } = self;\n\n    function setSBFromSpecterCoords(x, y) {\n      let s = (x - specterRect.left) / specterRect.width;\n      let b = (y - specterRect.top) / specterRect.height;\n      s = Math.max(0, Math.min(1, s));\n      b = 1 - Math.max(0, Math.min(1, b));\n      self.setValue({\n        hsb: [self.value.hue, s, b]\n      });\n    }\n\n    function handleTouchStart(e) {\n      if (isMoved || isTouched) return;\n      touchStartX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n      touchCurrentX = touchStartX;\n      touchStartY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n      touchCurrentY = touchStartY;\n      const $targetEl = $(e.target);\n      specterHandleIsTouched = $targetEl.closest('.color-picker-sb-spectrum-handle').length > 0;\n\n      if (!specterHandleIsTouched) {\n        specterIsTouched = $targetEl.closest('.color-picker-sb-spectrum').length > 0;\n      }\n\n      if (specterIsTouched) {\n        specterRect = $el.find('.color-picker-sb-spectrum')[0].getBoundingClientRect();\n        setSBFromSpecterCoords(touchStartX, touchStartY);\n      }\n\n      if (specterHandleIsTouched || specterIsTouched) {\n        $el.find('.color-picker-sb-spectrum-handle').addClass('color-picker-sb-spectrum-handle-pressed');\n      }\n    }\n\n    function handleTouchMove(e) {\n      if (!(specterIsTouched || specterHandleIsTouched)) return;\n      touchCurrentX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n      touchCurrentY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n      e.preventDefault();\n\n      if (!isMoved) {\n        // First move\n        isMoved = true;\n\n        if (specterHandleIsTouched) {\n          specterRect = $el.find('.color-picker-sb-spectrum')[0].getBoundingClientRect();\n        }\n      }\n\n      if (specterIsTouched || specterHandleIsTouched) {\n        setSBFromSpecterCoords(touchCurrentX, touchCurrentY);\n      }\n    }\n\n    function handleTouchEnd() {\n      isMoved = false;\n\n      if (specterIsTouched || specterHandleIsTouched) {\n        $el.find('.color-picker-sb-spectrum-handle').removeClass('color-picker-sb-spectrum-handle-pressed');\n      }\n\n      specterIsTouched = false;\n      specterHandleIsTouched = false;\n    }\n\n    function handleResize() {\n      self.modules['sb-spectrum'].update(self);\n    }\n\n    const passiveListener = app.touchEvents.start === 'touchstart' && getSupport().passiveListener ? {\n      passive: true,\n      capture: false\n    } : false;\n    self.$el.on(app.touchEvents.start, handleTouchStart, passiveListener);\n    app.on('touchmove:active', handleTouchMove);\n    app.on('touchend:passive', handleTouchEnd);\n    app.on('resize', handleResize);\n\n    self.destroySpectrumEvents = function destroySpectrumEvents() {\n      self.$el.off(app.touchEvents.start, handleTouchStart, passiveListener);\n      app.off('touchmove:active', handleTouchMove);\n      app.off('touchend:passive', handleTouchEnd);\n      app.off('resize', handleResize);\n    };\n  },\n\n  update(self) {\n    const {\n      value\n    } = self;\n    const {\n      hsl,\n      hsb\n    } = value;\n    const specterWidth = self.$el.find('.color-picker-sb-spectrum')[0].offsetWidth;\n    const specterHeight = self.$el.find('.color-picker-sb-spectrum')[0].offsetHeight;\n    self.$el.find('.color-picker-sb-spectrum').css('background-color', `hsl(${hsl[0]}, 100%, 50%)`);\n    self.$el.find('.color-picker-sb-spectrum-handle').css('background-color', `hsl(${hsl[0]}, ${hsl[1] * 100}%, ${hsl[2] * 100}%)`).transform(`translate(${specterWidth * hsb[1]}px, ${specterHeight * (1 - hsb[2])}px)`);\n  },\n\n  destroy(self) {\n    if (self.destroySpectrumEvents) self.destroySpectrumEvents();\n    delete self.destroySpectrumEvents;\n  }\n\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}