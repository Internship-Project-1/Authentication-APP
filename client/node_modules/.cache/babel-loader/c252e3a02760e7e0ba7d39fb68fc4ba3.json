{"ast":null,"code":"import $ from '../../shared/dom7.js';\nimport History from '../../shared/history.js';\nimport { getSupport } from '../../shared/get-support.js';\nimport { getDevice } from '../../shared/get-device.js';\nimport { now } from '../../shared/utils.js';\n\nfunction SwipeBack(r) {\n  const router = r;\n  const {\n    $el,\n    $navbarsEl,\n    app,\n    params\n  } = router;\n  const support = getSupport();\n  const device = getDevice();\n  let isTouched = false;\n  let isMoved = false;\n  const touchesStart = {};\n  let isScrolling;\n  let $currentPageEl = [];\n  let $previousPageEl = [];\n  let viewContainerWidth;\n  let touchesDiff;\n  let allowViewTouchMove = true;\n  let touchStartTime;\n  let $currentNavbarEl = [];\n  let $previousNavbarEl = [];\n  let dynamicNavbar;\n  let $pageShadowEl;\n  let $pageOpacityEl;\n  let animatableNavEls;\n  const paramsSwipeBackAnimateShadow = params[`${app.theme}SwipeBackAnimateShadow`];\n  const paramsSwipeBackAnimateOpacity = params[`${app.theme}SwipeBackAnimateOpacity`];\n  const paramsSwipeBackActiveArea = params[`${app.theme}SwipeBackActiveArea`];\n  const paramsSwipeBackThreshold = params[`${app.theme}SwipeBackThreshold`];\n  const transformOrigin = app.rtl ? 'right center' : 'left center';\n  const transformOriginTitleLarge = app.rtl ? 'calc(100% - var(--f7-navbar-large-title-padding-left) - var(--f7-safe-area-left)) center' : 'calc(var(--f7-navbar-large-title-padding-left) + var(--f7-safe-area-left)) center';\n\n  function animatableNavElements() {\n    const els = [];\n    const inverter = app.rtl ? -1 : 1;\n    const currentNavIsTransparent = $currentNavbarEl.hasClass('navbar-transparent') && !$currentNavbarEl.hasClass('navbar-large') && !$currentNavbarEl.hasClass('navbar-transparent-visible');\n    const currentNavIsLarge = $currentNavbarEl.hasClass('navbar-large');\n    const currentNavIsCollapsed = $currentNavbarEl.hasClass('navbar-large-collapsed');\n    const currentNavIsLargeTransparent = $currentNavbarEl.hasClass('navbar-large-transparent') || $currentNavbarEl.hasClass('navbar-large') && $currentNavbarEl.hasClass('navbar-transparent');\n    const previousNavIsTransparent = $previousNavbarEl.hasClass('navbar-transparent') && !$previousNavbarEl.hasClass('navbar-large') && !$previousNavbarEl.hasClass('navbar-transparent-visible');\n    const previousNavIsLarge = $previousNavbarEl.hasClass('navbar-large');\n    const previousNavIsCollapsed = $previousNavbarEl.hasClass('navbar-large-collapsed');\n    const previousNavIsLargeTransparent = $previousNavbarEl.hasClass('navbar-large-transparent') || $previousNavbarEl.hasClass('navbar-large') && $previousNavbarEl.hasClass('navbar-transparent');\n    const fromLarge = currentNavIsLarge && !currentNavIsCollapsed;\n    const toLarge = previousNavIsLarge && !previousNavIsCollapsed;\n    const $currentNavElements = $currentNavbarEl.find('.left, .title, .right, .subnavbar, .fading, .title-large, .navbar-bg');\n    const $previousNavElements = $previousNavbarEl.find('.left, .title, .right, .subnavbar, .fading, .title-large, .navbar-bg');\n    let activeNavBackIconText;\n    let previousNavBackIconText;\n\n    if (params.iosAnimateNavbarBackIcon) {\n      if ($currentNavbarEl.hasClass('sliding') || $currentNavbarEl.find('.navbar-inner.sliding').length) {\n        activeNavBackIconText = $currentNavbarEl.find('.left').find('.back .icon + span').eq(0);\n      } else {\n        activeNavBackIconText = $currentNavbarEl.find('.left.sliding').find('.back .icon + span').eq(0);\n      }\n\n      if ($previousNavbarEl.hasClass('sliding') || $previousNavbarEl.find('.navbar-inner.sliding').length) {\n        previousNavBackIconText = $previousNavbarEl.find('.left').find('.back .icon + span').eq(0);\n      } else {\n        previousNavBackIconText = $previousNavbarEl.find('.left.sliding').find('.back .icon + span').eq(0);\n      }\n\n      if (activeNavBackIconText.length) {\n        $previousNavElements.each(el => {\n          if (!$(el).hasClass('title')) return;\n          el.f7NavbarLeftOffset += activeNavBackIconText.prev('.icon')[0].offsetWidth;\n        });\n      }\n    }\n\n    $currentNavElements.each(navEl => {\n      const $navEl = $(navEl);\n      const isSubnavbar = $navEl.hasClass('subnavbar');\n      const isLeft = $navEl.hasClass('left');\n      const isTitle = $navEl.hasClass('title');\n      const isBg = $navEl.hasClass('navbar-bg');\n      if ((isTitle || isBg) && currentNavIsTransparent) return;\n      if (!fromLarge && $navEl.hasClass('.title-large')) return;\n      const el = {\n        el: navEl\n      };\n\n      if (fromLarge) {\n        if (isTitle) return;\n\n        if ($navEl.hasClass('title-large')) {\n          if (els.indexOf(el) < 0) els.push(el);\n          el.overflow = 'visible';\n          $navEl.find('.title-large-text').each(subNavEl => {\n            els.push({\n              el: subNavEl,\n              transform: progress => `translateX(${progress * 100 * inverter}%)`\n            });\n          });\n          return;\n        }\n      }\n\n      if (toLarge) {\n        if (!fromLarge) {\n          if ($navEl.hasClass('title-large')) {\n            if (els.indexOf(el) < 0) els.push(el);\n            el.opacity = 0;\n          }\n        }\n\n        if (isLeft) {\n          if (els.indexOf(el) < 0) els.push(el);\n\n          el.opacity = progress => 1 - progress ** 0.33;\n\n          $navEl.find('.back span').each(subNavEl => {\n            els.push({\n              el: subNavEl,\n              'transform-origin': transformOrigin,\n              transform: progress => `translateX(calc(${progress} * (var(--f7-navbarTitleLargeOffset) - var(--f7-navbarLeftTextOffset)))) translateY(calc(${progress} * (var(--f7-navbar-large-title-height) - var(--f7-navbar-large-title-padding-vertical) / 2))) scale(${1 + 1 * progress})`\n            });\n          });\n          return;\n        }\n      }\n\n      if (isBg) {\n        if (els.indexOf(el) < 0) els.push(el);\n\n        if (!fromLarge && !toLarge) {\n          if (currentNavIsCollapsed) {\n            if (currentNavIsLargeTransparent) {\n              el.className = 'ios-swipeback-navbar-bg-large';\n            }\n\n            el.transform = progress => `translateX(${100 * progress * inverter}%) translateY(calc(-1 * var(--f7-navbar-large-title-height)))`;\n          } else {\n            el.transform = progress => `translateX(${100 * progress * inverter}%)`;\n          }\n        }\n\n        if (!fromLarge && toLarge) {\n          el.className = 'ios-swipeback-navbar-bg-large';\n\n          el.transform = progress => `translateX(${100 * progress * inverter}%) translateY(calc(-1 * ${1 - progress} * var(--f7-navbar-large-title-height)))`;\n        }\n\n        if (fromLarge && toLarge) {\n          el.transform = progress => `translateX(${100 * progress * inverter}%)`;\n        }\n\n        if (fromLarge && !toLarge) {\n          el.transform = progress => `translateX(${100 * progress * inverter}%) translateY(calc(-${progress} * var(--f7-navbar-large-title-height)))`;\n        }\n\n        return;\n      }\n\n      if ($navEl.hasClass('title-large')) return;\n      const isSliding = $navEl.hasClass('sliding') || $navEl.parents('.navbar-inner.sliding').length;\n      if (els.indexOf(el) < 0) els.push(el);\n\n      if (!isSubnavbar || isSubnavbar && !isSliding) {\n        el.opacity = progress => 1 - progress ** 0.33;\n      }\n\n      if (isSliding) {\n        let transformTarget = el;\n\n        if (isLeft && activeNavBackIconText.length && params.iosAnimateNavbarBackIcon) {\n          const textEl = {\n            el: activeNavBackIconText[0]\n          };\n          transformTarget = textEl;\n          els.push(textEl);\n        }\n\n        transformTarget.transform = progress => {\n          let activeNavTranslate = progress * transformTarget.el.f7NavbarRightOffset;\n          if (device.pixelRatio === 1) activeNavTranslate = Math.round(activeNavTranslate);\n\n          if (isSubnavbar && currentNavIsLarge) {\n            return `translate3d(${activeNavTranslate}px, calc(-1 * var(--f7-navbar-large-collapse-progress) * var(--f7-navbar-large-title-height)), 0)`;\n          }\n\n          return `translate3d(${activeNavTranslate}px,0,0)`;\n        };\n      }\n    });\n    $previousNavElements.each(navEl => {\n      const $navEl = $(navEl);\n      const isSubnavbar = $navEl.hasClass('subnavbar');\n      const isLeft = $navEl.hasClass('left');\n      const isTitle = $navEl.hasClass('title');\n      const isBg = $navEl.hasClass('navbar-bg');\n      if ((isTitle || isBg) && previousNavIsTransparent) return;\n      const el = {\n        el: navEl\n      };\n\n      if (toLarge) {\n        if (isTitle) return;\n        if (els.indexOf(el) < 0) els.push(el);\n\n        if ($navEl.hasClass('title-large')) {\n          el.opacity = 1;\n          el.overflow = 'visible';\n          $navEl.find('.title-large-text').each(subNavEl => {\n            els.push({\n              el: subNavEl,\n              'transform-origin': transformOriginTitleLarge,\n              opacity: progress => progress ** 3,\n              transform: progress => `translateX(calc(${1 - progress} * (var(--f7-navbarLeftTextOffset) - var(--f7-navbarTitleLargeOffset)))) translateY(calc(${progress - 1} * var(--f7-navbar-large-title-height) + ${1 - progress} * var(--f7-navbar-large-title-padding-vertical))) scale(${0.5 + progress * 0.5})`\n            });\n          });\n          return;\n        }\n      }\n\n      if (isBg) {\n        if (els.indexOf(el) < 0) els.push(el);\n\n        if (!fromLarge && !toLarge) {\n          if (previousNavIsCollapsed) {\n            if (previousNavIsLargeTransparent) {\n              el.className = 'ios-swipeback-navbar-bg-large';\n            }\n\n            el.transform = progress => `translateX(${(-100 + 100 * progress) * inverter}%) translateY(calc(-1 * var(--f7-navbar-large-title-height)))`;\n          } else {\n            el.transform = progress => `translateX(${(-100 + 100 * progress) * inverter}%)`;\n          }\n        }\n\n        if (!fromLarge && toLarge) {\n          el.transform = progress => `translateX(${(-100 + 100 * progress) * inverter}%) translateY(calc(-1 * ${1 - progress} * var(--f7-navbar-large-title-height)))`;\n        }\n\n        if (fromLarge && !toLarge) {\n          el.className = 'ios-swipeback-navbar-bg-large';\n\n          el.transform = progress => `translateX(${(-100 + 100 * progress) * inverter}%) translateY(calc(-${progress} * var(--f7-navbar-large-title-height)))`;\n        }\n\n        if (fromLarge && toLarge) {\n          el.transform = progress => `translateX(${(-100 + 100 * progress) * inverter}%)`;\n        }\n\n        return;\n      }\n\n      if ($navEl.hasClass('title-large')) return;\n      const isSliding = $navEl.hasClass('sliding') || $previousNavbarEl.children('.navbar-inner.sliding').length;\n      if (els.indexOf(el) < 0) els.push(el);\n\n      if (!isSubnavbar || isSubnavbar && !isSliding) {\n        el.opacity = progress => progress ** 3;\n      }\n\n      if (isSliding) {\n        let transformTarget = el;\n\n        if (isLeft && previousNavBackIconText.length && params.iosAnimateNavbarBackIcon) {\n          const textEl = {\n            el: previousNavBackIconText[0]\n          };\n          transformTarget = textEl;\n          els.push(textEl);\n        }\n\n        transformTarget.transform = progress => {\n          let previousNavTranslate = transformTarget.el.f7NavbarLeftOffset * (1 - progress);\n          if (device.pixelRatio === 1) previousNavTranslate = Math.round(previousNavTranslate);\n\n          if (isSubnavbar && previousNavIsLarge) {\n            return `translate3d(${previousNavTranslate}px, calc(-1 * var(--f7-navbar-large-collapse-progress) * var(--f7-navbar-large-title-height)), 0)`;\n          }\n\n          return `translate3d(${previousNavTranslate}px,0,0)`;\n        };\n      }\n    });\n    return els;\n  }\n\n  function setAnimatableNavElements(_temp) {\n    let {\n      progress,\n      reset,\n      transition,\n      reflow\n    } = _temp === void 0 ? {} : _temp;\n    const styles = ['overflow', 'transform', 'transform-origin', 'opacity'];\n\n    if (transition === true || transition === false) {\n      for (let i = 0; i < animatableNavEls.length; i += 1) {\n        const el = animatableNavEls[i];\n\n        if (el && el.el) {\n          if (transition === true) el.el.classList.add('navbar-page-transitioning');\n          if (transition === false) el.el.classList.remove('navbar-page-transitioning');\n        }\n      }\n    }\n\n    if (reflow && animatableNavEls.length && animatableNavEls[0] && animatableNavEls[0].el) {\n      // eslint-disable-next-line\n      animatableNavEls[0].el._clientLeft = animatableNavEls[0].el.clientLeft;\n    }\n\n    for (let i = 0; i < animatableNavEls.length; i += 1) {\n      const el = animatableNavEls[i];\n\n      if (el && el.el) {\n        if (el.className && !el.classNameSet && !reset) {\n          el.el.classList.add(el.className);\n          el.classNameSet = true;\n        }\n\n        if (el.className && reset) {\n          el.el.classList.remove(el.className);\n        }\n\n        for (let j = 0; j < styles.length; j += 1) {\n          const styleProp = styles[j];\n\n          if (el[styleProp]) {\n            if (reset) {\n              el.el.style[styleProp] = '';\n            } else if (typeof el[styleProp] === 'function') {\n              el.el.style[styleProp] = el[styleProp](progress);\n            } else {\n              el.el.style[styleProp] = el[styleProp];\n            }\n          }\n        }\n      }\n    }\n  }\n\n  function handleTouchStart(e) {\n    const swipeBackEnabled = params[`${app.theme}SwipeBack`];\n    if (!allowViewTouchMove || !swipeBackEnabled || isTouched || app.swipeout && app.swipeout.el || !router.allowPageChange) return;\n    if ($(e.target).closest('.range-slider, .calendar-months').length > 0) return;\n    if ($(e.target).closest('.page-master, .page-master-detail').length > 0 && params.masterDetailBreakpoint > 0 && app.width >= params.masterDetailBreakpoint) return;\n    isMoved = false;\n    isTouched = true;\n    isScrolling = undefined;\n    touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n    touchStartTime = now();\n    dynamicNavbar = router.dynamicNavbar;\n  }\n\n  function handleTouchMove(e) {\n    if (!isTouched) return;\n    const pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    const pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n    if (typeof isScrolling === 'undefined') {\n      isScrolling = !!(isScrolling || Math.abs(pageY - touchesStart.y) > Math.abs(pageX - touchesStart.x)) || pageX < touchesStart.x && !app.rtl || pageX > touchesStart.x && app.rtl;\n    }\n\n    if (isScrolling || e.f7PreventSwipeBack || app.preventSwipeBack) {\n      isTouched = false;\n      return;\n    }\n\n    if (!isMoved) {\n      // Calc values during first move fired\n      let cancel = false;\n      const target = $(e.target);\n      const swipeout = target.closest('.swipeout');\n\n      if (swipeout.length > 0) {\n        if (!app.rtl && swipeout.find('.swipeout-actions-left').length > 0) cancel = true;\n        if (app.rtl && swipeout.find('.swipeout-actions-right').length > 0) cancel = true;\n      }\n\n      $currentPageEl = target.closest('.page');\n      if ($currentPageEl.hasClass('no-swipeback') || target.closest('.no-swipeback, .card-opened').length > 0) cancel = true;\n      $previousPageEl = $el.find('.page-previous:not(.stacked)');\n\n      if ($previousPageEl.length > 1) {\n        $previousPageEl = $previousPageEl.eq($previousPageEl.length - 1);\n      }\n\n      let notFromBorder = touchesStart.x - $el.offset().left > paramsSwipeBackActiveArea;\n      viewContainerWidth = $el.width();\n\n      if (app.rtl) {\n        notFromBorder = touchesStart.x < $el.offset().left - $el[0].scrollLeft + (viewContainerWidth - paramsSwipeBackActiveArea);\n      } else {\n        notFromBorder = touchesStart.x - $el.offset().left > paramsSwipeBackActiveArea;\n      }\n\n      if (notFromBorder) cancel = true;\n      if ($previousPageEl.length === 0 || $currentPageEl.length === 0) cancel = true;\n\n      if (cancel) {\n        isTouched = false;\n        return;\n      }\n\n      if (paramsSwipeBackAnimateShadow) {\n        $pageShadowEl = $currentPageEl.find('.page-shadow-effect');\n\n        if ($pageShadowEl.length === 0) {\n          $pageShadowEl = $('<div class=\"page-shadow-effect\"></div>');\n          $currentPageEl.append($pageShadowEl);\n        }\n      }\n\n      if (paramsSwipeBackAnimateOpacity) {\n        $pageOpacityEl = $previousPageEl.find('.page-opacity-effect');\n\n        if ($pageOpacityEl.length === 0) {\n          $pageOpacityEl = $('<div class=\"page-opacity-effect\"></div>');\n          $previousPageEl.append($pageOpacityEl);\n        }\n      }\n\n      if (dynamicNavbar) {\n        $currentNavbarEl = $navbarsEl.find('.navbar-current:not(.stacked)');\n        $previousNavbarEl = $navbarsEl.find('.navbar-previous:not(.stacked)');\n\n        if ($previousNavbarEl.length > 1) {\n          $previousNavbarEl = $previousNavbarEl.eq($previousNavbarEl.length - 1);\n        }\n\n        animatableNavEls = animatableNavElements($previousNavbarEl, $currentNavbarEl);\n      } // Close/Hide Any Picker\n\n\n      if ($('.sheet.modal-in').length > 0 && app.sheet) {\n        app.sheet.close($('.sheet.modal-in'));\n      }\n    }\n\n    e.f7PreventSwipePanel = true;\n    isMoved = true;\n    app.preventSwipePanelBySwipeBack = true;\n    e.preventDefault(); // RTL inverter\n\n    const inverter = app.rtl ? -1 : 1; // Touches diff\n\n    touchesDiff = (pageX - touchesStart.x - paramsSwipeBackThreshold) * inverter;\n    if (touchesDiff < 0) touchesDiff = 0;\n    const percentage = Math.min(Math.max(touchesDiff / viewContainerWidth, 0), 1); // Swipe Back Callback\n\n    const callbackData = {\n      percentage,\n      progress: percentage,\n      currentPageEl: $currentPageEl[0],\n      previousPageEl: $previousPageEl[0],\n      currentNavbarEl: $currentNavbarEl[0],\n      previousNavbarEl: $previousNavbarEl[0]\n    };\n    $el.trigger('swipeback:move', callbackData);\n    router.emit('swipebackMove', callbackData); // Transform pages\n\n    let currentPageTranslate = touchesDiff * inverter;\n    let previousPageTranslate = (touchesDiff / 5 - viewContainerWidth / 5) * inverter;\n\n    if (!app.rtl) {\n      currentPageTranslate = Math.min(currentPageTranslate, viewContainerWidth);\n      previousPageTranslate = Math.min(previousPageTranslate, 0);\n    } else {\n      currentPageTranslate = Math.max(currentPageTranslate, -viewContainerWidth);\n      previousPageTranslate = Math.max(previousPageTranslate, 0);\n    }\n\n    if (device.pixelRatio === 1) {\n      currentPageTranslate = Math.round(currentPageTranslate);\n      previousPageTranslate = Math.round(previousPageTranslate);\n    }\n\n    router.swipeBackActive = true;\n    $([$currentPageEl[0], $previousPageEl[0]]).addClass('page-swipeback-active');\n    $currentPageEl.transform(`translate3d(${currentPageTranslate}px,0,0)`);\n    if (paramsSwipeBackAnimateShadow) $pageShadowEl[0].style.opacity = 1 - 1 * percentage;\n\n    if (app.theme === 'ios') {\n      $previousPageEl.transform(`translate3d(${previousPageTranslate}px,0,0)`);\n    }\n\n    if (paramsSwipeBackAnimateOpacity) $pageOpacityEl[0].style.opacity = 1 - 1 * percentage; // Dynamic Navbars Animation\n\n    if (!dynamicNavbar) return;\n    setAnimatableNavElements({\n      progress: percentage\n    });\n  }\n\n  function handleTouchEnd() {\n    app.preventSwipePanelBySwipeBack = false;\n\n    if (!isTouched || !isMoved) {\n      isTouched = false;\n      isMoved = false;\n      return;\n    }\n\n    isTouched = false;\n    isMoved = false;\n    router.swipeBackActive = false;\n    const $pages = $([$currentPageEl[0], $previousPageEl[0]]);\n    $pages.removeClass('page-swipeback-active');\n\n    if (touchesDiff === 0) {\n      $pages.transform('');\n      if ($pageShadowEl && $pageShadowEl.length > 0) $pageShadowEl.remove();\n      if ($pageOpacityEl && $pageOpacityEl.length > 0) $pageOpacityEl.remove();\n\n      if (dynamicNavbar) {\n        setAnimatableNavElements({\n          reset: true\n        });\n      }\n\n      return;\n    }\n\n    const timeDiff = now() - touchStartTime;\n    let pageChanged = false; // Swipe back to previous page\n\n    if (timeDiff < 300 && touchesDiff > 10 || timeDiff >= 300 && touchesDiff > viewContainerWidth / 2) {\n      $currentPageEl.removeClass('page-current').addClass(`page-next${app.theme !== 'ios' ? ' page-next-on-right' : ''}`);\n      $previousPageEl.removeClass('page-previous').addClass('page-current').removeAttr('aria-hidden');\n      if ($pageShadowEl) $pageShadowEl[0].style.opacity = '';\n      if ($pageOpacityEl) $pageOpacityEl[0].style.opacity = '';\n\n      if (dynamicNavbar) {\n        router.setNavbarPosition($currentNavbarEl, 'next');\n        router.setNavbarPosition($previousNavbarEl, 'current', false);\n      }\n\n      pageChanged = true;\n    } // Reset custom styles\n    // Add transitioning class for transition-duration\n\n\n    $pages.addClass('page-transitioning page-transitioning-swipeback');\n\n    if (device.ios) {\n      // eslint-disable-next-line\n      $currentPageEl[0]._clientLeft = $currentPageEl[0].clientLeft;\n    }\n\n    $pages.transform('');\n\n    if (dynamicNavbar) {\n      setAnimatableNavElements({\n        progress: pageChanged ? 1 : 0,\n        transition: true,\n        reflow: !!device.ios\n      });\n    }\n\n    allowViewTouchMove = false;\n    router.allowPageChange = false; // Swipe Back Callback\n\n    const callbackData = {\n      currentPageEl: $currentPageEl[0],\n      previousPageEl: $previousPageEl[0],\n      currentNavbarEl: $currentNavbarEl[0],\n      previousNavbarEl: $previousNavbarEl[0]\n    };\n\n    if (pageChanged) {\n      // Update Route\n      router.currentRoute = $previousPageEl[0].f7Page.route;\n      router.currentPage = $previousPageEl[0]; // Page before animation callback\n\n      router.pageCallback('beforeOut', $currentPageEl, $currentNavbarEl, 'current', 'next', {\n        route: $currentPageEl[0].f7Page.route,\n        swipeBack: true\n      });\n      router.pageCallback('beforeIn', $previousPageEl, $previousNavbarEl, 'previous', 'current', {\n        route: $previousPageEl[0].f7Page.route,\n        swipeBack: true\n      }, $currentPageEl[0]);\n      $el.trigger('swipeback:beforechange', callbackData);\n      router.emit('swipebackBeforeChange', callbackData);\n    } else {\n      $el.trigger('swipeback:beforereset', callbackData);\n      router.emit('swipebackBeforeReset', callbackData);\n    }\n\n    $currentPageEl.transitionEnd(() => {\n      $pages.removeClass('page-transitioning page-transitioning-swipeback');\n\n      if (dynamicNavbar) {\n        setAnimatableNavElements({\n          reset: true,\n          transition: false\n        });\n      }\n\n      allowViewTouchMove = true;\n      router.allowPageChange = true;\n\n      if (pageChanged) {\n        // Update History\n        if (router.history.length === 1) {\n          router.history.unshift(router.url);\n        }\n\n        router.history.pop();\n        router.saveHistory(); // Update push state\n\n        if (params.browserHistory) {\n          History.back();\n        } // Page after animation callback\n\n\n        router.pageCallback('afterOut', $currentPageEl, $currentNavbarEl, 'current', 'next', {\n          route: $currentPageEl[0].f7Page.route,\n          swipeBack: true\n        });\n        router.pageCallback('afterIn', $previousPageEl, $previousNavbarEl, 'previous', 'current', {\n          route: $previousPageEl[0].f7Page.route,\n          swipeBack: true\n        }); // Remove Old Page\n\n        if (params.stackPages && router.initialPages.indexOf($currentPageEl[0]) >= 0) {\n          $currentPageEl.addClass('stacked');\n\n          if (dynamicNavbar) {\n            $currentNavbarEl.addClass('stacked');\n          }\n        } else {\n          router.pageCallback('beforeRemove', $currentPageEl, $currentNavbarEl, 'next', {\n            swipeBack: true\n          });\n          router.removePage($currentPageEl);\n\n          if (dynamicNavbar) {\n            router.removeNavbar($currentNavbarEl);\n          }\n        }\n\n        $el.trigger('swipeback:afterchange', callbackData);\n        router.emit('swipebackAfterChange', callbackData);\n        router.emit('routeChanged', router.currentRoute, router.previousRoute, router);\n\n        if (params.preloadPreviousPage) {\n          router.back(router.history[router.history.length - 2], {\n            preload: true\n          });\n        }\n      } else {\n        $el.trigger('swipeback:afterreset', callbackData);\n        router.emit('swipebackAfterReset', callbackData);\n      }\n\n      if ($pageShadowEl && $pageShadowEl.length > 0) $pageShadowEl.remove();\n      if ($pageOpacityEl && $pageOpacityEl.length > 0) $pageOpacityEl.remove();\n    });\n  }\n\n  function attachEvents() {\n    const passiveListener = app.touchEvents.start === 'touchstart' && support.passiveListener ? {\n      passive: true,\n      capture: false\n    } : false;\n    $el.on(app.touchEvents.start, handleTouchStart, passiveListener);\n    app.on('touchmove:active', handleTouchMove);\n    app.on('touchend:passive', handleTouchEnd);\n  }\n\n  function detachEvents() {\n    const passiveListener = app.touchEvents.start === 'touchstart' && support.passiveListener ? {\n      passive: true,\n      capture: false\n    } : false;\n    $el.off(app.touchEvents.start, handleTouchStart, passiveListener);\n    app.off('touchmove:active', handleTouchMove);\n    app.off('touchend:passive', handleTouchEnd);\n  }\n\n  attachEvents();\n  router.on('routerDestroy', detachEvents);\n}\n\nexport default SwipeBack;","map":{"version":3,"names":["$","History","getSupport","getDevice","now","SwipeBack","r","router","$el","$navbarsEl","app","params","support","device","isTouched","isMoved","touchesStart","isScrolling","$currentPageEl","$previousPageEl","viewContainerWidth","touchesDiff","allowViewTouchMove","touchStartTime","$currentNavbarEl","$previousNavbarEl","dynamicNavbar","$pageShadowEl","$pageOpacityEl","animatableNavEls","paramsSwipeBackAnimateShadow","theme","paramsSwipeBackAnimateOpacity","paramsSwipeBackActiveArea","paramsSwipeBackThreshold","transformOrigin","rtl","transformOriginTitleLarge","animatableNavElements","els","inverter","currentNavIsTransparent","hasClass","currentNavIsLarge","currentNavIsCollapsed","currentNavIsLargeTransparent","previousNavIsTransparent","previousNavIsLarge","previousNavIsCollapsed","previousNavIsLargeTransparent","fromLarge","toLarge","$currentNavElements","find","$previousNavElements","activeNavBackIconText","previousNavBackIconText","iosAnimateNavbarBackIcon","length","eq","each","el","f7NavbarLeftOffset","prev","offsetWidth","navEl","$navEl","isSubnavbar","isLeft","isTitle","isBg","indexOf","push","overflow","subNavEl","transform","progress","opacity","className","isSliding","parents","transformTarget","textEl","activeNavTranslate","f7NavbarRightOffset","pixelRatio","Math","round","children","previousNavTranslate","setAnimatableNavElements","_temp","reset","transition","reflow","styles","i","classList","add","remove","_clientLeft","clientLeft","classNameSet","j","styleProp","style","handleTouchStart","e","swipeBackEnabled","swipeout","allowPageChange","target","closest","masterDetailBreakpoint","width","undefined","x","type","targetTouches","pageX","y","pageY","handleTouchMove","abs","f7PreventSwipeBack","preventSwipeBack","cancel","notFromBorder","offset","left","scrollLeft","append","sheet","close","f7PreventSwipePanel","preventSwipePanelBySwipeBack","preventDefault","percentage","min","max","callbackData","currentPageEl","previousPageEl","currentNavbarEl","previousNavbarEl","trigger","emit","currentPageTranslate","previousPageTranslate","swipeBackActive","addClass","handleTouchEnd","$pages","removeClass","timeDiff","pageChanged","removeAttr","setNavbarPosition","ios","currentRoute","f7Page","route","currentPage","pageCallback","swipeBack","transitionEnd","history","unshift","url","pop","saveHistory","browserHistory","back","stackPages","initialPages","removePage","removeNavbar","previousRoute","preloadPreviousPage","preload","attachEvents","passiveListener","touchEvents","start","passive","capture","on","detachEvents","off"],"sources":["C:/Users/Babak/userlogin/node_modules/framework7/modules/router/swipe-back.js"],"sourcesContent":["import $ from '../../shared/dom7.js';\nimport History from '../../shared/history.js';\nimport { getSupport } from '../../shared/get-support.js';\nimport { getDevice } from '../../shared/get-device.js';\nimport { now } from '../../shared/utils.js';\n\nfunction SwipeBack(r) {\n  const router = r;\n  const {\n    $el,\n    $navbarsEl,\n    app,\n    params\n  } = router;\n  const support = getSupport();\n  const device = getDevice();\n  let isTouched = false;\n  let isMoved = false;\n  const touchesStart = {};\n  let isScrolling;\n  let $currentPageEl = [];\n  let $previousPageEl = [];\n  let viewContainerWidth;\n  let touchesDiff;\n  let allowViewTouchMove = true;\n  let touchStartTime;\n  let $currentNavbarEl = [];\n  let $previousNavbarEl = [];\n  let dynamicNavbar;\n  let $pageShadowEl;\n  let $pageOpacityEl;\n  let animatableNavEls;\n  const paramsSwipeBackAnimateShadow = params[`${app.theme}SwipeBackAnimateShadow`];\n  const paramsSwipeBackAnimateOpacity = params[`${app.theme}SwipeBackAnimateOpacity`];\n  const paramsSwipeBackActiveArea = params[`${app.theme}SwipeBackActiveArea`];\n  const paramsSwipeBackThreshold = params[`${app.theme}SwipeBackThreshold`];\n  const transformOrigin = app.rtl ? 'right center' : 'left center';\n  const transformOriginTitleLarge = app.rtl ? 'calc(100% - var(--f7-navbar-large-title-padding-left) - var(--f7-safe-area-left)) center' : 'calc(var(--f7-navbar-large-title-padding-left) + var(--f7-safe-area-left)) center';\n\n  function animatableNavElements() {\n    const els = [];\n    const inverter = app.rtl ? -1 : 1;\n    const currentNavIsTransparent = $currentNavbarEl.hasClass('navbar-transparent') && !$currentNavbarEl.hasClass('navbar-large') && !$currentNavbarEl.hasClass('navbar-transparent-visible');\n    const currentNavIsLarge = $currentNavbarEl.hasClass('navbar-large');\n    const currentNavIsCollapsed = $currentNavbarEl.hasClass('navbar-large-collapsed');\n    const currentNavIsLargeTransparent = $currentNavbarEl.hasClass('navbar-large-transparent') || $currentNavbarEl.hasClass('navbar-large') && $currentNavbarEl.hasClass('navbar-transparent');\n    const previousNavIsTransparent = $previousNavbarEl.hasClass('navbar-transparent') && !$previousNavbarEl.hasClass('navbar-large') && !$previousNavbarEl.hasClass('navbar-transparent-visible');\n    const previousNavIsLarge = $previousNavbarEl.hasClass('navbar-large');\n    const previousNavIsCollapsed = $previousNavbarEl.hasClass('navbar-large-collapsed');\n    const previousNavIsLargeTransparent = $previousNavbarEl.hasClass('navbar-large-transparent') || $previousNavbarEl.hasClass('navbar-large') && $previousNavbarEl.hasClass('navbar-transparent');\n    const fromLarge = currentNavIsLarge && !currentNavIsCollapsed;\n    const toLarge = previousNavIsLarge && !previousNavIsCollapsed;\n    const $currentNavElements = $currentNavbarEl.find('.left, .title, .right, .subnavbar, .fading, .title-large, .navbar-bg');\n    const $previousNavElements = $previousNavbarEl.find('.left, .title, .right, .subnavbar, .fading, .title-large, .navbar-bg');\n    let activeNavBackIconText;\n    let previousNavBackIconText;\n\n    if (params.iosAnimateNavbarBackIcon) {\n      if ($currentNavbarEl.hasClass('sliding') || $currentNavbarEl.find('.navbar-inner.sliding').length) {\n        activeNavBackIconText = $currentNavbarEl.find('.left').find('.back .icon + span').eq(0);\n      } else {\n        activeNavBackIconText = $currentNavbarEl.find('.left.sliding').find('.back .icon + span').eq(0);\n      }\n\n      if ($previousNavbarEl.hasClass('sliding') || $previousNavbarEl.find('.navbar-inner.sliding').length) {\n        previousNavBackIconText = $previousNavbarEl.find('.left').find('.back .icon + span').eq(0);\n      } else {\n        previousNavBackIconText = $previousNavbarEl.find('.left.sliding').find('.back .icon + span').eq(0);\n      }\n\n      if (activeNavBackIconText.length) {\n        $previousNavElements.each(el => {\n          if (!$(el).hasClass('title')) return;\n          el.f7NavbarLeftOffset += activeNavBackIconText.prev('.icon')[0].offsetWidth;\n        });\n      }\n    }\n\n    $currentNavElements.each(navEl => {\n      const $navEl = $(navEl);\n      const isSubnavbar = $navEl.hasClass('subnavbar');\n      const isLeft = $navEl.hasClass('left');\n      const isTitle = $navEl.hasClass('title');\n      const isBg = $navEl.hasClass('navbar-bg');\n      if ((isTitle || isBg) && currentNavIsTransparent) return;\n      if (!fromLarge && $navEl.hasClass('.title-large')) return;\n      const el = {\n        el: navEl\n      };\n\n      if (fromLarge) {\n        if (isTitle) return;\n\n        if ($navEl.hasClass('title-large')) {\n          if (els.indexOf(el) < 0) els.push(el);\n          el.overflow = 'visible';\n          $navEl.find('.title-large-text').each(subNavEl => {\n            els.push({\n              el: subNavEl,\n              transform: progress => `translateX(${progress * 100 * inverter}%)`\n            });\n          });\n          return;\n        }\n      }\n\n      if (toLarge) {\n        if (!fromLarge) {\n          if ($navEl.hasClass('title-large')) {\n            if (els.indexOf(el) < 0) els.push(el);\n            el.opacity = 0;\n          }\n        }\n\n        if (isLeft) {\n          if (els.indexOf(el) < 0) els.push(el);\n\n          el.opacity = progress => 1 - progress ** 0.33;\n\n          $navEl.find('.back span').each(subNavEl => {\n            els.push({\n              el: subNavEl,\n              'transform-origin': transformOrigin,\n              transform: progress => `translateX(calc(${progress} * (var(--f7-navbarTitleLargeOffset) - var(--f7-navbarLeftTextOffset)))) translateY(calc(${progress} * (var(--f7-navbar-large-title-height) - var(--f7-navbar-large-title-padding-vertical) / 2))) scale(${1 + 1 * progress})`\n            });\n          });\n          return;\n        }\n      }\n\n      if (isBg) {\n        if (els.indexOf(el) < 0) els.push(el);\n\n        if (!fromLarge && !toLarge) {\n          if (currentNavIsCollapsed) {\n            if (currentNavIsLargeTransparent) {\n              el.className = 'ios-swipeback-navbar-bg-large';\n            }\n\n            el.transform = progress => `translateX(${100 * progress * inverter}%) translateY(calc(-1 * var(--f7-navbar-large-title-height)))`;\n          } else {\n            el.transform = progress => `translateX(${100 * progress * inverter}%)`;\n          }\n        }\n\n        if (!fromLarge && toLarge) {\n          el.className = 'ios-swipeback-navbar-bg-large';\n\n          el.transform = progress => `translateX(${100 * progress * inverter}%) translateY(calc(-1 * ${1 - progress} * var(--f7-navbar-large-title-height)))`;\n        }\n\n        if (fromLarge && toLarge) {\n          el.transform = progress => `translateX(${100 * progress * inverter}%)`;\n        }\n\n        if (fromLarge && !toLarge) {\n          el.transform = progress => `translateX(${100 * progress * inverter}%) translateY(calc(-${progress} * var(--f7-navbar-large-title-height)))`;\n        }\n\n        return;\n      }\n\n      if ($navEl.hasClass('title-large')) return;\n      const isSliding = $navEl.hasClass('sliding') || $navEl.parents('.navbar-inner.sliding').length;\n      if (els.indexOf(el) < 0) els.push(el);\n\n      if (!isSubnavbar || isSubnavbar && !isSliding) {\n        el.opacity = progress => 1 - progress ** 0.33;\n      }\n\n      if (isSliding) {\n        let transformTarget = el;\n\n        if (isLeft && activeNavBackIconText.length && params.iosAnimateNavbarBackIcon) {\n          const textEl = {\n            el: activeNavBackIconText[0]\n          };\n          transformTarget = textEl;\n          els.push(textEl);\n        }\n\n        transformTarget.transform = progress => {\n          let activeNavTranslate = progress * transformTarget.el.f7NavbarRightOffset;\n          if (device.pixelRatio === 1) activeNavTranslate = Math.round(activeNavTranslate);\n\n          if (isSubnavbar && currentNavIsLarge) {\n            return `translate3d(${activeNavTranslate}px, calc(-1 * var(--f7-navbar-large-collapse-progress) * var(--f7-navbar-large-title-height)), 0)`;\n          }\n\n          return `translate3d(${activeNavTranslate}px,0,0)`;\n        };\n      }\n    });\n    $previousNavElements.each(navEl => {\n      const $navEl = $(navEl);\n      const isSubnavbar = $navEl.hasClass('subnavbar');\n      const isLeft = $navEl.hasClass('left');\n      const isTitle = $navEl.hasClass('title');\n      const isBg = $navEl.hasClass('navbar-bg');\n      if ((isTitle || isBg) && previousNavIsTransparent) return;\n      const el = {\n        el: navEl\n      };\n\n      if (toLarge) {\n        if (isTitle) return;\n        if (els.indexOf(el) < 0) els.push(el);\n\n        if ($navEl.hasClass('title-large')) {\n          el.opacity = 1;\n          el.overflow = 'visible';\n          $navEl.find('.title-large-text').each(subNavEl => {\n            els.push({\n              el: subNavEl,\n              'transform-origin': transformOriginTitleLarge,\n              opacity: progress => progress ** 3,\n              transform: progress => `translateX(calc(${1 - progress} * (var(--f7-navbarLeftTextOffset) - var(--f7-navbarTitleLargeOffset)))) translateY(calc(${progress - 1} * var(--f7-navbar-large-title-height) + ${1 - progress} * var(--f7-navbar-large-title-padding-vertical))) scale(${0.5 + progress * 0.5})`\n            });\n          });\n          return;\n        }\n      }\n\n      if (isBg) {\n        if (els.indexOf(el) < 0) els.push(el);\n\n        if (!fromLarge && !toLarge) {\n          if (previousNavIsCollapsed) {\n            if (previousNavIsLargeTransparent) {\n              el.className = 'ios-swipeback-navbar-bg-large';\n            }\n\n            el.transform = progress => `translateX(${(-100 + 100 * progress) * inverter}%) translateY(calc(-1 * var(--f7-navbar-large-title-height)))`;\n          } else {\n            el.transform = progress => `translateX(${(-100 + 100 * progress) * inverter}%)`;\n          }\n        }\n\n        if (!fromLarge && toLarge) {\n          el.transform = progress => `translateX(${(-100 + 100 * progress) * inverter}%) translateY(calc(-1 * ${1 - progress} * var(--f7-navbar-large-title-height)))`;\n        }\n\n        if (fromLarge && !toLarge) {\n          el.className = 'ios-swipeback-navbar-bg-large';\n\n          el.transform = progress => `translateX(${(-100 + 100 * progress) * inverter}%) translateY(calc(-${progress} * var(--f7-navbar-large-title-height)))`;\n        }\n\n        if (fromLarge && toLarge) {\n          el.transform = progress => `translateX(${(-100 + 100 * progress) * inverter}%)`;\n        }\n\n        return;\n      }\n\n      if ($navEl.hasClass('title-large')) return;\n      const isSliding = $navEl.hasClass('sliding') || $previousNavbarEl.children('.navbar-inner.sliding').length;\n      if (els.indexOf(el) < 0) els.push(el);\n\n      if (!isSubnavbar || isSubnavbar && !isSliding) {\n        el.opacity = progress => progress ** 3;\n      }\n\n      if (isSliding) {\n        let transformTarget = el;\n\n        if (isLeft && previousNavBackIconText.length && params.iosAnimateNavbarBackIcon) {\n          const textEl = {\n            el: previousNavBackIconText[0]\n          };\n          transformTarget = textEl;\n          els.push(textEl);\n        }\n\n        transformTarget.transform = progress => {\n          let previousNavTranslate = transformTarget.el.f7NavbarLeftOffset * (1 - progress);\n          if (device.pixelRatio === 1) previousNavTranslate = Math.round(previousNavTranslate);\n\n          if (isSubnavbar && previousNavIsLarge) {\n            return `translate3d(${previousNavTranslate}px, calc(-1 * var(--f7-navbar-large-collapse-progress) * var(--f7-navbar-large-title-height)), 0)`;\n          }\n\n          return `translate3d(${previousNavTranslate}px,0,0)`;\n        };\n      }\n    });\n    return els;\n  }\n\n  function setAnimatableNavElements(_temp) {\n    let {\n      progress,\n      reset,\n      transition,\n      reflow\n    } = _temp === void 0 ? {} : _temp;\n    const styles = ['overflow', 'transform', 'transform-origin', 'opacity'];\n\n    if (transition === true || transition === false) {\n      for (let i = 0; i < animatableNavEls.length; i += 1) {\n        const el = animatableNavEls[i];\n\n        if (el && el.el) {\n          if (transition === true) el.el.classList.add('navbar-page-transitioning');\n          if (transition === false) el.el.classList.remove('navbar-page-transitioning');\n        }\n      }\n    }\n\n    if (reflow && animatableNavEls.length && animatableNavEls[0] && animatableNavEls[0].el) {\n      // eslint-disable-next-line\n      animatableNavEls[0].el._clientLeft = animatableNavEls[0].el.clientLeft;\n    }\n\n    for (let i = 0; i < animatableNavEls.length; i += 1) {\n      const el = animatableNavEls[i];\n\n      if (el && el.el) {\n        if (el.className && !el.classNameSet && !reset) {\n          el.el.classList.add(el.className);\n          el.classNameSet = true;\n        }\n\n        if (el.className && reset) {\n          el.el.classList.remove(el.className);\n        }\n\n        for (let j = 0; j < styles.length; j += 1) {\n          const styleProp = styles[j];\n\n          if (el[styleProp]) {\n            if (reset) {\n              el.el.style[styleProp] = '';\n            } else if (typeof el[styleProp] === 'function') {\n              el.el.style[styleProp] = el[styleProp](progress);\n            } else {\n              el.el.style[styleProp] = el[styleProp];\n            }\n          }\n        }\n      }\n    }\n  }\n\n  function handleTouchStart(e) {\n    const swipeBackEnabled = params[`${app.theme}SwipeBack`];\n    if (!allowViewTouchMove || !swipeBackEnabled || isTouched || app.swipeout && app.swipeout.el || !router.allowPageChange) return;\n    if ($(e.target).closest('.range-slider, .calendar-months').length > 0) return;\n    if ($(e.target).closest('.page-master, .page-master-detail').length > 0 && params.masterDetailBreakpoint > 0 && app.width >= params.masterDetailBreakpoint) return;\n    isMoved = false;\n    isTouched = true;\n    isScrolling = undefined;\n    touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n    touchStartTime = now();\n    dynamicNavbar = router.dynamicNavbar;\n  }\n\n  function handleTouchMove(e) {\n    if (!isTouched) return;\n    const pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    const pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n    if (typeof isScrolling === 'undefined') {\n      isScrolling = !!(isScrolling || Math.abs(pageY - touchesStart.y) > Math.abs(pageX - touchesStart.x)) || pageX < touchesStart.x && !app.rtl || pageX > touchesStart.x && app.rtl;\n    }\n\n    if (isScrolling || e.f7PreventSwipeBack || app.preventSwipeBack) {\n      isTouched = false;\n      return;\n    }\n\n    if (!isMoved) {\n      // Calc values during first move fired\n      let cancel = false;\n      const target = $(e.target);\n      const swipeout = target.closest('.swipeout');\n\n      if (swipeout.length > 0) {\n        if (!app.rtl && swipeout.find('.swipeout-actions-left').length > 0) cancel = true;\n        if (app.rtl && swipeout.find('.swipeout-actions-right').length > 0) cancel = true;\n      }\n\n      $currentPageEl = target.closest('.page');\n      if ($currentPageEl.hasClass('no-swipeback') || target.closest('.no-swipeback, .card-opened').length > 0) cancel = true;\n      $previousPageEl = $el.find('.page-previous:not(.stacked)');\n\n      if ($previousPageEl.length > 1) {\n        $previousPageEl = $previousPageEl.eq($previousPageEl.length - 1);\n      }\n\n      let notFromBorder = touchesStart.x - $el.offset().left > paramsSwipeBackActiveArea;\n      viewContainerWidth = $el.width();\n\n      if (app.rtl) {\n        notFromBorder = touchesStart.x < $el.offset().left - $el[0].scrollLeft + (viewContainerWidth - paramsSwipeBackActiveArea);\n      } else {\n        notFromBorder = touchesStart.x - $el.offset().left > paramsSwipeBackActiveArea;\n      }\n\n      if (notFromBorder) cancel = true;\n      if ($previousPageEl.length === 0 || $currentPageEl.length === 0) cancel = true;\n\n      if (cancel) {\n        isTouched = false;\n        return;\n      }\n\n      if (paramsSwipeBackAnimateShadow) {\n        $pageShadowEl = $currentPageEl.find('.page-shadow-effect');\n\n        if ($pageShadowEl.length === 0) {\n          $pageShadowEl = $('<div class=\"page-shadow-effect\"></div>');\n          $currentPageEl.append($pageShadowEl);\n        }\n      }\n\n      if (paramsSwipeBackAnimateOpacity) {\n        $pageOpacityEl = $previousPageEl.find('.page-opacity-effect');\n\n        if ($pageOpacityEl.length === 0) {\n          $pageOpacityEl = $('<div class=\"page-opacity-effect\"></div>');\n          $previousPageEl.append($pageOpacityEl);\n        }\n      }\n\n      if (dynamicNavbar) {\n        $currentNavbarEl = $navbarsEl.find('.navbar-current:not(.stacked)');\n        $previousNavbarEl = $navbarsEl.find('.navbar-previous:not(.stacked)');\n\n        if ($previousNavbarEl.length > 1) {\n          $previousNavbarEl = $previousNavbarEl.eq($previousNavbarEl.length - 1);\n        }\n\n        animatableNavEls = animatableNavElements($previousNavbarEl, $currentNavbarEl);\n      } // Close/Hide Any Picker\n\n\n      if ($('.sheet.modal-in').length > 0 && app.sheet) {\n        app.sheet.close($('.sheet.modal-in'));\n      }\n    }\n\n    e.f7PreventSwipePanel = true;\n    isMoved = true;\n    app.preventSwipePanelBySwipeBack = true;\n    e.preventDefault(); // RTL inverter\n\n    const inverter = app.rtl ? -1 : 1; // Touches diff\n\n    touchesDiff = (pageX - touchesStart.x - paramsSwipeBackThreshold) * inverter;\n    if (touchesDiff < 0) touchesDiff = 0;\n    const percentage = Math.min(Math.max(touchesDiff / viewContainerWidth, 0), 1); // Swipe Back Callback\n\n    const callbackData = {\n      percentage,\n      progress: percentage,\n      currentPageEl: $currentPageEl[0],\n      previousPageEl: $previousPageEl[0],\n      currentNavbarEl: $currentNavbarEl[0],\n      previousNavbarEl: $previousNavbarEl[0]\n    };\n    $el.trigger('swipeback:move', callbackData);\n    router.emit('swipebackMove', callbackData); // Transform pages\n\n    let currentPageTranslate = touchesDiff * inverter;\n    let previousPageTranslate = (touchesDiff / 5 - viewContainerWidth / 5) * inverter;\n\n    if (!app.rtl) {\n      currentPageTranslate = Math.min(currentPageTranslate, viewContainerWidth);\n      previousPageTranslate = Math.min(previousPageTranslate, 0);\n    } else {\n      currentPageTranslate = Math.max(currentPageTranslate, -viewContainerWidth);\n      previousPageTranslate = Math.max(previousPageTranslate, 0);\n    }\n\n    if (device.pixelRatio === 1) {\n      currentPageTranslate = Math.round(currentPageTranslate);\n      previousPageTranslate = Math.round(previousPageTranslate);\n    }\n\n    router.swipeBackActive = true;\n    $([$currentPageEl[0], $previousPageEl[0]]).addClass('page-swipeback-active');\n    $currentPageEl.transform(`translate3d(${currentPageTranslate}px,0,0)`);\n    if (paramsSwipeBackAnimateShadow) $pageShadowEl[0].style.opacity = 1 - 1 * percentage;\n\n    if (app.theme === 'ios') {\n      $previousPageEl.transform(`translate3d(${previousPageTranslate}px,0,0)`);\n    }\n\n    if (paramsSwipeBackAnimateOpacity) $pageOpacityEl[0].style.opacity = 1 - 1 * percentage; // Dynamic Navbars Animation\n\n    if (!dynamicNavbar) return;\n    setAnimatableNavElements({\n      progress: percentage\n    });\n  }\n\n  function handleTouchEnd() {\n    app.preventSwipePanelBySwipeBack = false;\n\n    if (!isTouched || !isMoved) {\n      isTouched = false;\n      isMoved = false;\n      return;\n    }\n\n    isTouched = false;\n    isMoved = false;\n    router.swipeBackActive = false;\n    const $pages = $([$currentPageEl[0], $previousPageEl[0]]);\n    $pages.removeClass('page-swipeback-active');\n\n    if (touchesDiff === 0) {\n      $pages.transform('');\n      if ($pageShadowEl && $pageShadowEl.length > 0) $pageShadowEl.remove();\n      if ($pageOpacityEl && $pageOpacityEl.length > 0) $pageOpacityEl.remove();\n\n      if (dynamicNavbar) {\n        setAnimatableNavElements({\n          reset: true\n        });\n      }\n\n      return;\n    }\n\n    const timeDiff = now() - touchStartTime;\n    let pageChanged = false; // Swipe back to previous page\n\n    if (timeDiff < 300 && touchesDiff > 10 || timeDiff >= 300 && touchesDiff > viewContainerWidth / 2) {\n      $currentPageEl.removeClass('page-current').addClass(`page-next${app.theme !== 'ios' ? ' page-next-on-right' : ''}`);\n      $previousPageEl.removeClass('page-previous').addClass('page-current').removeAttr('aria-hidden');\n      if ($pageShadowEl) $pageShadowEl[0].style.opacity = '';\n      if ($pageOpacityEl) $pageOpacityEl[0].style.opacity = '';\n\n      if (dynamicNavbar) {\n        router.setNavbarPosition($currentNavbarEl, 'next');\n        router.setNavbarPosition($previousNavbarEl, 'current', false);\n      }\n\n      pageChanged = true;\n    } // Reset custom styles\n    // Add transitioning class for transition-duration\n\n\n    $pages.addClass('page-transitioning page-transitioning-swipeback');\n\n    if (device.ios) {\n      // eslint-disable-next-line\n      $currentPageEl[0]._clientLeft = $currentPageEl[0].clientLeft;\n    }\n\n    $pages.transform('');\n\n    if (dynamicNavbar) {\n      setAnimatableNavElements({\n        progress: pageChanged ? 1 : 0,\n        transition: true,\n        reflow: !!device.ios\n      });\n    }\n\n    allowViewTouchMove = false;\n    router.allowPageChange = false; // Swipe Back Callback\n\n    const callbackData = {\n      currentPageEl: $currentPageEl[0],\n      previousPageEl: $previousPageEl[0],\n      currentNavbarEl: $currentNavbarEl[0],\n      previousNavbarEl: $previousNavbarEl[0]\n    };\n\n    if (pageChanged) {\n      // Update Route\n      router.currentRoute = $previousPageEl[0].f7Page.route;\n      router.currentPage = $previousPageEl[0]; // Page before animation callback\n\n      router.pageCallback('beforeOut', $currentPageEl, $currentNavbarEl, 'current', 'next', {\n        route: $currentPageEl[0].f7Page.route,\n        swipeBack: true\n      });\n      router.pageCallback('beforeIn', $previousPageEl, $previousNavbarEl, 'previous', 'current', {\n        route: $previousPageEl[0].f7Page.route,\n        swipeBack: true\n      }, $currentPageEl[0]);\n      $el.trigger('swipeback:beforechange', callbackData);\n      router.emit('swipebackBeforeChange', callbackData);\n    } else {\n      $el.trigger('swipeback:beforereset', callbackData);\n      router.emit('swipebackBeforeReset', callbackData);\n    }\n\n    $currentPageEl.transitionEnd(() => {\n      $pages.removeClass('page-transitioning page-transitioning-swipeback');\n\n      if (dynamicNavbar) {\n        setAnimatableNavElements({\n          reset: true,\n          transition: false\n        });\n      }\n\n      allowViewTouchMove = true;\n      router.allowPageChange = true;\n\n      if (pageChanged) {\n        // Update History\n        if (router.history.length === 1) {\n          router.history.unshift(router.url);\n        }\n\n        router.history.pop();\n        router.saveHistory(); // Update push state\n\n        if (params.browserHistory) {\n          History.back();\n        } // Page after animation callback\n\n\n        router.pageCallback('afterOut', $currentPageEl, $currentNavbarEl, 'current', 'next', {\n          route: $currentPageEl[0].f7Page.route,\n          swipeBack: true\n        });\n        router.pageCallback('afterIn', $previousPageEl, $previousNavbarEl, 'previous', 'current', {\n          route: $previousPageEl[0].f7Page.route,\n          swipeBack: true\n        }); // Remove Old Page\n\n        if (params.stackPages && router.initialPages.indexOf($currentPageEl[0]) >= 0) {\n          $currentPageEl.addClass('stacked');\n\n          if (dynamicNavbar) {\n            $currentNavbarEl.addClass('stacked');\n          }\n        } else {\n          router.pageCallback('beforeRemove', $currentPageEl, $currentNavbarEl, 'next', {\n            swipeBack: true\n          });\n          router.removePage($currentPageEl);\n\n          if (dynamicNavbar) {\n            router.removeNavbar($currentNavbarEl);\n          }\n        }\n\n        $el.trigger('swipeback:afterchange', callbackData);\n        router.emit('swipebackAfterChange', callbackData);\n        router.emit('routeChanged', router.currentRoute, router.previousRoute, router);\n\n        if (params.preloadPreviousPage) {\n          router.back(router.history[router.history.length - 2], {\n            preload: true\n          });\n        }\n      } else {\n        $el.trigger('swipeback:afterreset', callbackData);\n        router.emit('swipebackAfterReset', callbackData);\n      }\n\n      if ($pageShadowEl && $pageShadowEl.length > 0) $pageShadowEl.remove();\n      if ($pageOpacityEl && $pageOpacityEl.length > 0) $pageOpacityEl.remove();\n    });\n  }\n\n  function attachEvents() {\n    const passiveListener = app.touchEvents.start === 'touchstart' && support.passiveListener ? {\n      passive: true,\n      capture: false\n    } : false;\n    $el.on(app.touchEvents.start, handleTouchStart, passiveListener);\n    app.on('touchmove:active', handleTouchMove);\n    app.on('touchend:passive', handleTouchEnd);\n  }\n\n  function detachEvents() {\n    const passiveListener = app.touchEvents.start === 'touchstart' && support.passiveListener ? {\n      passive: true,\n      capture: false\n    } : false;\n    $el.off(app.touchEvents.start, handleTouchStart, passiveListener);\n    app.off('touchmove:active', handleTouchMove);\n    app.off('touchend:passive', handleTouchEnd);\n  }\n\n  attachEvents();\n  router.on('routerDestroy', detachEvents);\n}\n\nexport default SwipeBack;"],"mappings":"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"},"metadata":{},"sourceType":"module"}