{"ast":null,"code":"import $ from '../../shared/dom7.js';\nimport { extend, now, nextFrame } from '../../shared/utils.js';\n\nfunction swipePanel(panel) {\n  const app = panel.app;\n\n  if (panel.swipeInitialized) {\n    return;\n  }\n\n  extend(panel, {\n    swipeable: true,\n    swipeInitialized: true\n  });\n  const params = panel.params;\n  const {\n    $el,\n    $backdropEl,\n    side,\n    effect\n  } = panel;\n  let otherPanel;\n  let isTouched;\n  let isGestureStarted;\n  let isMoved;\n  let isScrolling;\n  let isInterrupted;\n  const touchesStart = {};\n  let touchStartTime;\n  let touchesDiff;\n  let translate;\n  let backdropOpacity;\n  let panelWidth;\n  let direction;\n  let $viewEl;\n  let touchMoves = 0;\n\n  function handleTouchStart(e) {\n    if (!panel.swipeable || isGestureStarted) return;\n    if (!app.panel.allowOpen || !params.swipe && !params.swipeOnlyClose || isTouched) return;\n    if ($('.modal-in:not(.toast):not(.notification), .photo-browser-in').length > 0) return;\n    otherPanel = app.panel.get(side === 'left' ? 'right' : 'left') || {};\n    const otherPanelOpened = otherPanel.opened && otherPanel.$el && !otherPanel.$el.hasClass('panel-in-breakpoint');\n\n    if (!panel.opened && otherPanelOpened) {\n      return;\n    }\n\n    if (!params.swipeOnlyClose) {\n      if (otherPanelOpened) return;\n    }\n\n    if (e.target && e.target.nodeName.toLowerCase() === 'input' && e.target.type === 'range') return;\n    if ($(e.target).closest('.range-slider, .tabs-swipeable-wrap, .calendar-months, .no-swipe-panel, .card-opened').length > 0) return;\n    touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n\n    if (params.swipeOnlyClose && !panel.opened) {\n      return;\n    }\n\n    if (params.swipeActiveArea && !panel.opened) {\n      if (side === 'left') {\n        if (touchesStart.x > params.swipeActiveArea) return;\n      }\n\n      if (side === 'right') {\n        if (touchesStart.x < app.width - params.swipeActiveArea) return;\n      }\n    }\n\n    touchMoves = 0;\n    $viewEl = $(panel.getViewEl());\n    isMoved = false;\n    isTouched = true;\n    isScrolling = undefined;\n    isInterrupted = false;\n    touchStartTime = now();\n    direction = undefined;\n  }\n\n  function handleTouchMove(e) {\n    if (!isTouched || isGestureStarted || isInterrupted) return;\n    touchMoves += 1;\n    if (touchMoves < 2) return;\n\n    if (e.f7PreventSwipePanel || app.preventSwipePanelBySwipeBack || app.preventSwipePanel) {\n      isTouched = false;\n      return;\n    }\n\n    const pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    const pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n    if (typeof isScrolling === 'undefined') {\n      isScrolling = !!(isScrolling || Math.abs(pageY - touchesStart.y) > Math.abs(pageX - touchesStart.x));\n    }\n\n    if (isScrolling) {\n      isTouched = false;\n      return;\n    }\n\n    if (!direction) {\n      if (pageX > touchesStart.x) {\n        direction = 'to-right';\n      } else {\n        direction = 'to-left';\n      }\n\n      if (params.swipeActiveArea > 0 && !panel.opened) {\n        if (side === 'left' && touchesStart.x > params.swipeActiveArea) {\n          isTouched = false;\n          return;\n        }\n\n        if (side === 'right' && touchesStart.x < app.width - params.swipeActiveArea) {\n          isTouched = false;\n          return;\n        }\n      }\n\n      if ($el.hasClass('panel-in-breakpoint')) {\n        isTouched = false;\n        return;\n      }\n\n      if (side === 'left' && direction === 'to-left' && !$el.hasClass('panel-in') || side === 'right' && direction === 'to-right' && !$el.hasClass('panel-in')) {\n        isTouched = false;\n        return;\n      }\n    }\n\n    let threshold = panel.opened ? 0 : -params.swipeThreshold;\n    if (side === 'right') threshold = -threshold;\n\n    if (!isMoved) {\n      if (!panel.opened) {\n        panel.insertToRoot();\n        $el.addClass('panel-in-swipe');\n        if ($backdropEl) $backdropEl.css('visibility', 'visible');\n        $el.trigger('panel:swipeopen');\n        panel.emit('local::swipeOpen panelSwipeOpen', panel);\n      }\n\n      panelWidth = $el[0].offsetWidth;\n\n      if (effect === 'reveal' && $el.hasClass('panel-in-collapsed')) {\n        panelWidth -= parseFloat($viewEl.css(`margin-${side}`));\n      }\n\n      $el.transition(0);\n    }\n\n    isMoved = true;\n\n    if (e.cancelable) {\n      e.preventDefault();\n    }\n\n    touchesDiff = pageX - touchesStart.x + threshold;\n\n    if (side === 'right') {\n      if (effect === 'cover' || effect === 'push') {\n        translate = touchesDiff + (panel.opened ? 0 : panelWidth);\n        if (translate < 0) translate = 0;\n\n        if (translate > panelWidth) {\n          translate = panelWidth;\n        }\n      } else {\n        translate = touchesDiff - (panel.opened ? panelWidth : 0);\n        if (translate > 0) translate = 0;\n\n        if (translate < -panelWidth) {\n          translate = -panelWidth;\n        }\n      }\n    } else {\n      translate = touchesDiff + (panel.opened ? panelWidth : 0);\n      if (translate < 0) translate = 0;\n\n      if (translate > panelWidth) {\n        translate = panelWidth;\n      }\n    }\n\n    const noFollowProgress = Math.abs(translate / panelWidth);\n\n    if (effect === 'reveal') {\n      if (!params.swipeNoFollow) {\n        $viewEl.transform(`translate3d(${translate}px,0,0)`).transition(0);\n        if ($backdropEl) $backdropEl.transform(`translate3d(${translate}px,0,0)`).transition(0);\n      }\n\n      $el.trigger('panel:swipe', Math.abs(translate / panelWidth));\n      panel.emit('local::swipe panelSwipe', panel, Math.abs(translate / panelWidth));\n    } else {\n      if (side === 'left') translate -= panelWidth;\n\n      if (!params.swipeNoFollow) {\n        backdropOpacity = 1 - Math.abs(translate / panelWidth);\n\n        if ($backdropEl) {\n          $backdropEl.transition(0);\n          $backdropEl.css({\n            opacity: backdropOpacity\n          });\n        }\n\n        $el.transform(`translate3d(${translate}px,0,0)`).transition(0);\n\n        if (effect === 'push') {\n          const viewTranslate = side === 'left' ? translate + panelWidth : translate - panelWidth;\n          $viewEl.transform(`translate3d(${viewTranslate}px,0,0)`).transition(0);\n\n          if ($backdropEl) {\n            $backdropEl.transform(`translate3d(${viewTranslate}px,0,0)`).transition(0);\n          }\n        }\n      }\n\n      $el.trigger('panel:swipe', Math.abs(translate / panelWidth));\n      panel.emit('local::swipe panelSwipe', panel, Math.abs(translate / panelWidth));\n    }\n\n    if (params.swipeNoFollow) {\n      const stateChanged = panel.opened && noFollowProgress === 0 || !panel.opened && noFollowProgress === 1;\n\n      if (stateChanged) {\n        isInterrupted = true; // eslint-disable-next-line\n\n        handleTouchEnd(e);\n      }\n    }\n  }\n\n  function handleTouchEnd(e) {\n    if (!isTouched || !isMoved) {\n      isTouched = false;\n      isMoved = false;\n      return;\n    }\n\n    const isGesture = e.type === 'gesturestart' || isGestureStarted;\n    isTouched = false;\n    isMoved = false;\n    const timeDiff = new Date().getTime() - touchStartTime;\n    let action;\n    const edge = (translate === 0 || Math.abs(translate) === panelWidth) && !params.swipeNoFollow;\n    const threshold = params.swipeThreshold || 0;\n\n    if (isGesture) {\n      action = 'reset';\n    } else if (!panel.opened) {\n      if (Math.abs(touchesDiff) < threshold) {\n        action = 'reset';\n      } else if (effect === 'cover' || effect === 'push') {\n        if (translate === 0) {\n          action = 'swap'; // open\n        } else if (timeDiff < 300 && Math.abs(translate) > 0) {\n          action = 'swap'; // open\n        } else if (timeDiff >= 300 && Math.abs(translate) < panelWidth / 2) {\n          action = 'swap'; // open\n        } else {\n          action = 'reset'; // close\n        }\n      } else if (translate === 0) {\n        action = 'reset';\n      } else if (timeDiff < 300 && Math.abs(translate) > 0 || timeDiff >= 300 && Math.abs(translate) >= panelWidth / 2) {\n        action = 'swap';\n      } else {\n        action = 'reset';\n      }\n    } else if (effect === 'cover' || effect === 'push') {\n      if (translate === 0) {\n        action = 'reset'; // open\n      } else if (timeDiff < 300 && Math.abs(translate) > 0) {\n        action = 'swap'; // open\n      } else if (timeDiff >= 300 && Math.abs(translate) < panelWidth / 2) {\n        action = 'reset'; // open\n      } else {\n        action = 'swap'; // close\n      }\n    } else if (translate === -panelWidth) {\n      action = 'reset';\n    } else if (timeDiff < 300 && Math.abs(translate) >= 0 || timeDiff >= 300 && Math.abs(translate) <= panelWidth / 2) {\n      if (side === 'left' && translate === panelWidth) action = 'reset';else action = 'swap';\n    } else {\n      action = 'reset';\n    }\n\n    if (action === 'swap') {\n      if (panel.opened) {\n        panel.close(!edge);\n      } else {\n        panel.open(!edge);\n      }\n    }\n\n    let removePanelInClass = true;\n\n    if (action === 'reset') {\n      if (!panel.opened) {\n        if (edge) {\n          // edge position\n          $el.removeClass('panel-in-swipe');\n        } else {\n          removePanelInClass = false;\n          const target = effect === 'reveal' ? $viewEl : $el;\n          panel.setStateClasses('before-closing');\n          target.transitionEnd(() => {\n            if ($el.hasClass('panel-in')) return;\n            $el.removeClass('panel-in-swipe');\n            panel.setStateClasses('after-closing');\n          });\n        }\n      }\n    }\n\n    if (effect === 'reveal' || effect === 'push') {\n      nextFrame(() => {\n        $viewEl.transition('');\n        $viewEl.transform('');\n      });\n    }\n\n    if (removePanelInClass) {\n      $el.removeClass('panel-in-swipe');\n    }\n\n    $el.transition('').transform('');\n\n    if ($backdropEl) {\n      $backdropEl.transform('').transition('').css({\n        opacity: '',\n        visibility: ''\n      });\n    }\n  }\n\n  function handleGestureStart(e) {\n    isGestureStarted = true;\n    handleTouchEnd(e);\n  }\n\n  function handleGestureEnd() {\n    isGestureStarted = false;\n  } // Add Events\n\n\n  app.on('touchstart:passive', handleTouchStart);\n  app.on('touchmove:active', handleTouchMove);\n  app.on('touchend:passive', handleTouchEnd);\n  app.on('gesturestart', handleGestureStart);\n  app.on('gestureend', handleGestureEnd);\n  panel.on('panelDestroy', () => {\n    app.off('touchstart:passive', handleTouchStart);\n    app.off('touchmove:active', handleTouchMove);\n    app.off('touchend:passive', handleTouchEnd);\n    app.off('gesturestart', handleGestureStart);\n    app.off('gestureend', handleGestureEnd);\n  });\n}\n\nexport default swipePanel;","map":{"version":3,"names":["$","extend","now","nextFrame","swipePanel","panel","app","swipeInitialized","swipeable","params","$el","$backdropEl","side","effect","otherPanel","isTouched","isGestureStarted","isMoved","isScrolling","isInterrupted","touchesStart","touchStartTime","touchesDiff","translate","backdropOpacity","panelWidth","direction","$viewEl","touchMoves","handleTouchStart","e","allowOpen","swipe","swipeOnlyClose","length","get","otherPanelOpened","opened","hasClass","target","nodeName","toLowerCase","type","closest","x","targetTouches","pageX","y","pageY","swipeActiveArea","width","getViewEl","undefined","handleTouchMove","f7PreventSwipePanel","preventSwipePanelBySwipeBack","preventSwipePanel","Math","abs","threshold","swipeThreshold","insertToRoot","addClass","css","trigger","emit","offsetWidth","parseFloat","transition","cancelable","preventDefault","noFollowProgress","swipeNoFollow","transform","opacity","viewTranslate","stateChanged","handleTouchEnd","isGesture","timeDiff","Date","getTime","action","edge","close","open","removePanelInClass","removeClass","setStateClasses","transitionEnd","visibility","handleGestureStart","handleGestureEnd","on","off"],"sources":["C:/Users/Babak/userlogin/node_modules/framework7/components/panel/swipe-panel.js"],"sourcesContent":["import $ from '../../shared/dom7.js';\nimport { extend, now, nextFrame } from '../../shared/utils.js';\n\nfunction swipePanel(panel) {\n  const app = panel.app;\n\n  if (panel.swipeInitialized) {\n    return;\n  }\n\n  extend(panel, {\n    swipeable: true,\n    swipeInitialized: true\n  });\n  const params = panel.params;\n  const {\n    $el,\n    $backdropEl,\n    side,\n    effect\n  } = panel;\n  let otherPanel;\n  let isTouched;\n  let isGestureStarted;\n  let isMoved;\n  let isScrolling;\n  let isInterrupted;\n  const touchesStart = {};\n  let touchStartTime;\n  let touchesDiff;\n  let translate;\n  let backdropOpacity;\n  let panelWidth;\n  let direction;\n  let $viewEl;\n  let touchMoves = 0;\n\n  function handleTouchStart(e) {\n    if (!panel.swipeable || isGestureStarted) return;\n    if (!app.panel.allowOpen || !params.swipe && !params.swipeOnlyClose || isTouched) return;\n    if ($('.modal-in:not(.toast):not(.notification), .photo-browser-in').length > 0) return;\n    otherPanel = app.panel.get(side === 'left' ? 'right' : 'left') || {};\n    const otherPanelOpened = otherPanel.opened && otherPanel.$el && !otherPanel.$el.hasClass('panel-in-breakpoint');\n\n    if (!panel.opened && otherPanelOpened) {\n      return;\n    }\n\n    if (!params.swipeOnlyClose) {\n      if (otherPanelOpened) return;\n    }\n\n    if (e.target && e.target.nodeName.toLowerCase() === 'input' && e.target.type === 'range') return;\n    if ($(e.target).closest('.range-slider, .tabs-swipeable-wrap, .calendar-months, .no-swipe-panel, .card-opened').length > 0) return;\n    touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n\n    if (params.swipeOnlyClose && !panel.opened) {\n      return;\n    }\n\n    if (params.swipeActiveArea && !panel.opened) {\n      if (side === 'left') {\n        if (touchesStart.x > params.swipeActiveArea) return;\n      }\n\n      if (side === 'right') {\n        if (touchesStart.x < app.width - params.swipeActiveArea) return;\n      }\n    }\n\n    touchMoves = 0;\n    $viewEl = $(panel.getViewEl());\n    isMoved = false;\n    isTouched = true;\n    isScrolling = undefined;\n    isInterrupted = false;\n    touchStartTime = now();\n    direction = undefined;\n  }\n\n  function handleTouchMove(e) {\n    if (!isTouched || isGestureStarted || isInterrupted) return;\n    touchMoves += 1;\n    if (touchMoves < 2) return;\n\n    if (e.f7PreventSwipePanel || app.preventSwipePanelBySwipeBack || app.preventSwipePanel) {\n      isTouched = false;\n      return;\n    }\n\n    const pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    const pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n    if (typeof isScrolling === 'undefined') {\n      isScrolling = !!(isScrolling || Math.abs(pageY - touchesStart.y) > Math.abs(pageX - touchesStart.x));\n    }\n\n    if (isScrolling) {\n      isTouched = false;\n      return;\n    }\n\n    if (!direction) {\n      if (pageX > touchesStart.x) {\n        direction = 'to-right';\n      } else {\n        direction = 'to-left';\n      }\n\n      if (params.swipeActiveArea > 0 && !panel.opened) {\n        if (side === 'left' && touchesStart.x > params.swipeActiveArea) {\n          isTouched = false;\n          return;\n        }\n\n        if (side === 'right' && touchesStart.x < app.width - params.swipeActiveArea) {\n          isTouched = false;\n          return;\n        }\n      }\n\n      if ($el.hasClass('panel-in-breakpoint')) {\n        isTouched = false;\n        return;\n      }\n\n      if (side === 'left' && direction === 'to-left' && !$el.hasClass('panel-in') || side === 'right' && direction === 'to-right' && !$el.hasClass('panel-in')) {\n        isTouched = false;\n        return;\n      }\n    }\n\n    let threshold = panel.opened ? 0 : -params.swipeThreshold;\n    if (side === 'right') threshold = -threshold;\n\n    if (!isMoved) {\n      if (!panel.opened) {\n        panel.insertToRoot();\n        $el.addClass('panel-in-swipe');\n        if ($backdropEl) $backdropEl.css('visibility', 'visible');\n        $el.trigger('panel:swipeopen');\n        panel.emit('local::swipeOpen panelSwipeOpen', panel);\n      }\n\n      panelWidth = $el[0].offsetWidth;\n\n      if (effect === 'reveal' && $el.hasClass('panel-in-collapsed')) {\n        panelWidth -= parseFloat($viewEl.css(`margin-${side}`));\n      }\n\n      $el.transition(0);\n    }\n\n    isMoved = true;\n\n    if (e.cancelable) {\n      e.preventDefault();\n    }\n\n    touchesDiff = pageX - touchesStart.x + threshold;\n\n    if (side === 'right') {\n      if (effect === 'cover' || effect === 'push') {\n        translate = touchesDiff + (panel.opened ? 0 : panelWidth);\n        if (translate < 0) translate = 0;\n\n        if (translate > panelWidth) {\n          translate = panelWidth;\n        }\n      } else {\n        translate = touchesDiff - (panel.opened ? panelWidth : 0);\n        if (translate > 0) translate = 0;\n\n        if (translate < -panelWidth) {\n          translate = -panelWidth;\n        }\n      }\n    } else {\n      translate = touchesDiff + (panel.opened ? panelWidth : 0);\n      if (translate < 0) translate = 0;\n\n      if (translate > panelWidth) {\n        translate = panelWidth;\n      }\n    }\n\n    const noFollowProgress = Math.abs(translate / panelWidth);\n\n    if (effect === 'reveal') {\n      if (!params.swipeNoFollow) {\n        $viewEl.transform(`translate3d(${translate}px,0,0)`).transition(0);\n        if ($backdropEl) $backdropEl.transform(`translate3d(${translate}px,0,0)`).transition(0);\n      }\n\n      $el.trigger('panel:swipe', Math.abs(translate / panelWidth));\n      panel.emit('local::swipe panelSwipe', panel, Math.abs(translate / panelWidth));\n    } else {\n      if (side === 'left') translate -= panelWidth;\n\n      if (!params.swipeNoFollow) {\n        backdropOpacity = 1 - Math.abs(translate / panelWidth);\n\n        if ($backdropEl) {\n          $backdropEl.transition(0);\n          $backdropEl.css({\n            opacity: backdropOpacity\n          });\n        }\n\n        $el.transform(`translate3d(${translate}px,0,0)`).transition(0);\n\n        if (effect === 'push') {\n          const viewTranslate = side === 'left' ? translate + panelWidth : translate - panelWidth;\n          $viewEl.transform(`translate3d(${viewTranslate}px,0,0)`).transition(0);\n\n          if ($backdropEl) {\n            $backdropEl.transform(`translate3d(${viewTranslate}px,0,0)`).transition(0);\n          }\n        }\n      }\n\n      $el.trigger('panel:swipe', Math.abs(translate / panelWidth));\n      panel.emit('local::swipe panelSwipe', panel, Math.abs(translate / panelWidth));\n    }\n\n    if (params.swipeNoFollow) {\n      const stateChanged = panel.opened && noFollowProgress === 0 || !panel.opened && noFollowProgress === 1;\n\n      if (stateChanged) {\n        isInterrupted = true; // eslint-disable-next-line\n\n        handleTouchEnd(e);\n      }\n    }\n  }\n\n  function handleTouchEnd(e) {\n    if (!isTouched || !isMoved) {\n      isTouched = false;\n      isMoved = false;\n      return;\n    }\n\n    const isGesture = e.type === 'gesturestart' || isGestureStarted;\n    isTouched = false;\n    isMoved = false;\n    const timeDiff = new Date().getTime() - touchStartTime;\n    let action;\n    const edge = (translate === 0 || Math.abs(translate) === panelWidth) && !params.swipeNoFollow;\n    const threshold = params.swipeThreshold || 0;\n\n    if (isGesture) {\n      action = 'reset';\n    } else if (!panel.opened) {\n      if (Math.abs(touchesDiff) < threshold) {\n        action = 'reset';\n      } else if (effect === 'cover' || effect === 'push') {\n        if (translate === 0) {\n          action = 'swap'; // open\n        } else if (timeDiff < 300 && Math.abs(translate) > 0) {\n          action = 'swap'; // open\n        } else if (timeDiff >= 300 && Math.abs(translate) < panelWidth / 2) {\n          action = 'swap'; // open\n        } else {\n          action = 'reset'; // close\n        }\n      } else if (translate === 0) {\n        action = 'reset';\n      } else if (timeDiff < 300 && Math.abs(translate) > 0 || timeDiff >= 300 && Math.abs(translate) >= panelWidth / 2) {\n        action = 'swap';\n      } else {\n        action = 'reset';\n      }\n    } else if (effect === 'cover' || effect === 'push') {\n      if (translate === 0) {\n        action = 'reset'; // open\n      } else if (timeDiff < 300 && Math.abs(translate) > 0) {\n        action = 'swap'; // open\n      } else if (timeDiff >= 300 && Math.abs(translate) < panelWidth / 2) {\n        action = 'reset'; // open\n      } else {\n        action = 'swap'; // close\n      }\n    } else if (translate === -panelWidth) {\n      action = 'reset';\n    } else if (timeDiff < 300 && Math.abs(translate) >= 0 || timeDiff >= 300 && Math.abs(translate) <= panelWidth / 2) {\n      if (side === 'left' && translate === panelWidth) action = 'reset';else action = 'swap';\n    } else {\n      action = 'reset';\n    }\n\n    if (action === 'swap') {\n      if (panel.opened) {\n        panel.close(!edge);\n      } else {\n        panel.open(!edge);\n      }\n    }\n\n    let removePanelInClass = true;\n\n    if (action === 'reset') {\n      if (!panel.opened) {\n        if (edge) {\n          // edge position\n          $el.removeClass('panel-in-swipe');\n        } else {\n          removePanelInClass = false;\n          const target = effect === 'reveal' ? $viewEl : $el;\n          panel.setStateClasses('before-closing');\n          target.transitionEnd(() => {\n            if ($el.hasClass('panel-in')) return;\n            $el.removeClass('panel-in-swipe');\n            panel.setStateClasses('after-closing');\n          });\n        }\n      }\n    }\n\n    if (effect === 'reveal' || effect === 'push') {\n      nextFrame(() => {\n        $viewEl.transition('');\n        $viewEl.transform('');\n      });\n    }\n\n    if (removePanelInClass) {\n      $el.removeClass('panel-in-swipe');\n    }\n\n    $el.transition('').transform('');\n\n    if ($backdropEl) {\n      $backdropEl.transform('').transition('').css({\n        opacity: '',\n        visibility: ''\n      });\n    }\n  }\n\n  function handleGestureStart(e) {\n    isGestureStarted = true;\n    handleTouchEnd(e);\n  }\n\n  function handleGestureEnd() {\n    isGestureStarted = false;\n  } // Add Events\n\n\n  app.on('touchstart:passive', handleTouchStart);\n  app.on('touchmove:active', handleTouchMove);\n  app.on('touchend:passive', handleTouchEnd);\n  app.on('gesturestart', handleGestureStart);\n  app.on('gestureend', handleGestureEnd);\n  panel.on('panelDestroy', () => {\n    app.off('touchstart:passive', handleTouchStart);\n    app.off('touchmove:active', handleTouchMove);\n    app.off('touchend:passive', handleTouchEnd);\n    app.off('gesturestart', handleGestureStart);\n    app.off('gestureend', handleGestureEnd);\n  });\n}\n\nexport default swipePanel;"],"mappings":"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"},"metadata":{},"sourceType":"module"}