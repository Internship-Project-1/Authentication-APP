{"ast":null,"code":"import { getDocument } from 'ssr-window';\nimport $ from '../../shared/dom7.js';\nimport { extend, deleteProps } from '../../shared/utils.js';\nimport Framework7Class from '../../shared/class.js';\nimport swipePanel from './swipe-panel.js';\nimport resizablePanel from './resizable-panel.js';\n\nclass Panel extends Framework7Class {\n  constructor(app, params) {\n    if (params === void 0) {\n      params = {};\n    }\n\n    const extendedParams = extend({\n      on: {}\n    }, app.params.panel, params);\n    super(extendedParams, [app]);\n    const panel = this;\n    panel.params = extendedParams;\n    panel.$containerEl = panel.params.containerEl ? $(panel.params.containerEl).eq(0) : app.$el;\n    panel.containerEl = panel.$containerEl[0];\n\n    if (!panel.containerEl) {\n      panel.$containerEl = app.$el;\n      panel.containerEl = app.$el[0];\n    }\n\n    let $el;\n\n    if (panel.params.el) {\n      $el = $(panel.params.el).eq(0);\n    } else if (panel.params.content) {\n      $el = $(panel.params.content).filter(node => node.nodeType === 1).eq(0);\n    }\n\n    if ($el.length === 0) return panel;\n    if ($el[0].f7Panel) return $el[0].f7Panel;\n    $el[0].f7Panel = panel;\n    let {\n      side,\n      effect,\n      resizable\n    } = panel.params;\n    if (typeof side === 'undefined') side = $el.hasClass('panel-left') ? 'left' : 'right';\n    if (typeof effect === 'undefined') // eslint-disable-next-line\n      effect = $el.hasClass('panel-cover') ? 'cover' : $el.hasClass('panel-push') ? 'push' : 'reveal';\n    if (typeof resizable === 'undefined') resizable = $el.hasClass('panel-resizable');\n    let $backdropEl;\n\n    if (panel.params.backdrop && panel.params.backdropEl) {\n      $backdropEl = $(panel.params.backdropEl);\n    } else if (panel.params.backdrop) {\n      $backdropEl = panel.$containerEl.children('.panel-backdrop');\n\n      if ($backdropEl.length === 0) {\n        $backdropEl = $('<div class=\"panel-backdrop\"></div>');\n        panel.$containerEl.prepend($backdropEl);\n      }\n    }\n\n    extend(panel, {\n      app,\n      side,\n      effect,\n      resizable,\n      $el,\n      el: $el[0],\n      opened: false,\n      $backdropEl,\n      backdropEl: $backdropEl && $backdropEl[0]\n    }); // Install Modules\n\n    panel.useModules(); // Init\n\n    panel.init();\n    return panel;\n  }\n\n  getViewEl() {\n    const panel = this;\n    let viewEl;\n\n    if (panel.$containerEl.children('.views').length > 0) {\n      viewEl = panel.$containerEl.children('.views')[0];\n    } else {\n      viewEl = panel.$containerEl.children('.view')[0];\n    }\n\n    return viewEl;\n  }\n\n  setStateClasses(state) {\n    const panel = this;\n    const {\n      side,\n      el\n    } = panel;\n    const viewEl = panel.getViewEl();\n    const panelInView = viewEl && viewEl.contains(el);\n    const $targetEl = !viewEl || panelInView ? panel.$containerEl : $('html');\n\n    if (state === 'open') {\n      $targetEl.addClass(`with-panel with-panel-${panel.side}-${panel.effect}`);\n    }\n\n    if (state === 'before-closing') {\n      $targetEl.addClass('with-panel-closing');\n    }\n\n    if (state === 'closing') {\n      $targetEl.addClass('with-panel-closing');\n      $targetEl.removeClass(`with-panel with-panel-${panel.side}-${panel.effect}`);\n    }\n\n    if (state === 'after-closing') {\n      $targetEl.removeClass('with-panel-closing');\n    }\n\n    if (state === 'closed') {\n      $targetEl.removeClass(`with-panel-${side}-reveal with-panel-${side}-cover with-panel-${side}-push with-panel`);\n    }\n  }\n\n  enableVisibleBreakpoint() {\n    const panel = this;\n    panel.visibleBreakpointDisabled = false;\n    panel.setVisibleBreakpoint();\n    return panel;\n  }\n\n  disableVisibleBreakpoint() {\n    const panel = this;\n    panel.visibleBreakpointDisabled = true;\n    panel.setVisibleBreakpoint();\n    return panel;\n  }\n\n  toggleVisibleBreakpoint() {\n    const panel = this;\n    panel.visibleBreakpointDisabled = !panel.visibleBreakpointDisabled;\n    panel.setVisibleBreakpoint();\n    return panel;\n  }\n\n  setVisibleBreakpoint(emitEvents) {\n    if (emitEvents === void 0) {\n      emitEvents = true;\n    }\n\n    const panel = this;\n    const app = panel.app;\n\n    if (!panel.visibleBreakpointResizeHandler) {\n      panel.visibleBreakpointResizeHandler = function visibleBreakpointResizeHandler() {\n        panel.setVisibleBreakpoint();\n      };\n\n      app.on('resize', panel.visibleBreakpointResizeHandler);\n    }\n\n    const {\n      side,\n      $el,\n      $containerEl,\n      params,\n      visibleBreakpointDisabled\n    } = panel;\n    const breakpoint = params.visibleBreakpoint;\n    const $viewEl = $(panel.getViewEl());\n    const wasVisible = $el.hasClass('panel-in-breakpoint');\n\n    if ($containerEl && $containerEl.hasClass('page')) {\n      $viewEl.add($containerEl.children('.page-content, .tabs, .fab'));\n    }\n\n    if (app.width >= breakpoint && typeof breakpoint !== 'undefined' && breakpoint !== null && !visibleBreakpointDisabled) {\n      if (!wasVisible) {\n        panel.setStateClasses('closed');\n        $el.addClass('panel-in-breakpoint').removeClass('panel-in panel-in-collapsed');\n        panel.onOpen(false);\n        panel.onOpened();\n        $viewEl.css({\n          [`margin-${side}`]: `${$el.width()}px`\n        });\n        app.allowPanelOpen = true;\n\n        if (emitEvents) {\n          panel.emit('local::breakpoint panelBreakpoint', panel);\n          panel.$el.trigger('panel:breakpoint');\n        }\n      } else {\n        $viewEl.css({\n          [`margin-${side}`]: `${$el.width()}px`\n        });\n      }\n    } else if (wasVisible) {\n      $el.removeClass('panel-in-breakpoint panel-in');\n      panel.onClose();\n      panel.onClosed();\n      $viewEl.css({\n        [`margin-${side}`]: ''\n      });\n\n      if (emitEvents) {\n        panel.emit('local::breakpoint panelBreakpoint', panel);\n        panel.$el.trigger('panel:breakpoint');\n      }\n    }\n  }\n\n  enableCollapsedBreakpoint() {\n    const panel = this;\n    panel.collapsedBreakpointDisabled = false;\n    panel.setCollapsedBreakpoint();\n    return panel;\n  }\n\n  disableCollapsedBreakpoint() {\n    const panel = this;\n    panel.collapsedBreakpointDisabled = true;\n    panel.setCollapsedBreakpoint();\n    return panel;\n  }\n\n  toggleCollapsedBreakpoint() {\n    const panel = this;\n    panel.collapsedBreakpointDisabled = !panel.collapsedBreakpointDisabled;\n    panel.setCollapsedBreakpoint();\n    return panel;\n  }\n\n  setCollapsedBreakpoint(emitEvents) {\n    if (emitEvents === void 0) {\n      emitEvents = true;\n    }\n\n    const panel = this;\n    const app = panel.app;\n\n    if (!panel.collapsedBreakpointResizeHandler) {\n      panel.collapsedBreakpointResizeHandler = function collapsedBreakpointResizeHandler() {\n        panel.setCollapsedBreakpoint();\n      };\n\n      app.on('resize', panel.collapsedBreakpointResizeHandler);\n    }\n\n    const {\n      $el,\n      params,\n      collapsedBreakpointDisabled\n    } = panel;\n    if ($el.hasClass('panel-in-breakpoint')) return;\n    const breakpoint = params.collapsedBreakpoint;\n    const wasVisible = $el.hasClass('panel-in-collapsed');\n\n    if (app.width >= breakpoint && typeof breakpoint !== 'undefined' && breakpoint !== null && !collapsedBreakpointDisabled) {\n      if (!wasVisible) {\n        panel.setStateClasses('closed');\n        $el.addClass('panel-in-collapsed').removeClass('panel-in');\n        panel.collapsed = true;\n        app.allowPanelOpen = true;\n\n        if (emitEvents) {\n          panel.emit('local::collapsedBreakpoint panelCollapsedBreakpoint', panel);\n          panel.$el.trigger('panel:collapsedbreakpoint');\n        }\n      }\n    } else if (wasVisible) {\n      $el.removeClass('panel-in-collapsed panel-in');\n      panel.collapsed = false;\n\n      if (emitEvents) {\n        panel.emit('local::collapsedBreakpoint panelCollapsedBreakpoint', panel);\n        panel.$el.trigger('panel:collapsedbreakpoint');\n      }\n    }\n  }\n\n  enableResizable() {\n    const panel = this;\n\n    if (panel.resizableInitialized) {\n      panel.resizable = true;\n      panel.$el.addClass('panel-resizable');\n    } else {\n      resizablePanel(panel);\n    }\n\n    return panel;\n  }\n\n  disableResizable() {\n    const panel = this;\n    panel.resizable = false;\n    panel.$el.removeClass('panel-resizable');\n    return panel;\n  }\n\n  enableSwipe() {\n    const panel = this;\n\n    if (panel.swipeInitialized) {\n      panel.swipeable = true;\n    } else {\n      swipePanel(panel);\n    }\n\n    return panel;\n  }\n\n  disableSwipe() {\n    const panel = this;\n    panel.swipeable = false;\n    return panel;\n  }\n\n  onOpen(modifyHtmlClasses) {\n    if (modifyHtmlClasses === void 0) {\n      modifyHtmlClasses = true;\n    }\n\n    const panel = this;\n    const app = panel.app;\n    panel.opened = true;\n    app.panel.allowOpen = false;\n    panel.$el.trigger('panel:beforeopen');\n    panel.emit('local::beforeOpen panelBeforeOpen', panel);\n\n    if (modifyHtmlClasses) {\n      panel.setStateClasses('open');\n    }\n\n    panel.$el.trigger('panel:open');\n    panel.emit('local::open panelOpen', panel);\n  }\n\n  onOpened() {\n    const panel = this;\n    const app = panel.app;\n    app.panel.allowOpen = true;\n    panel.$el.trigger('panel:opened');\n    panel.emit('local::opened panelOpened', panel);\n  }\n\n  onClose() {\n    const panel = this;\n    const app = panel.app;\n    panel.opened = false;\n    app.panel.allowOpen = false;\n    panel.$el.trigger('panel:beforeclose');\n    panel.emit('local::beforeClose panelBeforeClose', panel);\n    panel.setStateClasses('closing');\n    panel.$el.trigger('panel:close');\n    panel.emit('local::close panelClose', panel);\n  }\n\n  onClosed() {\n    const panel = this;\n    const app = panel.app;\n    app.panel.allowOpen = true;\n    panel.setStateClasses('after-closing');\n    panel.$el.removeClass('panel-out');\n\n    if (panel.$backdropEl) {\n      const otherPanel = app.panel.get('.panel-in');\n      const shouldHideBackdrop = !otherPanel || otherPanel && !otherPanel.$backdropEl;\n\n      if (shouldHideBackdrop) {\n        panel.$backdropEl.removeClass('panel-backdrop-in');\n      }\n    }\n\n    panel.$el.trigger('panel:closed');\n    panel.emit('local::closed panelClosed', panel);\n  }\n\n  toggle(animate) {\n    if (animate === void 0) {\n      animate = true;\n    }\n\n    const panel = this;\n    const breakpoint = panel.params.visibleBreakpoint;\n    const app = panel.app;\n\n    if (app.width >= breakpoint && typeof breakpoint !== 'undefined' && breakpoint !== null) {\n      return panel.toggleVisibleBreakpoint();\n    }\n\n    if (panel.opened) panel.close(animate);else panel.open(animate);\n    return panel;\n  }\n\n  insertToRoot() {\n    const panel = this;\n    const document = getDocument();\n    const {\n      $el,\n      $backdropEl,\n      $containerEl\n    } = panel;\n    const $panelParentEl = $el.parent();\n    const wasInDom = $el.parents(document).length > 0;\n\n    if (!$panelParentEl.is($containerEl) || $el.prevAll('.views, .view').length) {\n      const $insertBeforeEl = $containerEl.children('.panel, .views, .view').eq(0);\n      const $insertAfterEl = $containerEl.children('.panel-backdrop').eq(0);\n\n      if ($insertBeforeEl.length) {\n        $el.insertBefore($insertBeforeEl);\n      } else if ($insertAfterEl) {\n        $el.insertBefore($insertAfterEl);\n      } else {\n        $containerEl.prepend($el);\n      }\n\n      if ($backdropEl && $backdropEl.length && (!$backdropEl.parent().is($containerEl) && $backdropEl.nextAll('.panel').length === 0 || $backdropEl.parent().is($containerEl) && $backdropEl.nextAll('.panel').length === 0)) {\n        $backdropEl.insertBefore($el);\n      }\n\n      panel.once('panelClosed', () => {\n        if (wasInDom) {\n          $panelParentEl.append($el);\n        } else {\n          $el.remove();\n        }\n      });\n    }\n  }\n\n  open(animate) {\n    if (animate === void 0) {\n      animate = true;\n    }\n\n    const panel = this;\n    const app = panel.app;\n    if (!app.panel.allowOpen) return false;\n    const {\n      effect,\n      $el,\n      $backdropEl,\n      opened,\n      $containerEl\n    } = panel;\n\n    if (!$el || $el.hasClass('panel-in')) {\n      return panel;\n    }\n\n    panel.insertToRoot(); // Ignore if opened\n\n    if (opened || $el.hasClass('panel-in-breakpoint') || $el.hasClass('panel-in')) return false; // Close if some panel is opened\n\n    const otherOpenedPanel = app.panel.get('.panel-in');\n\n    if (otherOpenedPanel && otherOpenedPanel !== panel) {\n      otherOpenedPanel.close(animate);\n    }\n\n    $el[animate ? 'removeClass' : 'addClass']('not-animated');\n    $el.addClass('panel-in');\n\n    if ($backdropEl) {\n      $backdropEl.addClass('panel-backdrop-in');\n      $backdropEl[animate ? 'removeClass' : 'addClass']('not-animated');\n    }\n\n    if (panel.effect === 'cover' || panel.effect === 'push') {\n      /* eslint no-underscore-dangle: [\"error\", { \"allow\": [\"_clientLeft\"] }] */\n      panel._clientLeft = $el[0].clientLeft;\n    } // Transitionend\n\n\n    const $viewEl = $(panel.getViewEl());\n\n    if ($containerEl && $containerEl.hasClass('page')) {\n      $viewEl.add($containerEl.children('.page-content, .tabs'));\n    }\n\n    const transitionEndTarget = effect === 'reveal' ? $viewEl : $el;\n\n    function panelTransitionEnd() {\n      transitionEndTarget.transitionEnd(e => {\n        if ($(e.target).is(transitionEndTarget)) {\n          if ($el.hasClass('panel-out')) {\n            panel.onClosed();\n          } else {\n            panel.onOpened();\n          }\n        } else panelTransitionEnd();\n      });\n    }\n\n    if (animate) {\n      if ($backdropEl) {\n        $backdropEl.removeClass('not-animated');\n      }\n\n      panelTransitionEnd();\n      $el.removeClass('panel-out not-animated').addClass('panel-in');\n      panel.onOpen();\n    } else {\n      if ($backdropEl) {\n        $backdropEl.addClass('not-animated');\n      }\n\n      $el.removeClass('panel-out').addClass('panel-in not-animated');\n      panel.onOpen();\n      panel.onOpened();\n    }\n\n    return true;\n  }\n\n  close(animate) {\n    if (animate === void 0) {\n      animate = true;\n    }\n\n    const panel = this;\n    const {\n      effect,\n      $el,\n      $backdropEl,\n      opened,\n      $containerEl\n    } = panel;\n    if (!opened || $el.hasClass('panel-in-breakpoint') || !$el.hasClass('panel-in')) return panel;\n    $el[animate ? 'removeClass' : 'addClass']('not-animated');\n\n    if ($backdropEl) {\n      $backdropEl[animate ? 'removeClass' : 'addClass']('not-animated');\n    }\n\n    const $viewEl = $(panel.getViewEl());\n\n    if ($containerEl && $containerEl.hasClass('page')) {\n      $viewEl.add($containerEl.children('.page-content, .tabs'));\n    }\n\n    const transitionEndTarget = effect === 'reveal' ? $viewEl : $el;\n\n    function transitionEnd() {\n      if ($el.hasClass('panel-out')) {\n        panel.onClosed();\n      } else if ($el.hasClass('panel-in')) {\n        panel.onOpened();\n      }\n\n      panel.setStateClasses('after-closing');\n    }\n\n    if (animate) {\n      transitionEndTarget.transitionEnd(() => {\n        transitionEnd();\n      });\n      $el.removeClass('panel-in').addClass('panel-out'); // Emit close\n\n      panel.onClose();\n    } else {\n      $el.addClass('not-animated').removeClass('panel-in').addClass('panel-out'); // Emit close\n\n      panel.onClose();\n      panel.onClosed();\n    }\n\n    return panel;\n  }\n\n  init() {\n    const panel = this; // const app = panel.app;\n\n    if (typeof panel.params.visibleBreakpoint !== 'undefined') {\n      panel.setVisibleBreakpoint();\n    }\n\n    if (typeof panel.params.collapsedBreakpoint !== 'undefined') {\n      panel.setCollapsedBreakpoint();\n    }\n\n    if (panel.params.swipe) {\n      panel.enableSwipe();\n    }\n\n    if (panel.resizable) {\n      panel.enableResizable();\n    }\n  }\n\n  destroy() {\n    let panel = this;\n    const app = panel.app;\n    const {\n      $containerEl\n    } = panel;\n\n    if (!panel.$el) {\n      // Panel already destroyed\n      return;\n    }\n\n    panel.emit('local::beforeDestroy panelBeforeDestroy', panel);\n    panel.$el.trigger('panel:beforedestroy');\n\n    if (panel.visibleBreakpointResizeHandler) {\n      app.off('resize', panel.visibleBreakpointResizeHandler);\n    }\n\n    if (panel.collapsedBreakpointResizeHandler) {\n      app.off('resize', panel.collapsedBreakpointResizeHandler);\n    }\n\n    if (panel.$el.hasClass('panel-in-breakpoint') || panel.$el.hasClass('panel-in-collapsed')) {\n      const $viewEl = $(panel.getViewEl());\n\n      if ($containerEl && $containerEl.hasClass('page')) {\n        $viewEl.add($containerEl.children('.page-content, .tabs'));\n      }\n\n      panel.$el.removeClass('panel-in-breakpoint panel-in-collapsed panel-in');\n      $viewEl.css({\n        [`margin-${panel.side}`]: ''\n      });\n      panel.emit('local::breakpoint panelBreakpoint', panel);\n      panel.$el.trigger('panel:breakpoint');\n    }\n\n    panel.$el.trigger('panel:destroy');\n    panel.emit('local::destroy panelDestroy', panel);\n\n    if (panel.el) {\n      panel.el.f7Panel = null;\n      delete panel.el.f7Panel;\n    }\n\n    deleteProps(panel);\n    panel = null;\n  }\n\n}\n\nexport default Panel;","map":{"version":3,"names":["getDocument","$","extend","deleteProps","Framework7Class","swipePanel","resizablePanel","Panel","constructor","app","params","extendedParams","on","panel","$containerEl","containerEl","eq","$el","el","content","filter","node","nodeType","length","f7Panel","side","effect","resizable","hasClass","$backdropEl","backdrop","backdropEl","children","prepend","opened","useModules","init","getViewEl","viewEl","setStateClasses","state","panelInView","contains","$targetEl","addClass","removeClass","enableVisibleBreakpoint","visibleBreakpointDisabled","setVisibleBreakpoint","disableVisibleBreakpoint","toggleVisibleBreakpoint","emitEvents","visibleBreakpointResizeHandler","breakpoint","visibleBreakpoint","$viewEl","wasVisible","add","width","onOpen","onOpened","css","allowPanelOpen","emit","trigger","onClose","onClosed","enableCollapsedBreakpoint","collapsedBreakpointDisabled","setCollapsedBreakpoint","disableCollapsedBreakpoint","toggleCollapsedBreakpoint","collapsedBreakpointResizeHandler","collapsedBreakpoint","collapsed","enableResizable","resizableInitialized","disableResizable","enableSwipe","swipeInitialized","swipeable","disableSwipe","modifyHtmlClasses","allowOpen","otherPanel","get","shouldHideBackdrop","toggle","animate","close","open","insertToRoot","document","$panelParentEl","parent","wasInDom","parents","is","prevAll","$insertBeforeEl","$insertAfterEl","insertBefore","nextAll","once","append","remove","otherOpenedPanel","_clientLeft","clientLeft","transitionEndTarget","panelTransitionEnd","transitionEnd","e","target","swipe","destroy","off"],"sources":["C:/Users/Babak/userlogin/node_modules/framework7/components/panel/panel-class.js"],"sourcesContent":["import { getDocument } from 'ssr-window';\nimport $ from '../../shared/dom7.js';\nimport { extend, deleteProps } from '../../shared/utils.js';\nimport Framework7Class from '../../shared/class.js';\nimport swipePanel from './swipe-panel.js';\nimport resizablePanel from './resizable-panel.js';\n\nclass Panel extends Framework7Class {\n  constructor(app, params) {\n    if (params === void 0) {\n      params = {};\n    }\n\n    const extendedParams = extend({\n      on: {}\n    }, app.params.panel, params);\n    super(extendedParams, [app]);\n    const panel = this;\n    panel.params = extendedParams;\n    panel.$containerEl = panel.params.containerEl ? $(panel.params.containerEl).eq(0) : app.$el;\n    panel.containerEl = panel.$containerEl[0];\n\n    if (!panel.containerEl) {\n      panel.$containerEl = app.$el;\n      panel.containerEl = app.$el[0];\n    }\n\n    let $el;\n\n    if (panel.params.el) {\n      $el = $(panel.params.el).eq(0);\n    } else if (panel.params.content) {\n      $el = $(panel.params.content).filter(node => node.nodeType === 1).eq(0);\n    }\n\n    if ($el.length === 0) return panel;\n    if ($el[0].f7Panel) return $el[0].f7Panel;\n    $el[0].f7Panel = panel;\n    let {\n      side,\n      effect,\n      resizable\n    } = panel.params;\n    if (typeof side === 'undefined') side = $el.hasClass('panel-left') ? 'left' : 'right';\n    if (typeof effect === 'undefined') // eslint-disable-next-line\n      effect = $el.hasClass('panel-cover') ? 'cover' : $el.hasClass('panel-push') ? 'push' : 'reveal';\n    if (typeof resizable === 'undefined') resizable = $el.hasClass('panel-resizable');\n    let $backdropEl;\n\n    if (panel.params.backdrop && panel.params.backdropEl) {\n      $backdropEl = $(panel.params.backdropEl);\n    } else if (panel.params.backdrop) {\n      $backdropEl = panel.$containerEl.children('.panel-backdrop');\n\n      if ($backdropEl.length === 0) {\n        $backdropEl = $('<div class=\"panel-backdrop\"></div>');\n        panel.$containerEl.prepend($backdropEl);\n      }\n    }\n\n    extend(panel, {\n      app,\n      side,\n      effect,\n      resizable,\n      $el,\n      el: $el[0],\n      opened: false,\n      $backdropEl,\n      backdropEl: $backdropEl && $backdropEl[0]\n    }); // Install Modules\n\n    panel.useModules(); // Init\n\n    panel.init();\n    return panel;\n  }\n\n  getViewEl() {\n    const panel = this;\n    let viewEl;\n\n    if (panel.$containerEl.children('.views').length > 0) {\n      viewEl = panel.$containerEl.children('.views')[0];\n    } else {\n      viewEl = panel.$containerEl.children('.view')[0];\n    }\n\n    return viewEl;\n  }\n\n  setStateClasses(state) {\n    const panel = this;\n    const {\n      side,\n      el\n    } = panel;\n    const viewEl = panel.getViewEl();\n    const panelInView = viewEl && viewEl.contains(el);\n    const $targetEl = !viewEl || panelInView ? panel.$containerEl : $('html');\n\n    if (state === 'open') {\n      $targetEl.addClass(`with-panel with-panel-${panel.side}-${panel.effect}`);\n    }\n\n    if (state === 'before-closing') {\n      $targetEl.addClass('with-panel-closing');\n    }\n\n    if (state === 'closing') {\n      $targetEl.addClass('with-panel-closing');\n      $targetEl.removeClass(`with-panel with-panel-${panel.side}-${panel.effect}`);\n    }\n\n    if (state === 'after-closing') {\n      $targetEl.removeClass('with-panel-closing');\n    }\n\n    if (state === 'closed') {\n      $targetEl.removeClass(`with-panel-${side}-reveal with-panel-${side}-cover with-panel-${side}-push with-panel`);\n    }\n  }\n\n  enableVisibleBreakpoint() {\n    const panel = this;\n    panel.visibleBreakpointDisabled = false;\n    panel.setVisibleBreakpoint();\n    return panel;\n  }\n\n  disableVisibleBreakpoint() {\n    const panel = this;\n    panel.visibleBreakpointDisabled = true;\n    panel.setVisibleBreakpoint();\n    return panel;\n  }\n\n  toggleVisibleBreakpoint() {\n    const panel = this;\n    panel.visibleBreakpointDisabled = !panel.visibleBreakpointDisabled;\n    panel.setVisibleBreakpoint();\n    return panel;\n  }\n\n  setVisibleBreakpoint(emitEvents) {\n    if (emitEvents === void 0) {\n      emitEvents = true;\n    }\n\n    const panel = this;\n    const app = panel.app;\n\n    if (!panel.visibleBreakpointResizeHandler) {\n      panel.visibleBreakpointResizeHandler = function visibleBreakpointResizeHandler() {\n        panel.setVisibleBreakpoint();\n      };\n\n      app.on('resize', panel.visibleBreakpointResizeHandler);\n    }\n\n    const {\n      side,\n      $el,\n      $containerEl,\n      params,\n      visibleBreakpointDisabled\n    } = panel;\n    const breakpoint = params.visibleBreakpoint;\n    const $viewEl = $(panel.getViewEl());\n    const wasVisible = $el.hasClass('panel-in-breakpoint');\n\n    if ($containerEl && $containerEl.hasClass('page')) {\n      $viewEl.add($containerEl.children('.page-content, .tabs, .fab'));\n    }\n\n    if (app.width >= breakpoint && typeof breakpoint !== 'undefined' && breakpoint !== null && !visibleBreakpointDisabled) {\n      if (!wasVisible) {\n        panel.setStateClasses('closed');\n        $el.addClass('panel-in-breakpoint').removeClass('panel-in panel-in-collapsed');\n        panel.onOpen(false);\n        panel.onOpened();\n        $viewEl.css({\n          [`margin-${side}`]: `${$el.width()}px`\n        });\n        app.allowPanelOpen = true;\n\n        if (emitEvents) {\n          panel.emit('local::breakpoint panelBreakpoint', panel);\n          panel.$el.trigger('panel:breakpoint');\n        }\n      } else {\n        $viewEl.css({\n          [`margin-${side}`]: `${$el.width()}px`\n        });\n      }\n    } else if (wasVisible) {\n      $el.removeClass('panel-in-breakpoint panel-in');\n      panel.onClose();\n      panel.onClosed();\n      $viewEl.css({\n        [`margin-${side}`]: ''\n      });\n\n      if (emitEvents) {\n        panel.emit('local::breakpoint panelBreakpoint', panel);\n        panel.$el.trigger('panel:breakpoint');\n      }\n    }\n  }\n\n  enableCollapsedBreakpoint() {\n    const panel = this;\n    panel.collapsedBreakpointDisabled = false;\n    panel.setCollapsedBreakpoint();\n    return panel;\n  }\n\n  disableCollapsedBreakpoint() {\n    const panel = this;\n    panel.collapsedBreakpointDisabled = true;\n    panel.setCollapsedBreakpoint();\n    return panel;\n  }\n\n  toggleCollapsedBreakpoint() {\n    const panel = this;\n    panel.collapsedBreakpointDisabled = !panel.collapsedBreakpointDisabled;\n    panel.setCollapsedBreakpoint();\n    return panel;\n  }\n\n  setCollapsedBreakpoint(emitEvents) {\n    if (emitEvents === void 0) {\n      emitEvents = true;\n    }\n\n    const panel = this;\n    const app = panel.app;\n\n    if (!panel.collapsedBreakpointResizeHandler) {\n      panel.collapsedBreakpointResizeHandler = function collapsedBreakpointResizeHandler() {\n        panel.setCollapsedBreakpoint();\n      };\n\n      app.on('resize', panel.collapsedBreakpointResizeHandler);\n    }\n\n    const {\n      $el,\n      params,\n      collapsedBreakpointDisabled\n    } = panel;\n    if ($el.hasClass('panel-in-breakpoint')) return;\n    const breakpoint = params.collapsedBreakpoint;\n    const wasVisible = $el.hasClass('panel-in-collapsed');\n\n    if (app.width >= breakpoint && typeof breakpoint !== 'undefined' && breakpoint !== null && !collapsedBreakpointDisabled) {\n      if (!wasVisible) {\n        panel.setStateClasses('closed');\n        $el.addClass('panel-in-collapsed').removeClass('panel-in');\n        panel.collapsed = true;\n        app.allowPanelOpen = true;\n\n        if (emitEvents) {\n          panel.emit('local::collapsedBreakpoint panelCollapsedBreakpoint', panel);\n          panel.$el.trigger('panel:collapsedbreakpoint');\n        }\n      }\n    } else if (wasVisible) {\n      $el.removeClass('panel-in-collapsed panel-in');\n      panel.collapsed = false;\n\n      if (emitEvents) {\n        panel.emit('local::collapsedBreakpoint panelCollapsedBreakpoint', panel);\n        panel.$el.trigger('panel:collapsedbreakpoint');\n      }\n    }\n  }\n\n  enableResizable() {\n    const panel = this;\n\n    if (panel.resizableInitialized) {\n      panel.resizable = true;\n      panel.$el.addClass('panel-resizable');\n    } else {\n      resizablePanel(panel);\n    }\n\n    return panel;\n  }\n\n  disableResizable() {\n    const panel = this;\n    panel.resizable = false;\n    panel.$el.removeClass('panel-resizable');\n    return panel;\n  }\n\n  enableSwipe() {\n    const panel = this;\n\n    if (panel.swipeInitialized) {\n      panel.swipeable = true;\n    } else {\n      swipePanel(panel);\n    }\n\n    return panel;\n  }\n\n  disableSwipe() {\n    const panel = this;\n    panel.swipeable = false;\n    return panel;\n  }\n\n  onOpen(modifyHtmlClasses) {\n    if (modifyHtmlClasses === void 0) {\n      modifyHtmlClasses = true;\n    }\n\n    const panel = this;\n    const app = panel.app;\n    panel.opened = true;\n    app.panel.allowOpen = false;\n    panel.$el.trigger('panel:beforeopen');\n    panel.emit('local::beforeOpen panelBeforeOpen', panel);\n\n    if (modifyHtmlClasses) {\n      panel.setStateClasses('open');\n    }\n\n    panel.$el.trigger('panel:open');\n    panel.emit('local::open panelOpen', panel);\n  }\n\n  onOpened() {\n    const panel = this;\n    const app = panel.app;\n    app.panel.allowOpen = true;\n    panel.$el.trigger('panel:opened');\n    panel.emit('local::opened panelOpened', panel);\n  }\n\n  onClose() {\n    const panel = this;\n    const app = panel.app;\n    panel.opened = false;\n    app.panel.allowOpen = false;\n    panel.$el.trigger('panel:beforeclose');\n    panel.emit('local::beforeClose panelBeforeClose', panel);\n    panel.setStateClasses('closing');\n    panel.$el.trigger('panel:close');\n    panel.emit('local::close panelClose', panel);\n  }\n\n  onClosed() {\n    const panel = this;\n    const app = panel.app;\n    app.panel.allowOpen = true;\n    panel.setStateClasses('after-closing');\n    panel.$el.removeClass('panel-out');\n\n    if (panel.$backdropEl) {\n      const otherPanel = app.panel.get('.panel-in');\n      const shouldHideBackdrop = !otherPanel || otherPanel && !otherPanel.$backdropEl;\n\n      if (shouldHideBackdrop) {\n        panel.$backdropEl.removeClass('panel-backdrop-in');\n      }\n    }\n\n    panel.$el.trigger('panel:closed');\n    panel.emit('local::closed panelClosed', panel);\n  }\n\n  toggle(animate) {\n    if (animate === void 0) {\n      animate = true;\n    }\n\n    const panel = this;\n    const breakpoint = panel.params.visibleBreakpoint;\n    const app = panel.app;\n\n    if (app.width >= breakpoint && typeof breakpoint !== 'undefined' && breakpoint !== null) {\n      return panel.toggleVisibleBreakpoint();\n    }\n\n    if (panel.opened) panel.close(animate);else panel.open(animate);\n    return panel;\n  }\n\n  insertToRoot() {\n    const panel = this;\n    const document = getDocument();\n    const {\n      $el,\n      $backdropEl,\n      $containerEl\n    } = panel;\n    const $panelParentEl = $el.parent();\n    const wasInDom = $el.parents(document).length > 0;\n\n    if (!$panelParentEl.is($containerEl) || $el.prevAll('.views, .view').length) {\n      const $insertBeforeEl = $containerEl.children('.panel, .views, .view').eq(0);\n      const $insertAfterEl = $containerEl.children('.panel-backdrop').eq(0);\n\n      if ($insertBeforeEl.length) {\n        $el.insertBefore($insertBeforeEl);\n      } else if ($insertAfterEl) {\n        $el.insertBefore($insertAfterEl);\n      } else {\n        $containerEl.prepend($el);\n      }\n\n      if ($backdropEl && $backdropEl.length && (!$backdropEl.parent().is($containerEl) && $backdropEl.nextAll('.panel').length === 0 || $backdropEl.parent().is($containerEl) && $backdropEl.nextAll('.panel').length === 0)) {\n        $backdropEl.insertBefore($el);\n      }\n\n      panel.once('panelClosed', () => {\n        if (wasInDom) {\n          $panelParentEl.append($el);\n        } else {\n          $el.remove();\n        }\n      });\n    }\n  }\n\n  open(animate) {\n    if (animate === void 0) {\n      animate = true;\n    }\n\n    const panel = this;\n    const app = panel.app;\n    if (!app.panel.allowOpen) return false;\n    const {\n      effect,\n      $el,\n      $backdropEl,\n      opened,\n      $containerEl\n    } = panel;\n\n    if (!$el || $el.hasClass('panel-in')) {\n      return panel;\n    }\n\n    panel.insertToRoot(); // Ignore if opened\n\n    if (opened || $el.hasClass('panel-in-breakpoint') || $el.hasClass('panel-in')) return false; // Close if some panel is opened\n\n    const otherOpenedPanel = app.panel.get('.panel-in');\n\n    if (otherOpenedPanel && otherOpenedPanel !== panel) {\n      otherOpenedPanel.close(animate);\n    }\n\n    $el[animate ? 'removeClass' : 'addClass']('not-animated');\n    $el.addClass('panel-in');\n\n    if ($backdropEl) {\n      $backdropEl.addClass('panel-backdrop-in');\n      $backdropEl[animate ? 'removeClass' : 'addClass']('not-animated');\n    }\n\n    if (panel.effect === 'cover' || panel.effect === 'push') {\n      /* eslint no-underscore-dangle: [\"error\", { \"allow\": [\"_clientLeft\"] }] */\n      panel._clientLeft = $el[0].clientLeft;\n    } // Transitionend\n\n\n    const $viewEl = $(panel.getViewEl());\n\n    if ($containerEl && $containerEl.hasClass('page')) {\n      $viewEl.add($containerEl.children('.page-content, .tabs'));\n    }\n\n    const transitionEndTarget = effect === 'reveal' ? $viewEl : $el;\n\n    function panelTransitionEnd() {\n      transitionEndTarget.transitionEnd(e => {\n        if ($(e.target).is(transitionEndTarget)) {\n          if ($el.hasClass('panel-out')) {\n            panel.onClosed();\n          } else {\n            panel.onOpened();\n          }\n        } else panelTransitionEnd();\n      });\n    }\n\n    if (animate) {\n      if ($backdropEl) {\n        $backdropEl.removeClass('not-animated');\n      }\n\n      panelTransitionEnd();\n      $el.removeClass('panel-out not-animated').addClass('panel-in');\n      panel.onOpen();\n    } else {\n      if ($backdropEl) {\n        $backdropEl.addClass('not-animated');\n      }\n\n      $el.removeClass('panel-out').addClass('panel-in not-animated');\n      panel.onOpen();\n      panel.onOpened();\n    }\n\n    return true;\n  }\n\n  close(animate) {\n    if (animate === void 0) {\n      animate = true;\n    }\n\n    const panel = this;\n    const {\n      effect,\n      $el,\n      $backdropEl,\n      opened,\n      $containerEl\n    } = panel;\n    if (!opened || $el.hasClass('panel-in-breakpoint') || !$el.hasClass('panel-in')) return panel;\n    $el[animate ? 'removeClass' : 'addClass']('not-animated');\n\n    if ($backdropEl) {\n      $backdropEl[animate ? 'removeClass' : 'addClass']('not-animated');\n    }\n\n    const $viewEl = $(panel.getViewEl());\n\n    if ($containerEl && $containerEl.hasClass('page')) {\n      $viewEl.add($containerEl.children('.page-content, .tabs'));\n    }\n\n    const transitionEndTarget = effect === 'reveal' ? $viewEl : $el;\n\n    function transitionEnd() {\n      if ($el.hasClass('panel-out')) {\n        panel.onClosed();\n      } else if ($el.hasClass('panel-in')) {\n        panel.onOpened();\n      }\n\n      panel.setStateClasses('after-closing');\n    }\n\n    if (animate) {\n      transitionEndTarget.transitionEnd(() => {\n        transitionEnd();\n      });\n      $el.removeClass('panel-in').addClass('panel-out'); // Emit close\n\n      panel.onClose();\n    } else {\n      $el.addClass('not-animated').removeClass('panel-in').addClass('panel-out'); // Emit close\n\n      panel.onClose();\n      panel.onClosed();\n    }\n\n    return panel;\n  }\n\n  init() {\n    const panel = this; // const app = panel.app;\n\n    if (typeof panel.params.visibleBreakpoint !== 'undefined') {\n      panel.setVisibleBreakpoint();\n    }\n\n    if (typeof panel.params.collapsedBreakpoint !== 'undefined') {\n      panel.setCollapsedBreakpoint();\n    }\n\n    if (panel.params.swipe) {\n      panel.enableSwipe();\n    }\n\n    if (panel.resizable) {\n      panel.enableResizable();\n    }\n  }\n\n  destroy() {\n    let panel = this;\n    const app = panel.app;\n    const {\n      $containerEl\n    } = panel;\n\n    if (!panel.$el) {\n      // Panel already destroyed\n      return;\n    }\n\n    panel.emit('local::beforeDestroy panelBeforeDestroy', panel);\n    panel.$el.trigger('panel:beforedestroy');\n\n    if (panel.visibleBreakpointResizeHandler) {\n      app.off('resize', panel.visibleBreakpointResizeHandler);\n    }\n\n    if (panel.collapsedBreakpointResizeHandler) {\n      app.off('resize', panel.collapsedBreakpointResizeHandler);\n    }\n\n    if (panel.$el.hasClass('panel-in-breakpoint') || panel.$el.hasClass('panel-in-collapsed')) {\n      const $viewEl = $(panel.getViewEl());\n\n      if ($containerEl && $containerEl.hasClass('page')) {\n        $viewEl.add($containerEl.children('.page-content, .tabs'));\n      }\n\n      panel.$el.removeClass('panel-in-breakpoint panel-in-collapsed panel-in');\n      $viewEl.css({\n        [`margin-${panel.side}`]: ''\n      });\n      panel.emit('local::breakpoint panelBreakpoint', panel);\n      panel.$el.trigger('panel:breakpoint');\n    }\n\n    panel.$el.trigger('panel:destroy');\n    panel.emit('local::destroy panelDestroy', panel);\n\n    if (panel.el) {\n      panel.el.f7Panel = null;\n      delete panel.el.f7Panel;\n    }\n\n    deleteProps(panel);\n    panel = null;\n  }\n\n}\n\nexport default Panel;"],"mappings":"AAAA,SAASA,WAAT,QAA4B,YAA5B;AACA,OAAOC,CAAP,MAAc,sBAAd;AACA,SAASC,MAAT,EAAiBC,WAAjB,QAAoC,uBAApC;AACA,OAAOC,eAAP,MAA4B,uBAA5B;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,cAAP,MAA2B,sBAA3B;;AAEA,MAAMC,KAAN,SAAoBH,eAApB,CAAoC;EAClCI,WAAW,CAACC,GAAD,EAAMC,MAAN,EAAc;IACvB,IAAIA,MAAM,KAAK,KAAK,CAApB,EAAuB;MACrBA,MAAM,GAAG,EAAT;IACD;;IAED,MAAMC,cAAc,GAAGT,MAAM,CAAC;MAC5BU,EAAE,EAAE;IADwB,CAAD,EAE1BH,GAAG,CAACC,MAAJ,CAAWG,KAFe,EAERH,MAFQ,CAA7B;IAGA,MAAMC,cAAN,EAAsB,CAACF,GAAD,CAAtB;IACA,MAAMI,KAAK,GAAG,IAAd;IACAA,KAAK,CAACH,MAAN,GAAeC,cAAf;IACAE,KAAK,CAACC,YAAN,GAAqBD,KAAK,CAACH,MAAN,CAAaK,WAAb,GAA2Bd,CAAC,CAACY,KAAK,CAACH,MAAN,CAAaK,WAAd,CAAD,CAA4BC,EAA5B,CAA+B,CAA/B,CAA3B,GAA+DP,GAAG,CAACQ,GAAxF;IACAJ,KAAK,CAACE,WAAN,GAAoBF,KAAK,CAACC,YAAN,CAAmB,CAAnB,CAApB;;IAEA,IAAI,CAACD,KAAK,CAACE,WAAX,EAAwB;MACtBF,KAAK,CAACC,YAAN,GAAqBL,GAAG,CAACQ,GAAzB;MACAJ,KAAK,CAACE,WAAN,GAAoBN,GAAG,CAACQ,GAAJ,CAAQ,CAAR,CAApB;IACD;;IAED,IAAIA,GAAJ;;IAEA,IAAIJ,KAAK,CAACH,MAAN,CAAaQ,EAAjB,EAAqB;MACnBD,GAAG,GAAGhB,CAAC,CAACY,KAAK,CAACH,MAAN,CAAaQ,EAAd,CAAD,CAAmBF,EAAnB,CAAsB,CAAtB,CAAN;IACD,CAFD,MAEO,IAAIH,KAAK,CAACH,MAAN,CAAaS,OAAjB,EAA0B;MAC/BF,GAAG,GAAGhB,CAAC,CAACY,KAAK,CAACH,MAAN,CAAaS,OAAd,CAAD,CAAwBC,MAAxB,CAA+BC,IAAI,IAAIA,IAAI,CAACC,QAAL,KAAkB,CAAzD,EAA4DN,EAA5D,CAA+D,CAA/D,CAAN;IACD;;IAED,IAAIC,GAAG,CAACM,MAAJ,KAAe,CAAnB,EAAsB,OAAOV,KAAP;IACtB,IAAII,GAAG,CAAC,CAAD,CAAH,CAAOO,OAAX,EAAoB,OAAOP,GAAG,CAAC,CAAD,CAAH,CAAOO,OAAd;IACpBP,GAAG,CAAC,CAAD,CAAH,CAAOO,OAAP,GAAiBX,KAAjB;IACA,IAAI;MACFY,IADE;MAEFC,MAFE;MAGFC;IAHE,IAIAd,KAAK,CAACH,MAJV;IAKA,IAAI,OAAOe,IAAP,KAAgB,WAApB,EAAiCA,IAAI,GAAGR,GAAG,CAACW,QAAJ,CAAa,YAAb,IAA6B,MAA7B,GAAsC,OAA7C;IACjC,IAAI,OAAOF,MAAP,KAAkB,WAAtB,EAAmC;MACjCA,MAAM,GAAGT,GAAG,CAACW,QAAJ,CAAa,aAAb,IAA8B,OAA9B,GAAwCX,GAAG,CAACW,QAAJ,CAAa,YAAb,IAA6B,MAA7B,GAAsC,QAAvF;IACF,IAAI,OAAOD,SAAP,KAAqB,WAAzB,EAAsCA,SAAS,GAAGV,GAAG,CAACW,QAAJ,CAAa,iBAAb,CAAZ;IACtC,IAAIC,WAAJ;;IAEA,IAAIhB,KAAK,CAACH,MAAN,CAAaoB,QAAb,IAAyBjB,KAAK,CAACH,MAAN,CAAaqB,UAA1C,EAAsD;MACpDF,WAAW,GAAG5B,CAAC,CAACY,KAAK,CAACH,MAAN,CAAaqB,UAAd,CAAf;IACD,CAFD,MAEO,IAAIlB,KAAK,CAACH,MAAN,CAAaoB,QAAjB,EAA2B;MAChCD,WAAW,GAAGhB,KAAK,CAACC,YAAN,CAAmBkB,QAAnB,CAA4B,iBAA5B,CAAd;;MAEA,IAAIH,WAAW,CAACN,MAAZ,KAAuB,CAA3B,EAA8B;QAC5BM,WAAW,GAAG5B,CAAC,CAAC,oCAAD,CAAf;QACAY,KAAK,CAACC,YAAN,CAAmBmB,OAAnB,CAA2BJ,WAA3B;MACD;IACF;;IAED3B,MAAM,CAACW,KAAD,EAAQ;MACZJ,GADY;MAEZgB,IAFY;MAGZC,MAHY;MAIZC,SAJY;MAKZV,GALY;MAMZC,EAAE,EAAED,GAAG,CAAC,CAAD,CANK;MAOZiB,MAAM,EAAE,KAPI;MAQZL,WARY;MASZE,UAAU,EAAEF,WAAW,IAAIA,WAAW,CAAC,CAAD;IAT1B,CAAR,CAAN,CApDuB,CA8DnB;;IAEJhB,KAAK,CAACsB,UAAN,GAhEuB,CAgEH;;IAEpBtB,KAAK,CAACuB,IAAN;IACA,OAAOvB,KAAP;EACD;;EAEDwB,SAAS,GAAG;IACV,MAAMxB,KAAK,GAAG,IAAd;IACA,IAAIyB,MAAJ;;IAEA,IAAIzB,KAAK,CAACC,YAAN,CAAmBkB,QAAnB,CAA4B,QAA5B,EAAsCT,MAAtC,GAA+C,CAAnD,EAAsD;MACpDe,MAAM,GAAGzB,KAAK,CAACC,YAAN,CAAmBkB,QAAnB,CAA4B,QAA5B,EAAsC,CAAtC,CAAT;IACD,CAFD,MAEO;MACLM,MAAM,GAAGzB,KAAK,CAACC,YAAN,CAAmBkB,QAAnB,CAA4B,OAA5B,EAAqC,CAArC,CAAT;IACD;;IAED,OAAOM,MAAP;EACD;;EAEDC,eAAe,CAACC,KAAD,EAAQ;IACrB,MAAM3B,KAAK,GAAG,IAAd;IACA,MAAM;MACJY,IADI;MAEJP;IAFI,IAGFL,KAHJ;IAIA,MAAMyB,MAAM,GAAGzB,KAAK,CAACwB,SAAN,EAAf;IACA,MAAMI,WAAW,GAAGH,MAAM,IAAIA,MAAM,CAACI,QAAP,CAAgBxB,EAAhB,CAA9B;IACA,MAAMyB,SAAS,GAAG,CAACL,MAAD,IAAWG,WAAX,GAAyB5B,KAAK,CAACC,YAA/B,GAA8Cb,CAAC,CAAC,MAAD,CAAjE;;IAEA,IAAIuC,KAAK,KAAK,MAAd,EAAsB;MACpBG,SAAS,CAACC,QAAV,CAAoB,yBAAwB/B,KAAK,CAACY,IAAK,IAAGZ,KAAK,CAACa,MAAO,EAAvE;IACD;;IAED,IAAIc,KAAK,KAAK,gBAAd,EAAgC;MAC9BG,SAAS,CAACC,QAAV,CAAmB,oBAAnB;IACD;;IAED,IAAIJ,KAAK,KAAK,SAAd,EAAyB;MACvBG,SAAS,CAACC,QAAV,CAAmB,oBAAnB;MACAD,SAAS,CAACE,WAAV,CAAuB,yBAAwBhC,KAAK,CAACY,IAAK,IAAGZ,KAAK,CAACa,MAAO,EAA1E;IACD;;IAED,IAAIc,KAAK,KAAK,eAAd,EAA+B;MAC7BG,SAAS,CAACE,WAAV,CAAsB,oBAAtB;IACD;;IAED,IAAIL,KAAK,KAAK,QAAd,EAAwB;MACtBG,SAAS,CAACE,WAAV,CAAuB,cAAapB,IAAK,sBAAqBA,IAAK,qBAAoBA,IAAK,kBAA5F;IACD;EACF;;EAEDqB,uBAAuB,GAAG;IACxB,MAAMjC,KAAK,GAAG,IAAd;IACAA,KAAK,CAACkC,yBAAN,GAAkC,KAAlC;IACAlC,KAAK,CAACmC,oBAAN;IACA,OAAOnC,KAAP;EACD;;EAEDoC,wBAAwB,GAAG;IACzB,MAAMpC,KAAK,GAAG,IAAd;IACAA,KAAK,CAACkC,yBAAN,GAAkC,IAAlC;IACAlC,KAAK,CAACmC,oBAAN;IACA,OAAOnC,KAAP;EACD;;EAEDqC,uBAAuB,GAAG;IACxB,MAAMrC,KAAK,GAAG,IAAd;IACAA,KAAK,CAACkC,yBAAN,GAAkC,CAAClC,KAAK,CAACkC,yBAAzC;IACAlC,KAAK,CAACmC,oBAAN;IACA,OAAOnC,KAAP;EACD;;EAEDmC,oBAAoB,CAACG,UAAD,EAAa;IAC/B,IAAIA,UAAU,KAAK,KAAK,CAAxB,EAA2B;MACzBA,UAAU,GAAG,IAAb;IACD;;IAED,MAAMtC,KAAK,GAAG,IAAd;IACA,MAAMJ,GAAG,GAAGI,KAAK,CAACJ,GAAlB;;IAEA,IAAI,CAACI,KAAK,CAACuC,8BAAX,EAA2C;MACzCvC,KAAK,CAACuC,8BAAN,GAAuC,SAASA,8BAAT,GAA0C;QAC/EvC,KAAK,CAACmC,oBAAN;MACD,CAFD;;MAIAvC,GAAG,CAACG,EAAJ,CAAO,QAAP,EAAiBC,KAAK,CAACuC,8BAAvB;IACD;;IAED,MAAM;MACJ3B,IADI;MAEJR,GAFI;MAGJH,YAHI;MAIJJ,MAJI;MAKJqC;IALI,IAMFlC,KANJ;IAOA,MAAMwC,UAAU,GAAG3C,MAAM,CAAC4C,iBAA1B;IACA,MAAMC,OAAO,GAAGtD,CAAC,CAACY,KAAK,CAACwB,SAAN,EAAD,CAAjB;IACA,MAAMmB,UAAU,GAAGvC,GAAG,CAACW,QAAJ,CAAa,qBAAb,CAAnB;;IAEA,IAAId,YAAY,IAAIA,YAAY,CAACc,QAAb,CAAsB,MAAtB,CAApB,EAAmD;MACjD2B,OAAO,CAACE,GAAR,CAAY3C,YAAY,CAACkB,QAAb,CAAsB,4BAAtB,CAAZ;IACD;;IAED,IAAIvB,GAAG,CAACiD,KAAJ,IAAaL,UAAb,IAA2B,OAAOA,UAAP,KAAsB,WAAjD,IAAgEA,UAAU,KAAK,IAA/E,IAAuF,CAACN,yBAA5F,EAAuH;MACrH,IAAI,CAACS,UAAL,EAAiB;QACf3C,KAAK,CAAC0B,eAAN,CAAsB,QAAtB;QACAtB,GAAG,CAAC2B,QAAJ,CAAa,qBAAb,EAAoCC,WAApC,CAAgD,6BAAhD;QACAhC,KAAK,CAAC8C,MAAN,CAAa,KAAb;QACA9C,KAAK,CAAC+C,QAAN;QACAL,OAAO,CAACM,GAAR,CAAY;UACV,CAAE,UAASpC,IAAK,EAAhB,GAAqB,GAAER,GAAG,CAACyC,KAAJ,EAAY;QADzB,CAAZ;QAGAjD,GAAG,CAACqD,cAAJ,GAAqB,IAArB;;QAEA,IAAIX,UAAJ,EAAgB;UACdtC,KAAK,CAACkD,IAAN,CAAW,mCAAX,EAAgDlD,KAAhD;UACAA,KAAK,CAACI,GAAN,CAAU+C,OAAV,CAAkB,kBAAlB;QACD;MACF,CAdD,MAcO;QACLT,OAAO,CAACM,GAAR,CAAY;UACV,CAAE,UAASpC,IAAK,EAAhB,GAAqB,GAAER,GAAG,CAACyC,KAAJ,EAAY;QADzB,CAAZ;MAGD;IACF,CApBD,MAoBO,IAAIF,UAAJ,EAAgB;MACrBvC,GAAG,CAAC4B,WAAJ,CAAgB,8BAAhB;MACAhC,KAAK,CAACoD,OAAN;MACApD,KAAK,CAACqD,QAAN;MACAX,OAAO,CAACM,GAAR,CAAY;QACV,CAAE,UAASpC,IAAK,EAAhB,GAAoB;MADV,CAAZ;;MAIA,IAAI0B,UAAJ,EAAgB;QACdtC,KAAK,CAACkD,IAAN,CAAW,mCAAX,EAAgDlD,KAAhD;QACAA,KAAK,CAACI,GAAN,CAAU+C,OAAV,CAAkB,kBAAlB;MACD;IACF;EACF;;EAEDG,yBAAyB,GAAG;IAC1B,MAAMtD,KAAK,GAAG,IAAd;IACAA,KAAK,CAACuD,2BAAN,GAAoC,KAApC;IACAvD,KAAK,CAACwD,sBAAN;IACA,OAAOxD,KAAP;EACD;;EAEDyD,0BAA0B,GAAG;IAC3B,MAAMzD,KAAK,GAAG,IAAd;IACAA,KAAK,CAACuD,2BAAN,GAAoC,IAApC;IACAvD,KAAK,CAACwD,sBAAN;IACA,OAAOxD,KAAP;EACD;;EAED0D,yBAAyB,GAAG;IAC1B,MAAM1D,KAAK,GAAG,IAAd;IACAA,KAAK,CAACuD,2BAAN,GAAoC,CAACvD,KAAK,CAACuD,2BAA3C;IACAvD,KAAK,CAACwD,sBAAN;IACA,OAAOxD,KAAP;EACD;;EAEDwD,sBAAsB,CAAClB,UAAD,EAAa;IACjC,IAAIA,UAAU,KAAK,KAAK,CAAxB,EAA2B;MACzBA,UAAU,GAAG,IAAb;IACD;;IAED,MAAMtC,KAAK,GAAG,IAAd;IACA,MAAMJ,GAAG,GAAGI,KAAK,CAACJ,GAAlB;;IAEA,IAAI,CAACI,KAAK,CAAC2D,gCAAX,EAA6C;MAC3C3D,KAAK,CAAC2D,gCAAN,GAAyC,SAASA,gCAAT,GAA4C;QACnF3D,KAAK,CAACwD,sBAAN;MACD,CAFD;;MAIA5D,GAAG,CAACG,EAAJ,CAAO,QAAP,EAAiBC,KAAK,CAAC2D,gCAAvB;IACD;;IAED,MAAM;MACJvD,GADI;MAEJP,MAFI;MAGJ0D;IAHI,IAIFvD,KAJJ;IAKA,IAAII,GAAG,CAACW,QAAJ,CAAa,qBAAb,CAAJ,EAAyC;IACzC,MAAMyB,UAAU,GAAG3C,MAAM,CAAC+D,mBAA1B;IACA,MAAMjB,UAAU,GAAGvC,GAAG,CAACW,QAAJ,CAAa,oBAAb,CAAnB;;IAEA,IAAInB,GAAG,CAACiD,KAAJ,IAAaL,UAAb,IAA2B,OAAOA,UAAP,KAAsB,WAAjD,IAAgEA,UAAU,KAAK,IAA/E,IAAuF,CAACe,2BAA5F,EAAyH;MACvH,IAAI,CAACZ,UAAL,EAAiB;QACf3C,KAAK,CAAC0B,eAAN,CAAsB,QAAtB;QACAtB,GAAG,CAAC2B,QAAJ,CAAa,oBAAb,EAAmCC,WAAnC,CAA+C,UAA/C;QACAhC,KAAK,CAAC6D,SAAN,GAAkB,IAAlB;QACAjE,GAAG,CAACqD,cAAJ,GAAqB,IAArB;;QAEA,IAAIX,UAAJ,EAAgB;UACdtC,KAAK,CAACkD,IAAN,CAAW,qDAAX,EAAkElD,KAAlE;UACAA,KAAK,CAACI,GAAN,CAAU+C,OAAV,CAAkB,2BAAlB;QACD;MACF;IACF,CAZD,MAYO,IAAIR,UAAJ,EAAgB;MACrBvC,GAAG,CAAC4B,WAAJ,CAAgB,6BAAhB;MACAhC,KAAK,CAAC6D,SAAN,GAAkB,KAAlB;;MAEA,IAAIvB,UAAJ,EAAgB;QACdtC,KAAK,CAACkD,IAAN,CAAW,qDAAX,EAAkElD,KAAlE;QACAA,KAAK,CAACI,GAAN,CAAU+C,OAAV,CAAkB,2BAAlB;MACD;IACF;EACF;;EAEDW,eAAe,GAAG;IAChB,MAAM9D,KAAK,GAAG,IAAd;;IAEA,IAAIA,KAAK,CAAC+D,oBAAV,EAAgC;MAC9B/D,KAAK,CAACc,SAAN,GAAkB,IAAlB;MACAd,KAAK,CAACI,GAAN,CAAU2B,QAAV,CAAmB,iBAAnB;IACD,CAHD,MAGO;MACLtC,cAAc,CAACO,KAAD,CAAd;IACD;;IAED,OAAOA,KAAP;EACD;;EAEDgE,gBAAgB,GAAG;IACjB,MAAMhE,KAAK,GAAG,IAAd;IACAA,KAAK,CAACc,SAAN,GAAkB,KAAlB;IACAd,KAAK,CAACI,GAAN,CAAU4B,WAAV,CAAsB,iBAAtB;IACA,OAAOhC,KAAP;EACD;;EAEDiE,WAAW,GAAG;IACZ,MAAMjE,KAAK,GAAG,IAAd;;IAEA,IAAIA,KAAK,CAACkE,gBAAV,EAA4B;MAC1BlE,KAAK,CAACmE,SAAN,GAAkB,IAAlB;IACD,CAFD,MAEO;MACL3E,UAAU,CAACQ,KAAD,CAAV;IACD;;IAED,OAAOA,KAAP;EACD;;EAEDoE,YAAY,GAAG;IACb,MAAMpE,KAAK,GAAG,IAAd;IACAA,KAAK,CAACmE,SAAN,GAAkB,KAAlB;IACA,OAAOnE,KAAP;EACD;;EAED8C,MAAM,CAACuB,iBAAD,EAAoB;IACxB,IAAIA,iBAAiB,KAAK,KAAK,CAA/B,EAAkC;MAChCA,iBAAiB,GAAG,IAApB;IACD;;IAED,MAAMrE,KAAK,GAAG,IAAd;IACA,MAAMJ,GAAG,GAAGI,KAAK,CAACJ,GAAlB;IACAI,KAAK,CAACqB,MAAN,GAAe,IAAf;IACAzB,GAAG,CAACI,KAAJ,CAAUsE,SAAV,GAAsB,KAAtB;IACAtE,KAAK,CAACI,GAAN,CAAU+C,OAAV,CAAkB,kBAAlB;IACAnD,KAAK,CAACkD,IAAN,CAAW,mCAAX,EAAgDlD,KAAhD;;IAEA,IAAIqE,iBAAJ,EAAuB;MACrBrE,KAAK,CAAC0B,eAAN,CAAsB,MAAtB;IACD;;IAED1B,KAAK,CAACI,GAAN,CAAU+C,OAAV,CAAkB,YAAlB;IACAnD,KAAK,CAACkD,IAAN,CAAW,uBAAX,EAAoClD,KAApC;EACD;;EAED+C,QAAQ,GAAG;IACT,MAAM/C,KAAK,GAAG,IAAd;IACA,MAAMJ,GAAG,GAAGI,KAAK,CAACJ,GAAlB;IACAA,GAAG,CAACI,KAAJ,CAAUsE,SAAV,GAAsB,IAAtB;IACAtE,KAAK,CAACI,GAAN,CAAU+C,OAAV,CAAkB,cAAlB;IACAnD,KAAK,CAACkD,IAAN,CAAW,2BAAX,EAAwClD,KAAxC;EACD;;EAEDoD,OAAO,GAAG;IACR,MAAMpD,KAAK,GAAG,IAAd;IACA,MAAMJ,GAAG,GAAGI,KAAK,CAACJ,GAAlB;IACAI,KAAK,CAACqB,MAAN,GAAe,KAAf;IACAzB,GAAG,CAACI,KAAJ,CAAUsE,SAAV,GAAsB,KAAtB;IACAtE,KAAK,CAACI,GAAN,CAAU+C,OAAV,CAAkB,mBAAlB;IACAnD,KAAK,CAACkD,IAAN,CAAW,qCAAX,EAAkDlD,KAAlD;IACAA,KAAK,CAAC0B,eAAN,CAAsB,SAAtB;IACA1B,KAAK,CAACI,GAAN,CAAU+C,OAAV,CAAkB,aAAlB;IACAnD,KAAK,CAACkD,IAAN,CAAW,yBAAX,EAAsClD,KAAtC;EACD;;EAEDqD,QAAQ,GAAG;IACT,MAAMrD,KAAK,GAAG,IAAd;IACA,MAAMJ,GAAG,GAAGI,KAAK,CAACJ,GAAlB;IACAA,GAAG,CAACI,KAAJ,CAAUsE,SAAV,GAAsB,IAAtB;IACAtE,KAAK,CAAC0B,eAAN,CAAsB,eAAtB;IACA1B,KAAK,CAACI,GAAN,CAAU4B,WAAV,CAAsB,WAAtB;;IAEA,IAAIhC,KAAK,CAACgB,WAAV,EAAuB;MACrB,MAAMuD,UAAU,GAAG3E,GAAG,CAACI,KAAJ,CAAUwE,GAAV,CAAc,WAAd,CAAnB;MACA,MAAMC,kBAAkB,GAAG,CAACF,UAAD,IAAeA,UAAU,IAAI,CAACA,UAAU,CAACvD,WAApE;;MAEA,IAAIyD,kBAAJ,EAAwB;QACtBzE,KAAK,CAACgB,WAAN,CAAkBgB,WAAlB,CAA8B,mBAA9B;MACD;IACF;;IAEDhC,KAAK,CAACI,GAAN,CAAU+C,OAAV,CAAkB,cAAlB;IACAnD,KAAK,CAACkD,IAAN,CAAW,2BAAX,EAAwClD,KAAxC;EACD;;EAED0E,MAAM,CAACC,OAAD,EAAU;IACd,IAAIA,OAAO,KAAK,KAAK,CAArB,EAAwB;MACtBA,OAAO,GAAG,IAAV;IACD;;IAED,MAAM3E,KAAK,GAAG,IAAd;IACA,MAAMwC,UAAU,GAAGxC,KAAK,CAACH,MAAN,CAAa4C,iBAAhC;IACA,MAAM7C,GAAG,GAAGI,KAAK,CAACJ,GAAlB;;IAEA,IAAIA,GAAG,CAACiD,KAAJ,IAAaL,UAAb,IAA2B,OAAOA,UAAP,KAAsB,WAAjD,IAAgEA,UAAU,KAAK,IAAnF,EAAyF;MACvF,OAAOxC,KAAK,CAACqC,uBAAN,EAAP;IACD;;IAED,IAAIrC,KAAK,CAACqB,MAAV,EAAkBrB,KAAK,CAAC4E,KAAN,CAAYD,OAAZ,EAAlB,KAA4C3E,KAAK,CAAC6E,IAAN,CAAWF,OAAX;IAC5C,OAAO3E,KAAP;EACD;;EAED8E,YAAY,GAAG;IACb,MAAM9E,KAAK,GAAG,IAAd;IACA,MAAM+E,QAAQ,GAAG5F,WAAW,EAA5B;IACA,MAAM;MACJiB,GADI;MAEJY,WAFI;MAGJf;IAHI,IAIFD,KAJJ;IAKA,MAAMgF,cAAc,GAAG5E,GAAG,CAAC6E,MAAJ,EAAvB;IACA,MAAMC,QAAQ,GAAG9E,GAAG,CAAC+E,OAAJ,CAAYJ,QAAZ,EAAsBrE,MAAtB,GAA+B,CAAhD;;IAEA,IAAI,CAACsE,cAAc,CAACI,EAAf,CAAkBnF,YAAlB,CAAD,IAAoCG,GAAG,CAACiF,OAAJ,CAAY,eAAZ,EAA6B3E,MAArE,EAA6E;MAC3E,MAAM4E,eAAe,GAAGrF,YAAY,CAACkB,QAAb,CAAsB,uBAAtB,EAA+ChB,EAA/C,CAAkD,CAAlD,CAAxB;MACA,MAAMoF,cAAc,GAAGtF,YAAY,CAACkB,QAAb,CAAsB,iBAAtB,EAAyChB,EAAzC,CAA4C,CAA5C,CAAvB;;MAEA,IAAImF,eAAe,CAAC5E,MAApB,EAA4B;QAC1BN,GAAG,CAACoF,YAAJ,CAAiBF,eAAjB;MACD,CAFD,MAEO,IAAIC,cAAJ,EAAoB;QACzBnF,GAAG,CAACoF,YAAJ,CAAiBD,cAAjB;MACD,CAFM,MAEA;QACLtF,YAAY,CAACmB,OAAb,CAAqBhB,GAArB;MACD;;MAED,IAAIY,WAAW,IAAIA,WAAW,CAACN,MAA3B,KAAsC,CAACM,WAAW,CAACiE,MAAZ,GAAqBG,EAArB,CAAwBnF,YAAxB,CAAD,IAA0Ce,WAAW,CAACyE,OAAZ,CAAoB,QAApB,EAA8B/E,MAA9B,KAAyC,CAAnF,IAAwFM,WAAW,CAACiE,MAAZ,GAAqBG,EAArB,CAAwBnF,YAAxB,KAAyCe,WAAW,CAACyE,OAAZ,CAAoB,QAApB,EAA8B/E,MAA9B,KAAyC,CAAhN,CAAJ,EAAwN;QACtNM,WAAW,CAACwE,YAAZ,CAAyBpF,GAAzB;MACD;;MAEDJ,KAAK,CAAC0F,IAAN,CAAW,aAAX,EAA0B,MAAM;QAC9B,IAAIR,QAAJ,EAAc;UACZF,cAAc,CAACW,MAAf,CAAsBvF,GAAtB;QACD,CAFD,MAEO;UACLA,GAAG,CAACwF,MAAJ;QACD;MACF,CAND;IAOD;EACF;;EAEDf,IAAI,CAACF,OAAD,EAAU;IACZ,IAAIA,OAAO,KAAK,KAAK,CAArB,EAAwB;MACtBA,OAAO,GAAG,IAAV;IACD;;IAED,MAAM3E,KAAK,GAAG,IAAd;IACA,MAAMJ,GAAG,GAAGI,KAAK,CAACJ,GAAlB;IACA,IAAI,CAACA,GAAG,CAACI,KAAJ,CAAUsE,SAAf,EAA0B,OAAO,KAAP;IAC1B,MAAM;MACJzD,MADI;MAEJT,GAFI;MAGJY,WAHI;MAIJK,MAJI;MAKJpB;IALI,IAMFD,KANJ;;IAQA,IAAI,CAACI,GAAD,IAAQA,GAAG,CAACW,QAAJ,CAAa,UAAb,CAAZ,EAAsC;MACpC,OAAOf,KAAP;IACD;;IAEDA,KAAK,CAAC8E,YAAN,GApBY,CAoBU;;IAEtB,IAAIzD,MAAM,IAAIjB,GAAG,CAACW,QAAJ,CAAa,qBAAb,CAAV,IAAiDX,GAAG,CAACW,QAAJ,CAAa,UAAb,CAArD,EAA+E,OAAO,KAAP,CAtBnE,CAsBiF;;IAE7F,MAAM8E,gBAAgB,GAAGjG,GAAG,CAACI,KAAJ,CAAUwE,GAAV,CAAc,WAAd,CAAzB;;IAEA,IAAIqB,gBAAgB,IAAIA,gBAAgB,KAAK7F,KAA7C,EAAoD;MAClD6F,gBAAgB,CAACjB,KAAjB,CAAuBD,OAAvB;IACD;;IAEDvE,GAAG,CAACuE,OAAO,GAAG,aAAH,GAAmB,UAA3B,CAAH,CAA0C,cAA1C;IACAvE,GAAG,CAAC2B,QAAJ,CAAa,UAAb;;IAEA,IAAIf,WAAJ,EAAiB;MACfA,WAAW,CAACe,QAAZ,CAAqB,mBAArB;MACAf,WAAW,CAAC2D,OAAO,GAAG,aAAH,GAAmB,UAA3B,CAAX,CAAkD,cAAlD;IACD;;IAED,IAAI3E,KAAK,CAACa,MAAN,KAAiB,OAAjB,IAA4Bb,KAAK,CAACa,MAAN,KAAiB,MAAjD,EAAyD;MACvD;MACAb,KAAK,CAAC8F,WAAN,GAAoB1F,GAAG,CAAC,CAAD,CAAH,CAAO2F,UAA3B;IACD,CAzCW,CAyCV;;;IAGF,MAAMrD,OAAO,GAAGtD,CAAC,CAACY,KAAK,CAACwB,SAAN,EAAD,CAAjB;;IAEA,IAAIvB,YAAY,IAAIA,YAAY,CAACc,QAAb,CAAsB,MAAtB,CAApB,EAAmD;MACjD2B,OAAO,CAACE,GAAR,CAAY3C,YAAY,CAACkB,QAAb,CAAsB,sBAAtB,CAAZ;IACD;;IAED,MAAM6E,mBAAmB,GAAGnF,MAAM,KAAK,QAAX,GAAsB6B,OAAtB,GAAgCtC,GAA5D;;IAEA,SAAS6F,kBAAT,GAA8B;MAC5BD,mBAAmB,CAACE,aAApB,CAAkCC,CAAC,IAAI;QACrC,IAAI/G,CAAC,CAAC+G,CAAC,CAACC,MAAH,CAAD,CAAYhB,EAAZ,CAAeY,mBAAf,CAAJ,EAAyC;UACvC,IAAI5F,GAAG,CAACW,QAAJ,CAAa,WAAb,CAAJ,EAA+B;YAC7Bf,KAAK,CAACqD,QAAN;UACD,CAFD,MAEO;YACLrD,KAAK,CAAC+C,QAAN;UACD;QACF,CAND,MAMOkD,kBAAkB;MAC1B,CARD;IASD;;IAED,IAAItB,OAAJ,EAAa;MACX,IAAI3D,WAAJ,EAAiB;QACfA,WAAW,CAACgB,WAAZ,CAAwB,cAAxB;MACD;;MAEDiE,kBAAkB;MAClB7F,GAAG,CAAC4B,WAAJ,CAAgB,wBAAhB,EAA0CD,QAA1C,CAAmD,UAAnD;MACA/B,KAAK,CAAC8C,MAAN;IACD,CARD,MAQO;MACL,IAAI9B,WAAJ,EAAiB;QACfA,WAAW,CAACe,QAAZ,CAAqB,cAArB;MACD;;MAED3B,GAAG,CAAC4B,WAAJ,CAAgB,WAAhB,EAA6BD,QAA7B,CAAsC,uBAAtC;MACA/B,KAAK,CAAC8C,MAAN;MACA9C,KAAK,CAAC+C,QAAN;IACD;;IAED,OAAO,IAAP;EACD;;EAED6B,KAAK,CAACD,OAAD,EAAU;IACb,IAAIA,OAAO,KAAK,KAAK,CAArB,EAAwB;MACtBA,OAAO,GAAG,IAAV;IACD;;IAED,MAAM3E,KAAK,GAAG,IAAd;IACA,MAAM;MACJa,MADI;MAEJT,GAFI;MAGJY,WAHI;MAIJK,MAJI;MAKJpB;IALI,IAMFD,KANJ;IAOA,IAAI,CAACqB,MAAD,IAAWjB,GAAG,CAACW,QAAJ,CAAa,qBAAb,CAAX,IAAkD,CAACX,GAAG,CAACW,QAAJ,CAAa,UAAb,CAAvD,EAAiF,OAAOf,KAAP;IACjFI,GAAG,CAACuE,OAAO,GAAG,aAAH,GAAmB,UAA3B,CAAH,CAA0C,cAA1C;;IAEA,IAAI3D,WAAJ,EAAiB;MACfA,WAAW,CAAC2D,OAAO,GAAG,aAAH,GAAmB,UAA3B,CAAX,CAAkD,cAAlD;IACD;;IAED,MAAMjC,OAAO,GAAGtD,CAAC,CAACY,KAAK,CAACwB,SAAN,EAAD,CAAjB;;IAEA,IAAIvB,YAAY,IAAIA,YAAY,CAACc,QAAb,CAAsB,MAAtB,CAApB,EAAmD;MACjD2B,OAAO,CAACE,GAAR,CAAY3C,YAAY,CAACkB,QAAb,CAAsB,sBAAtB,CAAZ;IACD;;IAED,MAAM6E,mBAAmB,GAAGnF,MAAM,KAAK,QAAX,GAAsB6B,OAAtB,GAAgCtC,GAA5D;;IAEA,SAAS8F,aAAT,GAAyB;MACvB,IAAI9F,GAAG,CAACW,QAAJ,CAAa,WAAb,CAAJ,EAA+B;QAC7Bf,KAAK,CAACqD,QAAN;MACD,CAFD,MAEO,IAAIjD,GAAG,CAACW,QAAJ,CAAa,UAAb,CAAJ,EAA8B;QACnCf,KAAK,CAAC+C,QAAN;MACD;;MAED/C,KAAK,CAAC0B,eAAN,CAAsB,eAAtB;IACD;;IAED,IAAIiD,OAAJ,EAAa;MACXqB,mBAAmB,CAACE,aAApB,CAAkC,MAAM;QACtCA,aAAa;MACd,CAFD;MAGA9F,GAAG,CAAC4B,WAAJ,CAAgB,UAAhB,EAA4BD,QAA5B,CAAqC,WAArC,EAJW,CAIwC;;MAEnD/B,KAAK,CAACoD,OAAN;IACD,CAPD,MAOO;MACLhD,GAAG,CAAC2B,QAAJ,CAAa,cAAb,EAA6BC,WAA7B,CAAyC,UAAzC,EAAqDD,QAArD,CAA8D,WAA9D,EADK,CACuE;;MAE5E/B,KAAK,CAACoD,OAAN;MACApD,KAAK,CAACqD,QAAN;IACD;;IAED,OAAOrD,KAAP;EACD;;EAEDuB,IAAI,GAAG;IACL,MAAMvB,KAAK,GAAG,IAAd,CADK,CACe;;IAEpB,IAAI,OAAOA,KAAK,CAACH,MAAN,CAAa4C,iBAApB,KAA0C,WAA9C,EAA2D;MACzDzC,KAAK,CAACmC,oBAAN;IACD;;IAED,IAAI,OAAOnC,KAAK,CAACH,MAAN,CAAa+D,mBAApB,KAA4C,WAAhD,EAA6D;MAC3D5D,KAAK,CAACwD,sBAAN;IACD;;IAED,IAAIxD,KAAK,CAACH,MAAN,CAAawG,KAAjB,EAAwB;MACtBrG,KAAK,CAACiE,WAAN;IACD;;IAED,IAAIjE,KAAK,CAACc,SAAV,EAAqB;MACnBd,KAAK,CAAC8D,eAAN;IACD;EACF;;EAEDwC,OAAO,GAAG;IACR,IAAItG,KAAK,GAAG,IAAZ;IACA,MAAMJ,GAAG,GAAGI,KAAK,CAACJ,GAAlB;IACA,MAAM;MACJK;IADI,IAEFD,KAFJ;;IAIA,IAAI,CAACA,KAAK,CAACI,GAAX,EAAgB;MACd;MACA;IACD;;IAEDJ,KAAK,CAACkD,IAAN,CAAW,yCAAX,EAAsDlD,KAAtD;IACAA,KAAK,CAACI,GAAN,CAAU+C,OAAV,CAAkB,qBAAlB;;IAEA,IAAInD,KAAK,CAACuC,8BAAV,EAA0C;MACxC3C,GAAG,CAAC2G,GAAJ,CAAQ,QAAR,EAAkBvG,KAAK,CAACuC,8BAAxB;IACD;;IAED,IAAIvC,KAAK,CAAC2D,gCAAV,EAA4C;MAC1C/D,GAAG,CAAC2G,GAAJ,CAAQ,QAAR,EAAkBvG,KAAK,CAAC2D,gCAAxB;IACD;;IAED,IAAI3D,KAAK,CAACI,GAAN,CAAUW,QAAV,CAAmB,qBAAnB,KAA6Cf,KAAK,CAACI,GAAN,CAAUW,QAAV,CAAmB,oBAAnB,CAAjD,EAA2F;MACzF,MAAM2B,OAAO,GAAGtD,CAAC,CAACY,KAAK,CAACwB,SAAN,EAAD,CAAjB;;MAEA,IAAIvB,YAAY,IAAIA,YAAY,CAACc,QAAb,CAAsB,MAAtB,CAApB,EAAmD;QACjD2B,OAAO,CAACE,GAAR,CAAY3C,YAAY,CAACkB,QAAb,CAAsB,sBAAtB,CAAZ;MACD;;MAEDnB,KAAK,CAACI,GAAN,CAAU4B,WAAV,CAAsB,iDAAtB;MACAU,OAAO,CAACM,GAAR,CAAY;QACV,CAAE,UAAShD,KAAK,CAACY,IAAK,EAAtB,GAA0B;MADhB,CAAZ;MAGAZ,KAAK,CAACkD,IAAN,CAAW,mCAAX,EAAgDlD,KAAhD;MACAA,KAAK,CAACI,GAAN,CAAU+C,OAAV,CAAkB,kBAAlB;IACD;;IAEDnD,KAAK,CAACI,GAAN,CAAU+C,OAAV,CAAkB,eAAlB;IACAnD,KAAK,CAACkD,IAAN,CAAW,6BAAX,EAA0ClD,KAA1C;;IAEA,IAAIA,KAAK,CAACK,EAAV,EAAc;MACZL,KAAK,CAACK,EAAN,CAASM,OAAT,GAAmB,IAAnB;MACA,OAAOX,KAAK,CAACK,EAAN,CAASM,OAAhB;IACD;;IAEDrB,WAAW,CAACU,KAAD,CAAX;IACAA,KAAK,GAAG,IAAR;EACD;;AAxnBiC;;AA4nBpC,eAAeN,KAAf"},"metadata":{},"sourceType":"module"}