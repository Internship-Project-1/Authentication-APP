{"ast":null,"code":"import { getComponentId } from './utils.js';\nexport const getRouterInitialComponent = (router, initialComponent) => {\n  let initialComponentData;\n  const {\n    initialUrl\n  } = router.getInitialUrl();\n  const initialRoute = router.findMatchingRoute(initialUrl);\n  let routeProps = {};\n\n  if (initialRoute && initialRoute.route && initialRoute.route.options) {\n    routeProps = initialRoute.route.options.props;\n  }\n\n  const isMasterRoute = route => {\n    if (route.master === true) return true;\n    if (typeof route.master === 'function') return route.master(router.app);\n    return false;\n  };\n\n  if (initialRoute && initialRoute.route && (initialRoute.route.component || initialRoute.route.asyncComponent) && !isMasterRoute(initialRoute.route)) {\n    initialComponentData = {\n      component: initialRoute.route.component || initialRoute.route.asyncComponent,\n      initialComponent,\n      id: getComponentId(),\n      isAsync: !!initialRoute.route.asyncComponent,\n      props: {\n        f7route: initialRoute,\n        f7router: router,\n        ...routeProps,\n        ...initialRoute.params\n      }\n    };\n  }\n\n  return {\n    initialPage: initialComponentData,\n    initialRoute\n  };\n};","map":{"version":3,"names":["getComponentId","getRouterInitialComponent","router","initialComponent","initialComponentData","initialUrl","getInitialUrl","initialRoute","findMatchingRoute","routeProps","route","options","props","isMasterRoute","master","app","component","asyncComponent","id","isAsync","f7route","f7router","params","initialPage"],"sources":["C:/Users/Babak/userlogin/node_modules/framework7-react/shared/get-router-initial-component.js"],"sourcesContent":["import { getComponentId } from './utils.js';\nexport const getRouterInitialComponent = (router, initialComponent) => {\n  let initialComponentData;\n  const {\n    initialUrl\n  } = router.getInitialUrl();\n  const initialRoute = router.findMatchingRoute(initialUrl);\n  let routeProps = {};\n\n  if (initialRoute && initialRoute.route && initialRoute.route.options) {\n    routeProps = initialRoute.route.options.props;\n  }\n\n  const isMasterRoute = route => {\n    if (route.master === true) return true;\n    if (typeof route.master === 'function') return route.master(router.app);\n    return false;\n  };\n\n  if (initialRoute && initialRoute.route && (initialRoute.route.component || initialRoute.route.asyncComponent) && !isMasterRoute(initialRoute.route)) {\n    initialComponentData = {\n      component: initialRoute.route.component || initialRoute.route.asyncComponent,\n      initialComponent,\n      id: getComponentId(),\n      isAsync: !!initialRoute.route.asyncComponent,\n      props: {\n        f7route: initialRoute,\n        f7router: router,\n        ...routeProps,\n        ...initialRoute.params\n      }\n    };\n  }\n\n  return {\n    initialPage: initialComponentData,\n    initialRoute\n  };\n};"],"mappings":"AAAA,SAASA,cAAT,QAA+B,YAA/B;AACA,OAAO,MAAMC,yBAAyB,GAAG,CAACC,MAAD,EAASC,gBAAT,KAA8B;EACrE,IAAIC,oBAAJ;EACA,MAAM;IACJC;EADI,IAEFH,MAAM,CAACI,aAAP,EAFJ;EAGA,MAAMC,YAAY,GAAGL,MAAM,CAACM,iBAAP,CAAyBH,UAAzB,CAArB;EACA,IAAII,UAAU,GAAG,EAAjB;;EAEA,IAAIF,YAAY,IAAIA,YAAY,CAACG,KAA7B,IAAsCH,YAAY,CAACG,KAAb,CAAmBC,OAA7D,EAAsE;IACpEF,UAAU,GAAGF,YAAY,CAACG,KAAb,CAAmBC,OAAnB,CAA2BC,KAAxC;EACD;;EAED,MAAMC,aAAa,GAAGH,KAAK,IAAI;IAC7B,IAAIA,KAAK,CAACI,MAAN,KAAiB,IAArB,EAA2B,OAAO,IAAP;IAC3B,IAAI,OAAOJ,KAAK,CAACI,MAAb,KAAwB,UAA5B,EAAwC,OAAOJ,KAAK,CAACI,MAAN,CAAaZ,MAAM,CAACa,GAApB,CAAP;IACxC,OAAO,KAAP;EACD,CAJD;;EAMA,IAAIR,YAAY,IAAIA,YAAY,CAACG,KAA7B,KAAuCH,YAAY,CAACG,KAAb,CAAmBM,SAAnB,IAAgCT,YAAY,CAACG,KAAb,CAAmBO,cAA1F,KAA6G,CAACJ,aAAa,CAACN,YAAY,CAACG,KAAd,CAA/H,EAAqJ;IACnJN,oBAAoB,GAAG;MACrBY,SAAS,EAAET,YAAY,CAACG,KAAb,CAAmBM,SAAnB,IAAgCT,YAAY,CAACG,KAAb,CAAmBO,cADzC;MAErBd,gBAFqB;MAGrBe,EAAE,EAAElB,cAAc,EAHG;MAIrBmB,OAAO,EAAE,CAAC,CAACZ,YAAY,CAACG,KAAb,CAAmBO,cAJT;MAKrBL,KAAK,EAAE;QACLQ,OAAO,EAAEb,YADJ;QAELc,QAAQ,EAAEnB,MAFL;QAGL,GAAGO,UAHE;QAIL,GAAGF,YAAY,CAACe;MAJX;IALc,CAAvB;EAYD;;EAED,OAAO;IACLC,WAAW,EAAEnB,oBADR;IAELG;EAFK,CAAP;AAID,CArCM"},"metadata":{},"sourceType":"module"}