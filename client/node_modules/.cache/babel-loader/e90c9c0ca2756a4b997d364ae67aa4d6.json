{"ast":null,"code":"import { getWindow, getDocument } from 'ssr-window';\nimport { pathToRegexp, compile } from 'path-to-regexp';\nimport $ from '../../shared/dom7.js';\nimport Framework7Class from '../../shared/class.js';\nimport { extend, nextFrame, parseUrlQuery, serializeObject, now, eventNameToColonCase } from '../../shared/utils.js';\nimport History from '../../shared/history.js';\nimport SwipeBack from './swipe-back.js';\nimport { refreshPage, navigate } from './navigate.js';\nimport { tabLoad, tabRemove } from './tab.js';\nimport { modalLoad, modalRemove } from './modal.js';\nimport { back } from './back.js';\nimport { clearPreviousHistory } from './clear-previous-history.js';\nimport appRouterCheck from './app-router-check.js';\n\nclass Router extends Framework7Class {\n  constructor(app, view) {\n    super({}, [typeof view === 'undefined' ? app : view]);\n    const router = this; // Is App Router\n\n    router.isAppRouter = typeof view === 'undefined';\n\n    if (router.isAppRouter) {\n      // App Router\n      extend(false, router, {\n        app,\n        params: app.params.view,\n        routes: app.routes || [],\n        cache: app.cache\n      });\n    } else {\n      // View Router\n      extend(false, router, {\n        app,\n        view,\n        viewId: view.id,\n        id: view.params.routerId,\n        params: view.params,\n        routes: view.routes,\n        history: view.history,\n        scrollHistory: view.scrollHistory,\n        cache: app.cache,\n        dynamicNavbar: app.theme === 'ios' && view.params.iosDynamicNavbar,\n        initialPages: [],\n        initialNavbars: []\n      });\n    } // Install Modules\n\n\n    router.useModules(); // AllowPageChage\n\n    router.allowPageChange = true; // Current Route\n\n    let currentRoute = {};\n    let previousRoute = {};\n    Object.defineProperty(router, 'currentRoute', {\n      enumerable: true,\n      configurable: true,\n\n      set(newRoute) {\n        if (newRoute === void 0) {\n          newRoute = {};\n        }\n\n        previousRoute = extend({}, currentRoute);\n        currentRoute = newRoute;\n        if (!currentRoute) return;\n        router.url = currentRoute.url;\n        router.emit('routeChange', newRoute, previousRoute, router);\n      },\n\n      get() {\n        return currentRoute;\n      }\n\n    });\n    Object.defineProperty(router, 'previousRoute', {\n      enumerable: true,\n      configurable: true,\n\n      get() {\n        return previousRoute;\n      },\n\n      set(newRoute) {\n        previousRoute = newRoute;\n      }\n\n    });\n    return router;\n  }\n\n  mount() {\n    const router = this;\n    const view = router.view;\n    const document = getDocument();\n    extend(false, router, {\n      tempDom: document.createElement('div'),\n      $el: view.$el,\n      el: view.el,\n      $navbarsEl: view.$navbarsEl,\n      navbarsEl: view.navbarsEl\n    });\n    router.emit('local::mount routerMount', router);\n  }\n\n  animatableNavElements($newNavbarEl, $oldNavbarEl, toLarge, fromLarge, direction) {\n    const router = this;\n    const dynamicNavbar = router.dynamicNavbar;\n    const animateIcon = router.params.iosAnimateNavbarBackIcon;\n    let newNavEls;\n    let oldNavEls;\n\n    function animatableNavEl($el, $navbarInner) {\n      const isSliding = $el.hasClass('sliding') || $navbarInner.hasClass('sliding');\n      const isSubnavbar = $el.hasClass('subnavbar');\n      const needsOpacityTransition = isSliding ? !isSubnavbar : true;\n      const $iconEl = $el.find('.back .icon');\n      let isIconLabel;\n\n      if (isSliding && animateIcon && $el.hasClass('left') && $iconEl.length > 0 && $iconEl.next('span').length) {\n        $el = $iconEl.next('span'); // eslint-disable-line\n\n        isIconLabel = true;\n      }\n\n      return {\n        $el,\n        isIconLabel,\n        leftOffset: $el[0].f7NavbarLeftOffset,\n        rightOffset: $el[0].f7NavbarRightOffset,\n        isSliding,\n        isSubnavbar,\n        needsOpacityTransition\n      };\n    }\n\n    if (dynamicNavbar) {\n      newNavEls = [];\n      oldNavEls = [];\n      $newNavbarEl.children('.navbar-inner').children('.left, .right, .title, .subnavbar').each(navEl => {\n        const $navEl = $(navEl);\n        if ($navEl.hasClass('left') && fromLarge && direction === 'forward') return;\n        if ($navEl.hasClass('title') && toLarge) return;\n        newNavEls.push(animatableNavEl($navEl, $newNavbarEl.children('.navbar-inner')));\n      });\n\n      if (!($oldNavbarEl.hasClass('navbar-master') && router.params.masterDetailBreakpoint > 0 && router.app.width >= router.params.masterDetailBreakpoint)) {\n        $oldNavbarEl.children('.navbar-inner').children('.left, .right, .title, .subnavbar').each(navEl => {\n          const $navEl = $(navEl);\n          if ($navEl.hasClass('left') && toLarge && !fromLarge && direction === 'forward') return;\n          if ($navEl.hasClass('left') && toLarge && direction === 'backward') return;\n\n          if ($navEl.hasClass('title') && fromLarge) {\n            return;\n          }\n\n          oldNavEls.push(animatableNavEl($navEl, $oldNavbarEl.children('.navbar-inner')));\n        });\n      }\n\n      [oldNavEls, newNavEls].forEach(navEls => {\n        navEls.forEach(navEl => {\n          const n = navEl;\n          const {\n            isSliding,\n            $el\n          } = navEl;\n          const otherEls = navEls === oldNavEls ? newNavEls : oldNavEls;\n          if (!(isSliding && $el.hasClass('title') && otherEls)) return;\n          otherEls.forEach(otherNavEl => {\n            if (otherNavEl.isIconLabel) {\n              const iconTextEl = otherNavEl.$el[0];\n              n.leftOffset += iconTextEl ? iconTextEl.offsetLeft || 0 : 0;\n            }\n          });\n        });\n      });\n    }\n\n    return {\n      newNavEls,\n      oldNavEls\n    };\n  }\n\n  animate($oldPageEl, $newPageEl, $oldNavbarEl, $newNavbarEl, direction, transition, callback) {\n    const router = this;\n\n    if (router.params.animateCustom) {\n      router.params.animateCustom.apply(router, [$oldPageEl, $newPageEl, $oldNavbarEl, $newNavbarEl, direction, callback]);\n      return;\n    }\n\n    const dynamicNavbar = router.dynamicNavbar;\n    const ios = router.app.theme === 'ios';\n\n    if (transition) {\n      const routerCustomTransitionClass = `router-transition-custom router-transition-${transition}-${direction}`; // Animate\n\n      const onCustomTransitionDone = () => {\n        router.$el.removeClass(routerCustomTransitionClass);\n\n        if (dynamicNavbar && router.$navbarsEl.length) {\n          if ($newNavbarEl) {\n            router.$navbarsEl.prepend($newNavbarEl);\n          }\n\n          if ($oldNavbarEl) {\n            router.$navbarsEl.prepend($oldNavbarEl);\n          }\n        }\n\n        if (callback) callback();\n      };\n\n      (direction === 'forward' ? $newPageEl : $oldPageEl).animationEnd(onCustomTransitionDone);\n\n      if (dynamicNavbar) {\n        if ($newNavbarEl && $newPageEl) {\n          router.setNavbarPosition($newNavbarEl, '');\n          $newNavbarEl.removeClass('navbar-next navbar-previous navbar-current');\n          $newPageEl.prepend($newNavbarEl);\n        }\n\n        if ($oldNavbarEl && $oldPageEl) {\n          router.setNavbarPosition($oldNavbarEl, '');\n          $oldNavbarEl.removeClass('navbar-next navbar-previous navbar-current');\n          $oldPageEl.prepend($oldNavbarEl);\n        }\n      }\n\n      router.$el.addClass(routerCustomTransitionClass);\n      return;\n    } // Router Animation class\n\n\n    const routerTransitionClass = `router-transition-${direction} router-transition`;\n    let newNavEls;\n    let oldNavEls;\n    let fromLarge;\n    let toLarge;\n    let toDifferent;\n    let oldIsLarge;\n    let newIsLarge;\n\n    if (ios && dynamicNavbar) {\n      const betweenMasterAndDetail = router.params.masterDetailBreakpoint > 0 && router.app.width >= router.params.masterDetailBreakpoint && ($oldNavbarEl.hasClass('navbar-master') && $newNavbarEl.hasClass('navbar-master-detail') || $oldNavbarEl.hasClass('navbar-master-detail') && $newNavbarEl.hasClass('navbar-master'));\n\n      if (!betweenMasterAndDetail) {\n        oldIsLarge = $oldNavbarEl && $oldNavbarEl.hasClass('navbar-large');\n        newIsLarge = $newNavbarEl && $newNavbarEl.hasClass('navbar-large');\n        fromLarge = oldIsLarge && !$oldNavbarEl.hasClass('navbar-large-collapsed');\n        toLarge = newIsLarge && !$newNavbarEl.hasClass('navbar-large-collapsed');\n        toDifferent = fromLarge && !toLarge || toLarge && !fromLarge;\n      }\n\n      const navEls = router.animatableNavElements($newNavbarEl, $oldNavbarEl, toLarge, fromLarge, direction);\n      newNavEls = navEls.newNavEls;\n      oldNavEls = navEls.oldNavEls;\n    }\n\n    function animateNavbars(progress) {\n      if (!(ios && dynamicNavbar)) return;\n\n      if (progress === 1) {\n        if (toLarge) {\n          $newNavbarEl.addClass('router-navbar-transition-to-large');\n          $oldNavbarEl.addClass('router-navbar-transition-to-large');\n        }\n\n        if (fromLarge) {\n          $newNavbarEl.addClass('router-navbar-transition-from-large');\n          $oldNavbarEl.addClass('router-navbar-transition-from-large');\n        }\n      }\n\n      newNavEls.forEach(navEl => {\n        const $el = navEl.$el;\n        const offset = direction === 'forward' ? navEl.rightOffset : navEl.leftOffset;\n\n        if (navEl.isSliding) {\n          if (navEl.isSubnavbar && newIsLarge) {\n            // prettier-ignore\n            $el[0].style.setProperty('transform', `translate3d(${offset * (1 - progress)}px, calc(-1 * var(--f7-navbar-large-collapse-progress) * var(--f7-navbar-large-title-height)), 0)`, 'important');\n          } else {\n            $el.transform(`translate3d(${offset * (1 - progress)}px,0,0)`);\n          }\n        }\n      });\n      oldNavEls.forEach(navEl => {\n        const $el = navEl.$el;\n        const offset = direction === 'forward' ? navEl.leftOffset : navEl.rightOffset;\n\n        if (navEl.isSliding) {\n          if (navEl.isSubnavbar && oldIsLarge) {\n            $el.transform(`translate3d(${offset * progress}px, calc(-1 * var(--f7-navbar-large-collapse-progress) * var(--f7-navbar-large-title-height)), 0)`);\n          } else {\n            $el.transform(`translate3d(${offset * progress}px,0,0)`);\n          }\n        }\n      });\n    } // AnimationEnd Callback\n\n\n    function onDone() {\n      if (router.dynamicNavbar) {\n        if ($newNavbarEl) {\n          $newNavbarEl.removeClass('router-navbar-transition-to-large router-navbar-transition-from-large');\n          $newNavbarEl.addClass('navbar-no-title-large-transition');\n          nextFrame(() => {\n            $newNavbarEl.removeClass('navbar-no-title-large-transition');\n          });\n        }\n\n        if ($oldNavbarEl) {\n          $oldNavbarEl.removeClass('router-navbar-transition-to-large router-navbar-transition-from-large');\n        }\n\n        if ($newNavbarEl.hasClass('sliding') || $newNavbarEl.children('.navbar-inner.sliding').length) {\n          $newNavbarEl.find('.title, .left, .right, .left .icon, .subnavbar').transform('');\n        } else {\n          $newNavbarEl.find('.sliding').transform('');\n        }\n\n        if ($oldNavbarEl.hasClass('sliding') || $oldNavbarEl.children('.navbar-inner.sliding').length) {\n          $oldNavbarEl.find('.title, .left, .right, .left .icon, .subnavbar').transform('');\n        } else {\n          $oldNavbarEl.find('.sliding').transform('');\n        }\n      }\n\n      router.$el.removeClass(routerTransitionClass);\n      if (callback) callback();\n    }\n\n    (direction === 'forward' ? $newPageEl : $oldPageEl).animationEnd(() => {\n      onDone();\n    }); // Animate\n\n    if (dynamicNavbar) {\n      // Prepare Navbars\n      animateNavbars(0);\n      nextFrame(() => {\n        // Add class, start animation\n        router.$el.addClass(routerTransitionClass);\n\n        if (toDifferent) {\n          // eslint-disable-next-line\n          router.el._clientLeft = router.el.clientLeft;\n        }\n\n        animateNavbars(1);\n      });\n    } else {\n      // Add class, start animation\n      router.$el.addClass(routerTransitionClass);\n    }\n  }\n\n  removeModal(modalEl) {\n    const router = this;\n    router.removeEl(modalEl);\n  } // eslint-disable-next-line\n\n\n  removeTabContent(tabEl) {\n    const $tabEl = $(tabEl);\n    $tabEl.html('');\n  }\n\n  removeNavbar(el) {\n    const router = this;\n    router.removeEl(el);\n  }\n\n  removePage(el) {\n    const $el = $(el);\n    const f7Page = $el && $el[0] && $el[0].f7Page;\n    const router = this;\n\n    if (f7Page && f7Page.route && f7Page.route.route && f7Page.route.route.keepAlive) {\n      $el.remove();\n      return;\n    }\n\n    router.removeEl(el);\n  }\n\n  removeEl(el) {\n    if (!el) return;\n    const router = this;\n    const $el = $(el);\n    if ($el.length === 0) return;\n    $el.find('.tab').each(tabEl => {\n      $(tabEl).children().each(tabChild => {\n        if (tabChild.f7Component) {\n          $(tabChild).trigger('tab:beforeremove');\n          tabChild.f7Component.destroy();\n        }\n      });\n    });\n\n    if ($el[0].f7Component && $el[0].f7Component.destroy) {\n      $el[0].f7Component.destroy();\n    }\n\n    if (!router.params.removeElements) {\n      return;\n    }\n\n    if (router.params.removeElementsWithTimeout) {\n      setTimeout(() => {\n        $el.remove();\n      }, router.params.removeElementsTimeout);\n    } else {\n      $el.remove();\n    }\n  }\n\n  getPageEl(content) {\n    const router = this;\n\n    if (typeof content === 'string') {\n      router.tempDom.innerHTML = content;\n    } else {\n      if ($(content).hasClass('page')) {\n        return content;\n      }\n\n      router.tempDom.innerHTML = '';\n      $(router.tempDom).append(content);\n    }\n\n    return router.findElement('.page', router.tempDom);\n  }\n\n  findElement(stringSelector, container, notStacked) {\n    const router = this;\n    const view = router.view;\n    const app = router.app; // Modals Selector\n\n    const modalsSelector = '.popup, .dialog, .popover, .actions-modal, .sheet-modal, .login-screen, .page';\n    const $container = $(container);\n    let selector = stringSelector;\n    if (notStacked) selector += ':not(.stacked)';\n    let found = $container.find(selector).filter(el => $(el).parents(modalsSelector).length === 0);\n\n    if (found.length > 1) {\n      if (typeof view.selector === 'string') {\n        // Search in related view\n        found = $container.find(`${view.selector} ${selector}`);\n      }\n\n      if (found.length > 1) {\n        // Search in main view\n        found = $container.find(`.${app.params.viewMainClass} ${selector}`);\n      }\n    }\n\n    if (found.length === 1) return found; // Try to find not stacked\n\n    if (!notStacked) found = router.findElement(selector, $container, true);\n    if (found && found.length === 1) return found;\n    if (found && found.length > 1) return $(found[0]);\n    return undefined;\n  }\n\n  flattenRoutes(routes) {\n    if (routes === void 0) {\n      routes = this.routes;\n    }\n\n    const router = this;\n    let flattenedRoutes = [];\n    routes.forEach(route => {\n      let hasTabRoutes = false;\n\n      if ('tabs' in route && route.tabs) {\n        const mergedPathsRoutes = route.tabs.map(tabRoute => {\n          const tRoute = extend({}, route, {\n            path: `${route.path}/${tabRoute.path}`.replace('///', '/').replace('//', '/'),\n            parentPath: route.path,\n            tab: tabRoute\n          });\n          delete tRoute.tabs;\n          delete tRoute.routes;\n          return tRoute;\n        });\n        hasTabRoutes = true;\n        flattenedRoutes = flattenedRoutes.concat(router.flattenRoutes(mergedPathsRoutes));\n      }\n\n      if ('detailRoutes' in route) {\n        const mergedPathsRoutes = route.detailRoutes.map(detailRoute => {\n          const dRoute = extend({}, detailRoute);\n          dRoute.masterRoute = route;\n          dRoute.masterRoutePath = route.path;\n          return dRoute;\n        });\n        flattenedRoutes = flattenedRoutes.concat(route, router.flattenRoutes(mergedPathsRoutes));\n      }\n\n      if ('routes' in route) {\n        const mergedPathsRoutes = route.routes.map(childRoute => {\n          const cRoute = extend({}, childRoute);\n          cRoute.path = `${route.path}/${cRoute.path}`.replace('///', '/').replace('//', '/');\n          return cRoute;\n        });\n\n        if (hasTabRoutes) {\n          flattenedRoutes = flattenedRoutes.concat(router.flattenRoutes(mergedPathsRoutes));\n        } else {\n          flattenedRoutes = flattenedRoutes.concat(route, router.flattenRoutes(mergedPathsRoutes));\n        }\n      }\n\n      if (!('routes' in route) && !('tabs' in route && route.tabs) && !('detailRoutes' in route)) {\n        flattenedRoutes.push(route);\n      }\n    });\n    return flattenedRoutes;\n  } // eslint-disable-next-line\n\n\n  parseRouteUrl(url) {\n    if (!url) return {};\n    const query = parseUrlQuery(url);\n    const hash = url.split('#')[1];\n    const params = {};\n    const path = url.split('#')[0].split('?')[0];\n    return {\n      query,\n      hash,\n      params,\n      url,\n      path\n    };\n  }\n\n  generateUrl(parameters) {\n    if (parameters === void 0) {\n      parameters = {};\n    }\n\n    if (typeof parameters === 'string') {\n      return parameters;\n    }\n\n    const {\n      name,\n      path,\n      params,\n      query\n    } = parameters;\n\n    if (!name && !path) {\n      throw new Error('Framework7: \"name\" or \"path\" parameter is required');\n    }\n\n    const router = this;\n    const route = name ? router.findRouteByKey('name', name) : router.findRouteByKey('path', path);\n\n    if (!route) {\n      if (name) {\n        throw new Error(`Framework7: route with name \"${name}\" not found`);\n      } else {\n        throw new Error(`Framework7: route with path \"${path}\" not found`);\n      }\n    }\n\n    const url = router.constructRouteUrl(route, {\n      params,\n      query\n    });\n\n    if (!url) {\n      throw new Error(`Framework7: can't construct URL for route with name \"${name}\"`);\n    }\n\n    return url;\n  } // eslint-disable-next-line\n\n\n  constructRouteUrl(route, _temp) {\n    let {\n      params,\n      query\n    } = _temp === void 0 ? {} : _temp;\n    const {\n      path\n    } = route;\n    const toUrl = compile(path);\n    let url;\n\n    try {\n      url = toUrl(params || {});\n    } catch (error) {\n      throw new Error(`Framework7: error constructing route URL from passed params:\\nRoute: ${path}\\n${error.toString()}`);\n    }\n\n    if (query) {\n      if (typeof query === 'string') url += `?${query}`;else if (Object.keys(query).length) url += `?${serializeObject(query)}`;\n    }\n\n    return url;\n  }\n\n  findTabRouteUrl(tabEl) {\n    const router = this;\n    const $tabEl = $(tabEl);\n    const parentPath = router.currentRoute.route.parentPath;\n    const tabId = $tabEl.attr('id');\n    const flattenedRoutes = router.flattenRoutes(router.routes);\n    let foundTabRouteUrl;\n    flattenedRoutes.forEach(route => {\n      if (route.parentPath === parentPath && route.tab && route.tab.id === tabId) {\n        if (router.currentRoute.params && Object.keys(router.currentRoute.params).length > 0) {\n          foundTabRouteUrl = router.constructRouteUrl(route, {\n            params: router.currentRoute.params,\n            query: router.currentRoute.query\n          });\n        } else {\n          foundTabRouteUrl = route.path;\n        }\n      }\n    });\n    return foundTabRouteUrl;\n  }\n\n  findRouteByKey(key, value) {\n    const router = this;\n    const routes = router.routes;\n    const flattenedRoutes = router.flattenRoutes(routes);\n    let matchingRoute;\n    flattenedRoutes.forEach(route => {\n      if (matchingRoute) return;\n\n      if (route[key] === value) {\n        matchingRoute = route;\n      }\n    });\n    return matchingRoute;\n  }\n\n  findMatchingRoute(url) {\n    if (!url) return undefined;\n    const router = this;\n    const routes = router.routes;\n    const flattenedRoutes = router.flattenRoutes(routes);\n    const {\n      path,\n      query,\n      hash,\n      params\n    } = router.parseRouteUrl(url);\n    let matchingRoute;\n    flattenedRoutes.forEach(route => {\n      if (matchingRoute) return;\n      const keys = [];\n      const pathsToMatch = [route.path];\n\n      if (route.alias) {\n        if (typeof route.alias === 'string') pathsToMatch.push(route.alias);else if (Array.isArray(route.alias)) {\n          route.alias.forEach(aliasPath => {\n            pathsToMatch.push(aliasPath);\n          });\n        }\n      }\n\n      let matched;\n      pathsToMatch.forEach(pathToMatch => {\n        if (matched) return;\n        matched = pathToRegexp(pathToMatch, keys).exec(path);\n      });\n\n      if (matched) {\n        keys.forEach((keyObj, index) => {\n          if (typeof keyObj.name === 'number') return;\n          const paramValue = matched[index + 1];\n\n          if (typeof paramValue === 'undefined' || paramValue === null) {\n            params[keyObj.name] = paramValue;\n          } else {\n            params[keyObj.name] = decodeURIComponent(paramValue);\n          }\n        });\n        let parentPath;\n\n        if (route.parentPath) {\n          parentPath = path.split('/').slice(0, route.parentPath.split('/').length - 1).join('/');\n        }\n\n        matchingRoute = {\n          query,\n          hash,\n          params,\n          url,\n          path,\n          parentPath,\n          route,\n          name: route.name\n        };\n      }\n    });\n    return matchingRoute;\n  } // eslint-disable-next-line\n\n\n  replaceRequestUrlParams(url, options) {\n    if (url === void 0) {\n      url = '';\n    }\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    let compiledUrl = url;\n\n    if (typeof compiledUrl === 'string' && compiledUrl.indexOf('{{') >= 0 && options && options.route && options.route.params && Object.keys(options.route.params).length) {\n      Object.keys(options.route.params).forEach(paramName => {\n        const regExp = new RegExp(`{{${paramName}}}`, 'g');\n        compiledUrl = compiledUrl.replace(regExp, options.route.params[paramName] || '');\n      });\n    }\n\n    return compiledUrl;\n  }\n\n  removeFromXhrCache(url) {\n    const router = this;\n    const xhrCache = router.cache.xhr;\n    let index = false;\n\n    for (let i = 0; i < xhrCache.length; i += 1) {\n      if (xhrCache[i].url === url) index = i;\n    }\n\n    if (index !== false) xhrCache.splice(index, 1);\n  }\n\n  xhrRequest(requestUrl, options) {\n    const router = this;\n    const params = router.params;\n    const {\n      ignoreCache\n    } = options;\n    let url = requestUrl;\n    let hasQuery = url.indexOf('?') >= 0;\n\n    if (params.passRouteQueryToRequest && options && options.route && options.route.query && Object.keys(options.route.query).length) {\n      url += `${hasQuery ? '&' : '?'}${serializeObject(options.route.query)}`;\n      hasQuery = true;\n    }\n\n    if (params.passRouteParamsToRequest && options && options.route && options.route.params && Object.keys(options.route.params).length) {\n      url += `${hasQuery ? '&' : '?'}${serializeObject(options.route.params)}`;\n      hasQuery = true;\n    }\n\n    if (url.indexOf('{{') >= 0) {\n      url = router.replaceRequestUrlParams(url, options);\n    } // should we ignore get params or not\n\n\n    if (params.xhrCacheIgnoreGetParameters && url.indexOf('?') >= 0) {\n      url = url.split('?')[0];\n    }\n\n    return new Promise((resolve, reject) => {\n      if (params.xhrCache && !ignoreCache && url.indexOf('nocache') < 0 && params.xhrCacheIgnore.indexOf(url) < 0) {\n        for (let i = 0; i < router.cache.xhr.length; i += 1) {\n          const cachedUrl = router.cache.xhr[i];\n\n          if (cachedUrl.url === url) {\n            // Check expiration\n            if (now() - cachedUrl.time < params.xhrCacheDuration) {\n              // Load from cache\n              resolve(cachedUrl.content);\n              return;\n            }\n          }\n        }\n      }\n\n      router.xhrAbortController = router.app.request.abortController();\n      router.app.request({\n        abortController: router.xhrAbortController,\n        url,\n        method: 'GET',\n\n        beforeSend(xhr) {\n          router.emit('routerAjaxStart', xhr, options);\n        },\n\n        complete(xhr, status) {\n          router.emit('routerAjaxComplete', xhr);\n\n          if (status !== 'error' && status !== 'timeout' && xhr.status >= 200 && xhr.status < 300 || xhr.status === 0) {\n            if (params.xhrCache && xhr.responseText !== '') {\n              router.removeFromXhrCache(url);\n              router.cache.xhr.push({\n                url,\n                time: now(),\n                content: xhr.responseText\n              });\n            }\n\n            router.emit('routerAjaxSuccess', xhr, options);\n            resolve(xhr.responseText);\n          } else {\n            router.emit('routerAjaxError', xhr, options);\n            reject(xhr);\n          }\n        },\n\n        error(xhr) {\n          router.emit('routerAjaxError', xhr, options);\n          reject(xhr);\n        }\n\n      });\n    });\n  }\n\n  setNavbarPosition($el, position, ariaHidden) {\n    const router = this;\n    $el.removeClass('navbar-previous navbar-current navbar-next');\n\n    if (position) {\n      $el.addClass(`navbar-${position}`);\n    }\n\n    if (ariaHidden === false) {\n      $el.removeAttr('aria-hidden');\n    } else if (ariaHidden === true) {\n      $el.attr('aria-hidden', 'true');\n    }\n\n    $el.trigger('navbar:position', {\n      position\n    });\n    router.emit('navbarPosition', $el[0], position);\n  }\n\n  setPagePosition($el, position, ariaHidden) {\n    const router = this;\n    $el.removeClass('page-previous page-current page-next');\n    $el.addClass(`page-${position}`);\n\n    if (ariaHidden === false) {\n      $el.removeAttr('aria-hidden');\n    } else if (ariaHidden === true) {\n      $el.attr('aria-hidden', 'true');\n    }\n\n    $el.trigger('page:position', {\n      position\n    });\n    router.emit('pagePosition', $el[0], position);\n  } // Remove theme elements\n\n\n  removeThemeElements(el) {\n    const router = this;\n    const theme = router.app.theme;\n    let toRemove;\n\n    if (theme === 'ios') {\n      toRemove = '.md-only, .aurora-only, .if-md, .if-aurora, .if-not-ios, .not-ios';\n    } else if (theme === 'md') {\n      toRemove = '.ios-only, .aurora-only, .if-ios, .if-aurora, .if-not-md, .not-md';\n    } else if (theme === 'aurora') {\n      toRemove = '.ios-only, .md-only, .if-ios, .if-md, .if-not-aurora, .not-aurora';\n    }\n\n    $(el).find(toRemove).remove();\n  }\n\n  getPageData(pageEl, navbarEl, from, to, route, pageFromEl) {\n    if (route === void 0) {\n      route = {};\n    }\n\n    const router = this;\n    const $pageEl = $(pageEl).eq(0);\n    const $navbarEl = $(navbarEl).eq(0);\n    const currentPage = $pageEl[0].f7Page || {};\n    let direction;\n    let pageFrom;\n    if (from === 'next' && to === 'current' || from === 'current' && to === 'previous') direction = 'forward';\n    if (from === 'current' && to === 'next' || from === 'previous' && to === 'current') direction = 'backward';\n\n    if (currentPage && !currentPage.fromPage) {\n      const $pageFromEl = $(pageFromEl);\n\n      if ($pageFromEl.length) {\n        pageFrom = $pageFromEl[0].f7Page;\n      }\n    }\n\n    pageFrom = currentPage.pageFrom || pageFrom;\n\n    if (pageFrom && pageFrom.pageFrom) {\n      pageFrom.pageFrom = null;\n    }\n\n    const page = {\n      app: router.app,\n      view: router.view,\n      router,\n      $el: $pageEl,\n      el: $pageEl[0],\n      $pageEl,\n      pageEl: $pageEl[0],\n      $navbarEl,\n      navbarEl: $navbarEl[0],\n      name: $pageEl.attr('data-name'),\n      position: from,\n      from,\n      to,\n      direction,\n      route: currentPage.route ? currentPage.route : route,\n      pageFrom\n    };\n    $pageEl[0].f7Page = page;\n    return page;\n  } // Callbacks\n\n\n  pageCallback(callback, pageEl, navbarEl, from, to, options, pageFromEl) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (!pageEl) return;\n    const router = this;\n    const $pageEl = $(pageEl);\n    if (!$pageEl.length) return;\n    const $navbarEl = $(navbarEl);\n    const {\n      route\n    } = options;\n    const restoreScrollTopOnBack = router.params.restoreScrollTopOnBack && !(router.params.masterDetailBreakpoint > 0 && $pageEl.hasClass('page-master') && router.app.width >= router.params.masterDetailBreakpoint);\n    const keepAlive = $pageEl[0].f7Page && $pageEl[0].f7Page.route && $pageEl[0].f7Page.route.route && $pageEl[0].f7Page.route.route.keepAlive;\n\n    if (callback === 'beforeRemove' && keepAlive) {\n      callback = 'beforeUnmount'; // eslint-disable-line\n    }\n\n    const camelName = `page${callback[0].toUpperCase() + callback.slice(1, callback.length)}`;\n    const colonName = `page:${callback.toLowerCase()}`;\n    let page = {};\n\n    if (callback === 'beforeRemove' && $pageEl[0].f7Page) {\n      page = extend($pageEl[0].f7Page, {\n        from,\n        to,\n        position: from\n      });\n    } else {\n      page = router.getPageData($pageEl[0], $navbarEl[0], from, to, route, pageFromEl);\n    }\n\n    page.swipeBack = !!options.swipeBack;\n    const {\n      on = {},\n      once = {}\n    } = options.route ? options.route.route : {};\n\n    if (options.on) {\n      extend(on, options.on);\n    }\n\n    if (options.once) {\n      extend(once, options.once);\n    }\n\n    function attachEvents() {\n      if ($pageEl[0].f7RouteEventsAttached) return;\n      $pageEl[0].f7RouteEventsAttached = true;\n\n      if (on && Object.keys(on).length > 0) {\n        $pageEl[0].f7RouteEventsOn = on;\n        Object.keys(on).forEach(eventName => {\n          on[eventName] = on[eventName].bind(router);\n          $pageEl.on(eventNameToColonCase(eventName), on[eventName]);\n        });\n      }\n\n      if (once && Object.keys(once).length > 0) {\n        $pageEl[0].f7RouteEventsOnce = once;\n        Object.keys(once).forEach(eventName => {\n          once[eventName] = once[eventName].bind(router);\n          $pageEl.once(eventNameToColonCase(eventName), once[eventName]);\n        });\n      }\n    }\n\n    function detachEvents() {\n      if (!$pageEl[0].f7RouteEventsAttached) return;\n\n      if ($pageEl[0].f7RouteEventsOn) {\n        Object.keys($pageEl[0].f7RouteEventsOn).forEach(eventName => {\n          $pageEl.off(eventNameToColonCase(eventName), $pageEl[0].f7RouteEventsOn[eventName]);\n        });\n      }\n\n      if ($pageEl[0].f7RouteEventsOnce) {\n        Object.keys($pageEl[0].f7RouteEventsOnce).forEach(eventName => {\n          $pageEl.off(eventNameToColonCase(eventName), $pageEl[0].f7RouteEventsOnce[eventName]);\n        });\n      }\n\n      $pageEl[0].f7RouteEventsAttached = null;\n      $pageEl[0].f7RouteEventsOn = null;\n      $pageEl[0].f7RouteEventsOnce = null;\n      delete $pageEl[0].f7RouteEventsAttached;\n      delete $pageEl[0].f7RouteEventsOn;\n      delete $pageEl[0].f7RouteEventsOnce;\n    }\n\n    if (callback === 'mounted') {\n      attachEvents();\n    }\n\n    if (callback === 'init') {\n      if (restoreScrollTopOnBack && (from === 'previous' || !from) && to === 'current' && router.scrollHistory[page.route.url] && !$pageEl.hasClass('no-restore-scroll')) {\n        let $pageContent = $pageEl.find('.page-content');\n\n        if ($pageContent.length > 0) {\n          // eslint-disable-next-line\n          $pageContent = $pageContent.filter(pageContentEl => {\n            return $(pageContentEl).parents('.tab:not(.tab-active)').length === 0 && !$(pageContentEl).is('.tab:not(.tab-active)');\n          });\n        }\n\n        $pageContent.scrollTop(router.scrollHistory[page.route.url]);\n      }\n\n      attachEvents();\n\n      if ($pageEl[0].f7PageInitialized) {\n        $pageEl.trigger('page:reinit', page);\n        router.emit('pageReinit', page);\n        return;\n      }\n\n      $pageEl[0].f7PageInitialized = true;\n    }\n\n    if (restoreScrollTopOnBack && callback === 'beforeOut' && from === 'current' && to === 'previous') {\n      // Save scroll position\n      let $pageContent = $pageEl.find('.page-content');\n\n      if ($pageContent.length > 0) {\n        // eslint-disable-next-line\n        $pageContent = $pageContent.filter(pageContentEl => {\n          return $(pageContentEl).parents('.tab:not(.tab-active)').length === 0 && !$(pageContentEl).is('.tab:not(.tab-active)');\n        });\n      }\n\n      router.scrollHistory[page.route.url] = $pageContent.scrollTop();\n    }\n\n    if (restoreScrollTopOnBack && callback === 'beforeOut' && from === 'current' && to === 'next') {\n      // Delete scroll position\n      delete router.scrollHistory[page.route.url];\n    }\n\n    $pageEl.trigger(colonName, page);\n    router.emit(camelName, page);\n\n    if (callback === 'beforeRemove' || callback === 'beforeUnmount') {\n      detachEvents();\n\n      if (!keepAlive) {\n        if ($pageEl[0].f7Page && $pageEl[0].f7Page.navbarEl) {\n          delete $pageEl[0].f7Page.navbarEl.f7Page;\n        }\n\n        $pageEl[0].f7Page = null;\n      }\n    }\n  }\n\n  saveHistory() {\n    const router = this;\n    const window = getWindow();\n    router.view.history = router.history;\n\n    if (router.params.browserHistory && router.params.browserHistoryStoreHistory && window.localStorage) {\n      window.localStorage[`f7router-${router.view.id}-history`] = JSON.stringify(router.history);\n    }\n  }\n\n  restoreHistory() {\n    const router = this;\n    const window = getWindow();\n\n    if (router.params.browserHistory && router.params.browserHistoryStoreHistory && window.localStorage && window.localStorage[`f7router-${router.view.id}-history`]) {\n      router.history = JSON.parse(window.localStorage[`f7router-${router.view.id}-history`]);\n      router.view.history = router.history;\n    }\n  }\n\n  clearHistory() {\n    const router = this;\n    router.history = [];\n    if (router.view) router.view.history = [];\n    router.saveHistory();\n  }\n\n  updateCurrentUrl(newUrl) {\n    const router = this;\n    appRouterCheck(router, 'updateCurrentUrl'); // Update history\n\n    if (router.history.length) {\n      router.history[router.history.length - 1] = newUrl;\n    } else {\n      router.history.push(newUrl);\n    } // Update current route params\n\n\n    const {\n      query,\n      hash,\n      params,\n      url,\n      path\n    } = router.parseRouteUrl(newUrl);\n\n    if (router.currentRoute) {\n      extend(router.currentRoute, {\n        query,\n        hash,\n        params,\n        url,\n        path\n      });\n    }\n\n    if (router.params.browserHistory) {\n      const browserHistoryRoot = router.params.browserHistoryRoot || '';\n      History.replace(router.view.id, {\n        url: newUrl\n      }, browserHistoryRoot + router.params.browserHistorySeparator + newUrl);\n    } // Save History\n\n\n    router.saveHistory();\n    router.emit('routeUrlUpdate', router.currentRoute, router);\n  }\n\n  getInitialUrl() {\n    const router = this;\n\n    if (router.initialUrl) {\n      return {\n        initialUrl: router.initialUrl,\n        historyRestored: router.historyRestored\n      };\n    }\n\n    const {\n      app,\n      view\n    } = router;\n    const document = getDocument();\n    const window = getWindow();\n    const location = app.params.url && typeof app.params.url === 'string' && typeof URL !== 'undefined' ? new URL(app.params.url) : document.location;\n    let initialUrl = router.params.url;\n    let documentUrl = location.href.split(location.origin)[1];\n    let historyRestored;\n    const {\n      browserHistory,\n      browserHistoryOnLoad,\n      browserHistorySeparator\n    } = router.params;\n    let {\n      browserHistoryRoot\n    } = router.params;\n\n    if ((window.cordova || window.Capacitor && window.Capacitor.isNative) && browserHistory && !browserHistorySeparator && !browserHistoryRoot && location.pathname.indexOf('index.html')) {\n      // eslint-disable-next-line\n      console.warn('Framework7: wrong or not complete browserHistory configuration, trying to guess browserHistoryRoot');\n      browserHistoryRoot = location.pathname.split('index.html')[0];\n    }\n\n    if (!browserHistory || !browserHistoryOnLoad) {\n      if (!initialUrl) {\n        initialUrl = documentUrl;\n      }\n\n      if (location.search && initialUrl.indexOf('?') < 0) {\n        initialUrl += location.search;\n      }\n\n      if (location.hash && initialUrl.indexOf('#') < 0) {\n        initialUrl += location.hash;\n      }\n    } else {\n      if (browserHistoryRoot && documentUrl.indexOf(browserHistoryRoot) >= 0) {\n        documentUrl = documentUrl.split(browserHistoryRoot)[1];\n        if (documentUrl === '') documentUrl = '/';\n      }\n\n      if (browserHistorySeparator.length > 0 && documentUrl.indexOf(browserHistorySeparator) >= 0) {\n        initialUrl = documentUrl.split(browserHistorySeparator)[1];\n      } else {\n        initialUrl = documentUrl;\n      }\n\n      router.restoreHistory();\n\n      if (router.history.indexOf(initialUrl) >= 0) {\n        router.history = router.history.slice(0, router.history.indexOf(initialUrl) + 1);\n      } else if (router.params.url === initialUrl) {\n        router.history = [initialUrl];\n      } else if (History.state && History.state[view.id] && History.state[view.id].url === router.history[router.history.length - 1]) {\n        initialUrl = router.history[router.history.length - 1];\n      } else {\n        router.history = [documentUrl.split(browserHistorySeparator)[0] || '/', initialUrl];\n      }\n\n      if (router.history.length > 1) {\n        historyRestored = true;\n      } else {\n        router.history = [];\n      }\n\n      router.saveHistory();\n    }\n\n    router.initialUrl = initialUrl;\n    router.historyRestored = historyRestored;\n    return {\n      initialUrl,\n      historyRestored\n    };\n  }\n\n  init() {\n    const router = this;\n    const {\n      app,\n      view\n    } = router;\n    const document = getDocument();\n    router.mount();\n    const {\n      initialUrl,\n      historyRestored\n    } = router.getInitialUrl(); // Init Swipeback\n\n    if (view && router.params.iosSwipeBack && app.theme === 'ios' || view && router.params.mdSwipeBack && app.theme === 'md' || view && router.params.auroraSwipeBack && app.theme === 'aurora') {\n      SwipeBack(router);\n    }\n\n    const {\n      browserHistory,\n      browserHistoryOnLoad,\n      browserHistoryAnimateOnLoad,\n      browserHistoryInitialMatch\n    } = router.params;\n    let currentRoute;\n\n    if (router.history.length > 1) {\n      // Will load page\n      const initUrl = browserHistoryInitialMatch ? initialUrl : router.history[0];\n      currentRoute = router.findMatchingRoute(initUrl);\n\n      if (!currentRoute) {\n        currentRoute = extend(router.parseRouteUrl(initUrl), {\n          route: {\n            url: initUrl,\n            path: initUrl.split('?')[0]\n          }\n        });\n      }\n    } else {\n      // Don't load page\n      currentRoute = router.findMatchingRoute(initialUrl);\n\n      if (!currentRoute) {\n        currentRoute = extend(router.parseRouteUrl(initialUrl), {\n          route: {\n            url: initialUrl,\n            path: initialUrl.split('?')[0]\n          }\n        });\n      }\n    }\n\n    if (router.params.stackPages) {\n      router.$el.children('.page').each(pageEl => {\n        const $pageEl = $(pageEl);\n        router.initialPages.push($pageEl[0]);\n\n        if (router.dynamicNavbar && $pageEl.children('.navbar').length > 0) {\n          router.initialNavbars.push($pageEl.children('.navbar')[0]);\n        }\n      });\n    }\n\n    if (router.$el.children('.page:not(.stacked)').length === 0 && initialUrl && router.params.loadInitialPage) {\n      // No pages presented in DOM, reload new page\n      router.navigate(initialUrl, {\n        initial: true,\n        reloadCurrent: true,\n        browserHistory: false,\n        animate: false,\n        once: {\n          modalOpen() {\n            if (!historyRestored) return;\n            const preloadPreviousPage = router.params.preloadPreviousPage || router.params[`${app.theme}SwipeBack`];\n\n            if (preloadPreviousPage && router.history.length > 1) {\n              router.back({\n                preload: true\n              });\n            }\n          },\n\n          pageAfterIn() {\n            if (!historyRestored) return;\n            const preloadPreviousPage = router.params.preloadPreviousPage || router.params[`${app.theme}SwipeBack`];\n\n            if (preloadPreviousPage && router.history.length > 1) {\n              router.back({\n                preload: true\n              });\n            }\n          }\n\n        }\n      });\n    } else if (router.$el.children('.page:not(.stacked)').length) {\n      // Init current DOM page\n      let hasTabRoute;\n      router.currentRoute = currentRoute;\n      router.$el.children('.page:not(.stacked)').each(pageEl => {\n        const $pageEl = $(pageEl);\n        let $navbarEl;\n        router.setPagePosition($pageEl, 'current');\n\n        if (router.dynamicNavbar) {\n          $navbarEl = $pageEl.children('.navbar');\n\n          if ($navbarEl.length > 0) {\n            if (!router.$navbarsEl.parents(document).length) {\n              router.$el.prepend(router.$navbarsEl);\n            }\n\n            router.setNavbarPosition($navbarEl, 'current');\n            router.$navbarsEl.append($navbarEl);\n\n            if ($navbarEl.children('.title-large').length) {\n              $navbarEl.addClass('navbar-large');\n            }\n\n            $pageEl.children('.navbar').remove();\n          } else {\n            router.$navbarsEl.addClass('navbar-hidden');\n\n            if ($navbarEl.children('.title-large').length) {\n              router.$navbarsEl.addClass('navbar-hidden navbar-large-hidden');\n            }\n          }\n        }\n\n        if (router.currentRoute && router.currentRoute.route && (router.currentRoute.route.master === true || typeof router.currentRoute.route.master === 'function' && router.currentRoute.route.master(app, router)) && router.params.masterDetailBreakpoint > 0) {\n          $pageEl.addClass('page-master');\n          $pageEl.trigger('page:role', {\n            role: 'master'\n          });\n\n          if ($navbarEl && $navbarEl.length) {\n            $navbarEl.addClass('navbar-master');\n          }\n\n          view.checkMasterDetailBreakpoint();\n        }\n\n        const initOptions = {\n          route: router.currentRoute\n        };\n\n        if (router.currentRoute && router.currentRoute.route && router.currentRoute.route.options) {\n          extend(initOptions, router.currentRoute.route.options);\n        }\n\n        router.currentPageEl = $pageEl[0];\n\n        if (router.dynamicNavbar && $navbarEl.length) {\n          router.currentNavbarEl = $navbarEl[0];\n        }\n\n        router.removeThemeElements($pageEl);\n\n        if (router.dynamicNavbar && $navbarEl.length) {\n          router.removeThemeElements($navbarEl);\n        }\n\n        if (initOptions.route.route.tab) {\n          hasTabRoute = true;\n          router.tabLoad(initOptions.route.route.tab, extend({}, initOptions));\n        }\n\n        router.pageCallback('init', $pageEl, $navbarEl, 'current', undefined, initOptions);\n        router.pageCallback('beforeIn', $pageEl, $navbarEl, 'current', undefined, initOptions);\n        router.pageCallback('afterIn', $pageEl, $navbarEl, 'current', undefined, initOptions);\n      });\n\n      if (historyRestored) {\n        if (browserHistoryInitialMatch) {\n          const preloadPreviousPage = router.params.preloadPreviousPage || router.params[`${app.theme}SwipeBack`];\n\n          if (preloadPreviousPage && router.history.length > 1) {\n            router.back({\n              preload: true\n            });\n          }\n        } else {\n          router.navigate(initialUrl, {\n            initial: true,\n            browserHistory: false,\n            history: false,\n            animate: browserHistoryAnimateOnLoad,\n            once: {\n              pageAfterIn() {\n                const preloadPreviousPage = router.params.preloadPreviousPage || router.params[`${app.theme}SwipeBack`];\n\n                if (preloadPreviousPage && router.history.length > 2) {\n                  router.back({\n                    preload: true\n                  });\n                }\n              }\n\n            }\n          });\n        }\n      }\n\n      if (!historyRestored && !hasTabRoute) {\n        router.history.push(initialUrl);\n        router.saveHistory();\n      }\n    }\n\n    if (initialUrl && browserHistory && browserHistoryOnLoad && (!History.state || !History.state[view.id])) {\n      History.initViewState(view.id, {\n        url: initialUrl\n      });\n    }\n\n    router.emit('local::init routerInit', router);\n  }\n\n  destroy() {\n    let router = this;\n    router.emit('local::destroy routerDestroy', router); // Delete props & methods\n\n    Object.keys(router).forEach(routerProp => {\n      router[routerProp] = null;\n      delete router[routerProp];\n    });\n    router = null;\n  }\n\n} // Load\n\n\nRouter.prototype.navigate = navigate;\nRouter.prototype.refreshPage = refreshPage; // Tab\n\nRouter.prototype.tabLoad = tabLoad;\nRouter.prototype.tabRemove = tabRemove; // Modal\n\nRouter.prototype.modalLoad = modalLoad;\nRouter.prototype.modalRemove = modalRemove; // Back\n\nRouter.prototype.back = back; // Clear history\n\nRouter.prototype.clearPreviousHistory = clearPreviousHistory;\nexport default Router;","map":{"version":3,"names":["getWindow","getDocument","pathToRegexp","compile","$","Framework7Class","extend","nextFrame","parseUrlQuery","serializeObject","now","eventNameToColonCase","History","SwipeBack","refreshPage","navigate","tabLoad","tabRemove","modalLoad","modalRemove","back","clearPreviousHistory","appRouterCheck","Router","constructor","app","view","router","isAppRouter","params","routes","cache","viewId","id","routerId","history","scrollHistory","dynamicNavbar","theme","iosDynamicNavbar","initialPages","initialNavbars","useModules","allowPageChange","currentRoute","previousRoute","Object","defineProperty","enumerable","configurable","set","newRoute","url","emit","get","mount","document","tempDom","createElement","$el","el","$navbarsEl","navbarsEl","animatableNavElements","$newNavbarEl","$oldNavbarEl","toLarge","fromLarge","direction","animateIcon","iosAnimateNavbarBackIcon","newNavEls","oldNavEls","animatableNavEl","$navbarInner","isSliding","hasClass","isSubnavbar","needsOpacityTransition","$iconEl","find","isIconLabel","length","next","leftOffset","f7NavbarLeftOffset","rightOffset","f7NavbarRightOffset","children","each","navEl","$navEl","push","masterDetailBreakpoint","width","forEach","navEls","n","otherEls","otherNavEl","iconTextEl","offsetLeft","animate","$oldPageEl","$newPageEl","transition","callback","animateCustom","apply","ios","routerCustomTransitionClass","onCustomTransitionDone","removeClass","prepend","animationEnd","setNavbarPosition","addClass","routerTransitionClass","toDifferent","oldIsLarge","newIsLarge","betweenMasterAndDetail","animateNavbars","progress","offset","style","setProperty","transform","onDone","_clientLeft","clientLeft","removeModal","modalEl","removeEl","removeTabContent","tabEl","$tabEl","html","removeNavbar","removePage","f7Page","route","keepAlive","remove","tabChild","f7Component","trigger","destroy","removeElements","removeElementsWithTimeout","setTimeout","removeElementsTimeout","getPageEl","content","innerHTML","append","findElement","stringSelector","container","notStacked","modalsSelector","$container","selector","found","filter","parents","viewMainClass","undefined","flattenRoutes","flattenedRoutes","hasTabRoutes","tabs","mergedPathsRoutes","map","tabRoute","tRoute","path","replace","parentPath","tab","concat","detailRoutes","detailRoute","dRoute","masterRoute","masterRoutePath","childRoute","cRoute","parseRouteUrl","query","hash","split","generateUrl","parameters","name","Error","findRouteByKey","constructRouteUrl","_temp","toUrl","error","toString","keys","findTabRouteUrl","tabId","attr","foundTabRouteUrl","key","value","matchingRoute","findMatchingRoute","pathsToMatch","alias","Array","isArray","aliasPath","matched","pathToMatch","exec","keyObj","index","paramValue","decodeURIComponent","slice","join","replaceRequestUrlParams","options","compiledUrl","indexOf","paramName","regExp","RegExp","removeFromXhrCache","xhrCache","xhr","i","splice","xhrRequest","requestUrl","ignoreCache","hasQuery","passRouteQueryToRequest","passRouteParamsToRequest","xhrCacheIgnoreGetParameters","Promise","resolve","reject","xhrCacheIgnore","cachedUrl","time","xhrCacheDuration","xhrAbortController","request","abortController","method","beforeSend","complete","status","responseText","position","ariaHidden","removeAttr","setPagePosition","removeThemeElements","toRemove","getPageData","pageEl","navbarEl","from","to","pageFromEl","$pageEl","eq","$navbarEl","currentPage","pageFrom","fromPage","$pageFromEl","page","pageCallback","restoreScrollTopOnBack","camelName","toUpperCase","colonName","toLowerCase","swipeBack","on","once","attachEvents","f7RouteEventsAttached","f7RouteEventsOn","eventName","bind","f7RouteEventsOnce","detachEvents","off","$pageContent","pageContentEl","is","scrollTop","f7PageInitialized","saveHistory","window","browserHistory","browserHistoryStoreHistory","localStorage","JSON","stringify","restoreHistory","parse","clearHistory","updateCurrentUrl","newUrl","browserHistoryRoot","browserHistorySeparator","getInitialUrl","initialUrl","historyRestored","location","URL","documentUrl","href","origin","browserHistoryOnLoad","cordova","Capacitor","isNative","pathname","console","warn","search","state","init","iosSwipeBack","mdSwipeBack","auroraSwipeBack","browserHistoryAnimateOnLoad","browserHistoryInitialMatch","initUrl","stackPages","loadInitialPage","initial","reloadCurrent","modalOpen","preloadPreviousPage","preload","pageAfterIn","hasTabRoute","master","role","checkMasterDetailBreakpoint","initOptions","currentPageEl","currentNavbarEl","initViewState","routerProp","prototype"],"sources":["C:/Users/Babak/userlogin/node_modules/framework7/modules/router/router-class.js"],"sourcesContent":["import { getWindow, getDocument } from 'ssr-window';\nimport { pathToRegexp, compile } from 'path-to-regexp';\nimport $ from '../../shared/dom7.js';\nimport Framework7Class from '../../shared/class.js';\nimport { extend, nextFrame, parseUrlQuery, serializeObject, now, eventNameToColonCase } from '../../shared/utils.js';\nimport History from '../../shared/history.js';\nimport SwipeBack from './swipe-back.js';\nimport { refreshPage, navigate } from './navigate.js';\nimport { tabLoad, tabRemove } from './tab.js';\nimport { modalLoad, modalRemove } from './modal.js';\nimport { back } from './back.js';\nimport { clearPreviousHistory } from './clear-previous-history.js';\nimport appRouterCheck from './app-router-check.js';\n\nclass Router extends Framework7Class {\n  constructor(app, view) {\n    super({}, [typeof view === 'undefined' ? app : view]);\n    const router = this; // Is App Router\n\n    router.isAppRouter = typeof view === 'undefined';\n\n    if (router.isAppRouter) {\n      // App Router\n      extend(false, router, {\n        app,\n        params: app.params.view,\n        routes: app.routes || [],\n        cache: app.cache\n      });\n    } else {\n      // View Router\n      extend(false, router, {\n        app,\n        view,\n        viewId: view.id,\n        id: view.params.routerId,\n        params: view.params,\n        routes: view.routes,\n        history: view.history,\n        scrollHistory: view.scrollHistory,\n        cache: app.cache,\n        dynamicNavbar: app.theme === 'ios' && view.params.iosDynamicNavbar,\n        initialPages: [],\n        initialNavbars: []\n      });\n    } // Install Modules\n\n\n    router.useModules(); // AllowPageChage\n\n    router.allowPageChange = true; // Current Route\n\n    let currentRoute = {};\n    let previousRoute = {};\n    Object.defineProperty(router, 'currentRoute', {\n      enumerable: true,\n      configurable: true,\n\n      set(newRoute) {\n        if (newRoute === void 0) {\n          newRoute = {};\n        }\n\n        previousRoute = extend({}, currentRoute);\n        currentRoute = newRoute;\n        if (!currentRoute) return;\n        router.url = currentRoute.url;\n        router.emit('routeChange', newRoute, previousRoute, router);\n      },\n\n      get() {\n        return currentRoute;\n      }\n\n    });\n    Object.defineProperty(router, 'previousRoute', {\n      enumerable: true,\n      configurable: true,\n\n      get() {\n        return previousRoute;\n      },\n\n      set(newRoute) {\n        previousRoute = newRoute;\n      }\n\n    });\n    return router;\n  }\n\n  mount() {\n    const router = this;\n    const view = router.view;\n    const document = getDocument();\n    extend(false, router, {\n      tempDom: document.createElement('div'),\n      $el: view.$el,\n      el: view.el,\n      $navbarsEl: view.$navbarsEl,\n      navbarsEl: view.navbarsEl\n    });\n    router.emit('local::mount routerMount', router);\n  }\n\n  animatableNavElements($newNavbarEl, $oldNavbarEl, toLarge, fromLarge, direction) {\n    const router = this;\n    const dynamicNavbar = router.dynamicNavbar;\n    const animateIcon = router.params.iosAnimateNavbarBackIcon;\n    let newNavEls;\n    let oldNavEls;\n\n    function animatableNavEl($el, $navbarInner) {\n      const isSliding = $el.hasClass('sliding') || $navbarInner.hasClass('sliding');\n      const isSubnavbar = $el.hasClass('subnavbar');\n      const needsOpacityTransition = isSliding ? !isSubnavbar : true;\n      const $iconEl = $el.find('.back .icon');\n      let isIconLabel;\n\n      if (isSliding && animateIcon && $el.hasClass('left') && $iconEl.length > 0 && $iconEl.next('span').length) {\n        $el = $iconEl.next('span'); // eslint-disable-line\n\n        isIconLabel = true;\n      }\n\n      return {\n        $el,\n        isIconLabel,\n        leftOffset: $el[0].f7NavbarLeftOffset,\n        rightOffset: $el[0].f7NavbarRightOffset,\n        isSliding,\n        isSubnavbar,\n        needsOpacityTransition\n      };\n    }\n\n    if (dynamicNavbar) {\n      newNavEls = [];\n      oldNavEls = [];\n      $newNavbarEl.children('.navbar-inner').children('.left, .right, .title, .subnavbar').each(navEl => {\n        const $navEl = $(navEl);\n        if ($navEl.hasClass('left') && fromLarge && direction === 'forward') return;\n        if ($navEl.hasClass('title') && toLarge) return;\n        newNavEls.push(animatableNavEl($navEl, $newNavbarEl.children('.navbar-inner')));\n      });\n\n      if (!($oldNavbarEl.hasClass('navbar-master') && router.params.masterDetailBreakpoint > 0 && router.app.width >= router.params.masterDetailBreakpoint)) {\n        $oldNavbarEl.children('.navbar-inner').children('.left, .right, .title, .subnavbar').each(navEl => {\n          const $navEl = $(navEl);\n          if ($navEl.hasClass('left') && toLarge && !fromLarge && direction === 'forward') return;\n          if ($navEl.hasClass('left') && toLarge && direction === 'backward') return;\n\n          if ($navEl.hasClass('title') && fromLarge) {\n            return;\n          }\n\n          oldNavEls.push(animatableNavEl($navEl, $oldNavbarEl.children('.navbar-inner')));\n        });\n      }\n\n      [oldNavEls, newNavEls].forEach(navEls => {\n        navEls.forEach(navEl => {\n          const n = navEl;\n          const {\n            isSliding,\n            $el\n          } = navEl;\n          const otherEls = navEls === oldNavEls ? newNavEls : oldNavEls;\n          if (!(isSliding && $el.hasClass('title') && otherEls)) return;\n          otherEls.forEach(otherNavEl => {\n            if (otherNavEl.isIconLabel) {\n              const iconTextEl = otherNavEl.$el[0];\n              n.leftOffset += iconTextEl ? iconTextEl.offsetLeft || 0 : 0;\n            }\n          });\n        });\n      });\n    }\n\n    return {\n      newNavEls,\n      oldNavEls\n    };\n  }\n\n  animate($oldPageEl, $newPageEl, $oldNavbarEl, $newNavbarEl, direction, transition, callback) {\n    const router = this;\n\n    if (router.params.animateCustom) {\n      router.params.animateCustom.apply(router, [$oldPageEl, $newPageEl, $oldNavbarEl, $newNavbarEl, direction, callback]);\n      return;\n    }\n\n    const dynamicNavbar = router.dynamicNavbar;\n    const ios = router.app.theme === 'ios';\n\n    if (transition) {\n      const routerCustomTransitionClass = `router-transition-custom router-transition-${transition}-${direction}`; // Animate\n\n      const onCustomTransitionDone = () => {\n        router.$el.removeClass(routerCustomTransitionClass);\n\n        if (dynamicNavbar && router.$navbarsEl.length) {\n          if ($newNavbarEl) {\n            router.$navbarsEl.prepend($newNavbarEl);\n          }\n\n          if ($oldNavbarEl) {\n            router.$navbarsEl.prepend($oldNavbarEl);\n          }\n        }\n\n        if (callback) callback();\n      };\n\n      (direction === 'forward' ? $newPageEl : $oldPageEl).animationEnd(onCustomTransitionDone);\n\n      if (dynamicNavbar) {\n        if ($newNavbarEl && $newPageEl) {\n          router.setNavbarPosition($newNavbarEl, '');\n          $newNavbarEl.removeClass('navbar-next navbar-previous navbar-current');\n          $newPageEl.prepend($newNavbarEl);\n        }\n\n        if ($oldNavbarEl && $oldPageEl) {\n          router.setNavbarPosition($oldNavbarEl, '');\n          $oldNavbarEl.removeClass('navbar-next navbar-previous navbar-current');\n          $oldPageEl.prepend($oldNavbarEl);\n        }\n      }\n\n      router.$el.addClass(routerCustomTransitionClass);\n      return;\n    } // Router Animation class\n\n\n    const routerTransitionClass = `router-transition-${direction} router-transition`;\n    let newNavEls;\n    let oldNavEls;\n    let fromLarge;\n    let toLarge;\n    let toDifferent;\n    let oldIsLarge;\n    let newIsLarge;\n\n    if (ios && dynamicNavbar) {\n      const betweenMasterAndDetail = router.params.masterDetailBreakpoint > 0 && router.app.width >= router.params.masterDetailBreakpoint && ($oldNavbarEl.hasClass('navbar-master') && $newNavbarEl.hasClass('navbar-master-detail') || $oldNavbarEl.hasClass('navbar-master-detail') && $newNavbarEl.hasClass('navbar-master'));\n\n      if (!betweenMasterAndDetail) {\n        oldIsLarge = $oldNavbarEl && $oldNavbarEl.hasClass('navbar-large');\n        newIsLarge = $newNavbarEl && $newNavbarEl.hasClass('navbar-large');\n        fromLarge = oldIsLarge && !$oldNavbarEl.hasClass('navbar-large-collapsed');\n        toLarge = newIsLarge && !$newNavbarEl.hasClass('navbar-large-collapsed');\n        toDifferent = fromLarge && !toLarge || toLarge && !fromLarge;\n      }\n\n      const navEls = router.animatableNavElements($newNavbarEl, $oldNavbarEl, toLarge, fromLarge, direction);\n      newNavEls = navEls.newNavEls;\n      oldNavEls = navEls.oldNavEls;\n    }\n\n    function animateNavbars(progress) {\n      if (!(ios && dynamicNavbar)) return;\n\n      if (progress === 1) {\n        if (toLarge) {\n          $newNavbarEl.addClass('router-navbar-transition-to-large');\n          $oldNavbarEl.addClass('router-navbar-transition-to-large');\n        }\n\n        if (fromLarge) {\n          $newNavbarEl.addClass('router-navbar-transition-from-large');\n          $oldNavbarEl.addClass('router-navbar-transition-from-large');\n        }\n      }\n\n      newNavEls.forEach(navEl => {\n        const $el = navEl.$el;\n        const offset = direction === 'forward' ? navEl.rightOffset : navEl.leftOffset;\n\n        if (navEl.isSliding) {\n          if (navEl.isSubnavbar && newIsLarge) {\n            // prettier-ignore\n            $el[0].style.setProperty('transform', `translate3d(${offset * (1 - progress)}px, calc(-1 * var(--f7-navbar-large-collapse-progress) * var(--f7-navbar-large-title-height)), 0)`, 'important');\n          } else {\n            $el.transform(`translate3d(${offset * (1 - progress)}px,0,0)`);\n          }\n        }\n      });\n      oldNavEls.forEach(navEl => {\n        const $el = navEl.$el;\n        const offset = direction === 'forward' ? navEl.leftOffset : navEl.rightOffset;\n\n        if (navEl.isSliding) {\n          if (navEl.isSubnavbar && oldIsLarge) {\n            $el.transform(`translate3d(${offset * progress}px, calc(-1 * var(--f7-navbar-large-collapse-progress) * var(--f7-navbar-large-title-height)), 0)`);\n          } else {\n            $el.transform(`translate3d(${offset * progress}px,0,0)`);\n          }\n        }\n      });\n    } // AnimationEnd Callback\n\n\n    function onDone() {\n      if (router.dynamicNavbar) {\n        if ($newNavbarEl) {\n          $newNavbarEl.removeClass('router-navbar-transition-to-large router-navbar-transition-from-large');\n          $newNavbarEl.addClass('navbar-no-title-large-transition');\n          nextFrame(() => {\n            $newNavbarEl.removeClass('navbar-no-title-large-transition');\n          });\n        }\n\n        if ($oldNavbarEl) {\n          $oldNavbarEl.removeClass('router-navbar-transition-to-large router-navbar-transition-from-large');\n        }\n\n        if ($newNavbarEl.hasClass('sliding') || $newNavbarEl.children('.navbar-inner.sliding').length) {\n          $newNavbarEl.find('.title, .left, .right, .left .icon, .subnavbar').transform('');\n        } else {\n          $newNavbarEl.find('.sliding').transform('');\n        }\n\n        if ($oldNavbarEl.hasClass('sliding') || $oldNavbarEl.children('.navbar-inner.sliding').length) {\n          $oldNavbarEl.find('.title, .left, .right, .left .icon, .subnavbar').transform('');\n        } else {\n          $oldNavbarEl.find('.sliding').transform('');\n        }\n      }\n\n      router.$el.removeClass(routerTransitionClass);\n      if (callback) callback();\n    }\n\n    (direction === 'forward' ? $newPageEl : $oldPageEl).animationEnd(() => {\n      onDone();\n    }); // Animate\n\n    if (dynamicNavbar) {\n      // Prepare Navbars\n      animateNavbars(0);\n      nextFrame(() => {\n        // Add class, start animation\n        router.$el.addClass(routerTransitionClass);\n\n        if (toDifferent) {\n          // eslint-disable-next-line\n          router.el._clientLeft = router.el.clientLeft;\n        }\n\n        animateNavbars(1);\n      });\n    } else {\n      // Add class, start animation\n      router.$el.addClass(routerTransitionClass);\n    }\n  }\n\n  removeModal(modalEl) {\n    const router = this;\n    router.removeEl(modalEl);\n  } // eslint-disable-next-line\n\n\n  removeTabContent(tabEl) {\n    const $tabEl = $(tabEl);\n    $tabEl.html('');\n  }\n\n  removeNavbar(el) {\n    const router = this;\n    router.removeEl(el);\n  }\n\n  removePage(el) {\n    const $el = $(el);\n    const f7Page = $el && $el[0] && $el[0].f7Page;\n    const router = this;\n\n    if (f7Page && f7Page.route && f7Page.route.route && f7Page.route.route.keepAlive) {\n      $el.remove();\n      return;\n    }\n\n    router.removeEl(el);\n  }\n\n  removeEl(el) {\n    if (!el) return;\n    const router = this;\n    const $el = $(el);\n    if ($el.length === 0) return;\n    $el.find('.tab').each(tabEl => {\n      $(tabEl).children().each(tabChild => {\n        if (tabChild.f7Component) {\n          $(tabChild).trigger('tab:beforeremove');\n          tabChild.f7Component.destroy();\n        }\n      });\n    });\n\n    if ($el[0].f7Component && $el[0].f7Component.destroy) {\n      $el[0].f7Component.destroy();\n    }\n\n    if (!router.params.removeElements) {\n      return;\n    }\n\n    if (router.params.removeElementsWithTimeout) {\n      setTimeout(() => {\n        $el.remove();\n      }, router.params.removeElementsTimeout);\n    } else {\n      $el.remove();\n    }\n  }\n\n  getPageEl(content) {\n    const router = this;\n\n    if (typeof content === 'string') {\n      router.tempDom.innerHTML = content;\n    } else {\n      if ($(content).hasClass('page')) {\n        return content;\n      }\n\n      router.tempDom.innerHTML = '';\n      $(router.tempDom).append(content);\n    }\n\n    return router.findElement('.page', router.tempDom);\n  }\n\n  findElement(stringSelector, container, notStacked) {\n    const router = this;\n    const view = router.view;\n    const app = router.app; // Modals Selector\n\n    const modalsSelector = '.popup, .dialog, .popover, .actions-modal, .sheet-modal, .login-screen, .page';\n    const $container = $(container);\n    let selector = stringSelector;\n    if (notStacked) selector += ':not(.stacked)';\n    let found = $container.find(selector).filter(el => $(el).parents(modalsSelector).length === 0);\n\n    if (found.length > 1) {\n      if (typeof view.selector === 'string') {\n        // Search in related view\n        found = $container.find(`${view.selector} ${selector}`);\n      }\n\n      if (found.length > 1) {\n        // Search in main view\n        found = $container.find(`.${app.params.viewMainClass} ${selector}`);\n      }\n    }\n\n    if (found.length === 1) return found; // Try to find not stacked\n\n    if (!notStacked) found = router.findElement(selector, $container, true);\n    if (found && found.length === 1) return found;\n    if (found && found.length > 1) return $(found[0]);\n    return undefined;\n  }\n\n  flattenRoutes(routes) {\n    if (routes === void 0) {\n      routes = this.routes;\n    }\n\n    const router = this;\n    let flattenedRoutes = [];\n    routes.forEach(route => {\n      let hasTabRoutes = false;\n\n      if ('tabs' in route && route.tabs) {\n        const mergedPathsRoutes = route.tabs.map(tabRoute => {\n          const tRoute = extend({}, route, {\n            path: `${route.path}/${tabRoute.path}`.replace('///', '/').replace('//', '/'),\n            parentPath: route.path,\n            tab: tabRoute\n          });\n          delete tRoute.tabs;\n          delete tRoute.routes;\n          return tRoute;\n        });\n        hasTabRoutes = true;\n        flattenedRoutes = flattenedRoutes.concat(router.flattenRoutes(mergedPathsRoutes));\n      }\n\n      if ('detailRoutes' in route) {\n        const mergedPathsRoutes = route.detailRoutes.map(detailRoute => {\n          const dRoute = extend({}, detailRoute);\n          dRoute.masterRoute = route;\n          dRoute.masterRoutePath = route.path;\n          return dRoute;\n        });\n        flattenedRoutes = flattenedRoutes.concat(route, router.flattenRoutes(mergedPathsRoutes));\n      }\n\n      if ('routes' in route) {\n        const mergedPathsRoutes = route.routes.map(childRoute => {\n          const cRoute = extend({}, childRoute);\n          cRoute.path = `${route.path}/${cRoute.path}`.replace('///', '/').replace('//', '/');\n          return cRoute;\n        });\n\n        if (hasTabRoutes) {\n          flattenedRoutes = flattenedRoutes.concat(router.flattenRoutes(mergedPathsRoutes));\n        } else {\n          flattenedRoutes = flattenedRoutes.concat(route, router.flattenRoutes(mergedPathsRoutes));\n        }\n      }\n\n      if (!('routes' in route) && !('tabs' in route && route.tabs) && !('detailRoutes' in route)) {\n        flattenedRoutes.push(route);\n      }\n    });\n    return flattenedRoutes;\n  } // eslint-disable-next-line\n\n\n  parseRouteUrl(url) {\n    if (!url) return {};\n    const query = parseUrlQuery(url);\n    const hash = url.split('#')[1];\n    const params = {};\n    const path = url.split('#')[0].split('?')[0];\n    return {\n      query,\n      hash,\n      params,\n      url,\n      path\n    };\n  }\n\n  generateUrl(parameters) {\n    if (parameters === void 0) {\n      parameters = {};\n    }\n\n    if (typeof parameters === 'string') {\n      return parameters;\n    }\n\n    const {\n      name,\n      path,\n      params,\n      query\n    } = parameters;\n\n    if (!name && !path) {\n      throw new Error('Framework7: \"name\" or \"path\" parameter is required');\n    }\n\n    const router = this;\n    const route = name ? router.findRouteByKey('name', name) : router.findRouteByKey('path', path);\n\n    if (!route) {\n      if (name) {\n        throw new Error(`Framework7: route with name \"${name}\" not found`);\n      } else {\n        throw new Error(`Framework7: route with path \"${path}\" not found`);\n      }\n    }\n\n    const url = router.constructRouteUrl(route, {\n      params,\n      query\n    });\n\n    if (!url) {\n      throw new Error(`Framework7: can't construct URL for route with name \"${name}\"`);\n    }\n\n    return url;\n  } // eslint-disable-next-line\n\n\n  constructRouteUrl(route, _temp) {\n    let {\n      params,\n      query\n    } = _temp === void 0 ? {} : _temp;\n    const {\n      path\n    } = route;\n    const toUrl = compile(path);\n    let url;\n\n    try {\n      url = toUrl(params || {});\n    } catch (error) {\n      throw new Error(`Framework7: error constructing route URL from passed params:\\nRoute: ${path}\\n${error.toString()}`);\n    }\n\n    if (query) {\n      if (typeof query === 'string') url += `?${query}`;else if (Object.keys(query).length) url += `?${serializeObject(query)}`;\n    }\n\n    return url;\n  }\n\n  findTabRouteUrl(tabEl) {\n    const router = this;\n    const $tabEl = $(tabEl);\n    const parentPath = router.currentRoute.route.parentPath;\n    const tabId = $tabEl.attr('id');\n    const flattenedRoutes = router.flattenRoutes(router.routes);\n    let foundTabRouteUrl;\n    flattenedRoutes.forEach(route => {\n      if (route.parentPath === parentPath && route.tab && route.tab.id === tabId) {\n        if (router.currentRoute.params && Object.keys(router.currentRoute.params).length > 0) {\n          foundTabRouteUrl = router.constructRouteUrl(route, {\n            params: router.currentRoute.params,\n            query: router.currentRoute.query\n          });\n        } else {\n          foundTabRouteUrl = route.path;\n        }\n      }\n    });\n    return foundTabRouteUrl;\n  }\n\n  findRouteByKey(key, value) {\n    const router = this;\n    const routes = router.routes;\n    const flattenedRoutes = router.flattenRoutes(routes);\n    let matchingRoute;\n    flattenedRoutes.forEach(route => {\n      if (matchingRoute) return;\n\n      if (route[key] === value) {\n        matchingRoute = route;\n      }\n    });\n    return matchingRoute;\n  }\n\n  findMatchingRoute(url) {\n    if (!url) return undefined;\n    const router = this;\n    const routes = router.routes;\n    const flattenedRoutes = router.flattenRoutes(routes);\n    const {\n      path,\n      query,\n      hash,\n      params\n    } = router.parseRouteUrl(url);\n    let matchingRoute;\n    flattenedRoutes.forEach(route => {\n      if (matchingRoute) return;\n      const keys = [];\n      const pathsToMatch = [route.path];\n\n      if (route.alias) {\n        if (typeof route.alias === 'string') pathsToMatch.push(route.alias);else if (Array.isArray(route.alias)) {\n          route.alias.forEach(aliasPath => {\n            pathsToMatch.push(aliasPath);\n          });\n        }\n      }\n\n      let matched;\n      pathsToMatch.forEach(pathToMatch => {\n        if (matched) return;\n        matched = pathToRegexp(pathToMatch, keys).exec(path);\n      });\n\n      if (matched) {\n        keys.forEach((keyObj, index) => {\n          if (typeof keyObj.name === 'number') return;\n          const paramValue = matched[index + 1];\n\n          if (typeof paramValue === 'undefined' || paramValue === null) {\n            params[keyObj.name] = paramValue;\n          } else {\n            params[keyObj.name] = decodeURIComponent(paramValue);\n          }\n        });\n        let parentPath;\n\n        if (route.parentPath) {\n          parentPath = path.split('/').slice(0, route.parentPath.split('/').length - 1).join('/');\n        }\n\n        matchingRoute = {\n          query,\n          hash,\n          params,\n          url,\n          path,\n          parentPath,\n          route,\n          name: route.name\n        };\n      }\n    });\n    return matchingRoute;\n  } // eslint-disable-next-line\n\n\n  replaceRequestUrlParams(url, options) {\n    if (url === void 0) {\n      url = '';\n    }\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    let compiledUrl = url;\n\n    if (typeof compiledUrl === 'string' && compiledUrl.indexOf('{{') >= 0 && options && options.route && options.route.params && Object.keys(options.route.params).length) {\n      Object.keys(options.route.params).forEach(paramName => {\n        const regExp = new RegExp(`{{${paramName}}}`, 'g');\n        compiledUrl = compiledUrl.replace(regExp, options.route.params[paramName] || '');\n      });\n    }\n\n    return compiledUrl;\n  }\n\n  removeFromXhrCache(url) {\n    const router = this;\n    const xhrCache = router.cache.xhr;\n    let index = false;\n\n    for (let i = 0; i < xhrCache.length; i += 1) {\n      if (xhrCache[i].url === url) index = i;\n    }\n\n    if (index !== false) xhrCache.splice(index, 1);\n  }\n\n  xhrRequest(requestUrl, options) {\n    const router = this;\n    const params = router.params;\n    const {\n      ignoreCache\n    } = options;\n    let url = requestUrl;\n    let hasQuery = url.indexOf('?') >= 0;\n\n    if (params.passRouteQueryToRequest && options && options.route && options.route.query && Object.keys(options.route.query).length) {\n      url += `${hasQuery ? '&' : '?'}${serializeObject(options.route.query)}`;\n      hasQuery = true;\n    }\n\n    if (params.passRouteParamsToRequest && options && options.route && options.route.params && Object.keys(options.route.params).length) {\n      url += `${hasQuery ? '&' : '?'}${serializeObject(options.route.params)}`;\n      hasQuery = true;\n    }\n\n    if (url.indexOf('{{') >= 0) {\n      url = router.replaceRequestUrlParams(url, options);\n    } // should we ignore get params or not\n\n\n    if (params.xhrCacheIgnoreGetParameters && url.indexOf('?') >= 0) {\n      url = url.split('?')[0];\n    }\n\n    return new Promise((resolve, reject) => {\n      if (params.xhrCache && !ignoreCache && url.indexOf('nocache') < 0 && params.xhrCacheIgnore.indexOf(url) < 0) {\n        for (let i = 0; i < router.cache.xhr.length; i += 1) {\n          const cachedUrl = router.cache.xhr[i];\n\n          if (cachedUrl.url === url) {\n            // Check expiration\n            if (now() - cachedUrl.time < params.xhrCacheDuration) {\n              // Load from cache\n              resolve(cachedUrl.content);\n              return;\n            }\n          }\n        }\n      }\n\n      router.xhrAbortController = router.app.request.abortController();\n      router.app.request({\n        abortController: router.xhrAbortController,\n        url,\n        method: 'GET',\n\n        beforeSend(xhr) {\n          router.emit('routerAjaxStart', xhr, options);\n        },\n\n        complete(xhr, status) {\n          router.emit('routerAjaxComplete', xhr);\n\n          if (status !== 'error' && status !== 'timeout' && xhr.status >= 200 && xhr.status < 300 || xhr.status === 0) {\n            if (params.xhrCache && xhr.responseText !== '') {\n              router.removeFromXhrCache(url);\n              router.cache.xhr.push({\n                url,\n                time: now(),\n                content: xhr.responseText\n              });\n            }\n\n            router.emit('routerAjaxSuccess', xhr, options);\n            resolve(xhr.responseText);\n          } else {\n            router.emit('routerAjaxError', xhr, options);\n            reject(xhr);\n          }\n        },\n\n        error(xhr) {\n          router.emit('routerAjaxError', xhr, options);\n          reject(xhr);\n        }\n\n      });\n    });\n  }\n\n  setNavbarPosition($el, position, ariaHidden) {\n    const router = this;\n    $el.removeClass('navbar-previous navbar-current navbar-next');\n\n    if (position) {\n      $el.addClass(`navbar-${position}`);\n    }\n\n    if (ariaHidden === false) {\n      $el.removeAttr('aria-hidden');\n    } else if (ariaHidden === true) {\n      $el.attr('aria-hidden', 'true');\n    }\n\n    $el.trigger('navbar:position', {\n      position\n    });\n    router.emit('navbarPosition', $el[0], position);\n  }\n\n  setPagePosition($el, position, ariaHidden) {\n    const router = this;\n    $el.removeClass('page-previous page-current page-next');\n    $el.addClass(`page-${position}`);\n\n    if (ariaHidden === false) {\n      $el.removeAttr('aria-hidden');\n    } else if (ariaHidden === true) {\n      $el.attr('aria-hidden', 'true');\n    }\n\n    $el.trigger('page:position', {\n      position\n    });\n    router.emit('pagePosition', $el[0], position);\n  } // Remove theme elements\n\n\n  removeThemeElements(el) {\n    const router = this;\n    const theme = router.app.theme;\n    let toRemove;\n\n    if (theme === 'ios') {\n      toRemove = '.md-only, .aurora-only, .if-md, .if-aurora, .if-not-ios, .not-ios';\n    } else if (theme === 'md') {\n      toRemove = '.ios-only, .aurora-only, .if-ios, .if-aurora, .if-not-md, .not-md';\n    } else if (theme === 'aurora') {\n      toRemove = '.ios-only, .md-only, .if-ios, .if-md, .if-not-aurora, .not-aurora';\n    }\n\n    $(el).find(toRemove).remove();\n  }\n\n  getPageData(pageEl, navbarEl, from, to, route, pageFromEl) {\n    if (route === void 0) {\n      route = {};\n    }\n\n    const router = this;\n    const $pageEl = $(pageEl).eq(0);\n    const $navbarEl = $(navbarEl).eq(0);\n    const currentPage = $pageEl[0].f7Page || {};\n    let direction;\n    let pageFrom;\n    if (from === 'next' && to === 'current' || from === 'current' && to === 'previous') direction = 'forward';\n    if (from === 'current' && to === 'next' || from === 'previous' && to === 'current') direction = 'backward';\n\n    if (currentPage && !currentPage.fromPage) {\n      const $pageFromEl = $(pageFromEl);\n\n      if ($pageFromEl.length) {\n        pageFrom = $pageFromEl[0].f7Page;\n      }\n    }\n\n    pageFrom = currentPage.pageFrom || pageFrom;\n\n    if (pageFrom && pageFrom.pageFrom) {\n      pageFrom.pageFrom = null;\n    }\n\n    const page = {\n      app: router.app,\n      view: router.view,\n      router,\n      $el: $pageEl,\n      el: $pageEl[0],\n      $pageEl,\n      pageEl: $pageEl[0],\n      $navbarEl,\n      navbarEl: $navbarEl[0],\n      name: $pageEl.attr('data-name'),\n      position: from,\n      from,\n      to,\n      direction,\n      route: currentPage.route ? currentPage.route : route,\n      pageFrom\n    };\n    $pageEl[0].f7Page = page;\n    return page;\n  } // Callbacks\n\n\n  pageCallback(callback, pageEl, navbarEl, from, to, options, pageFromEl) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (!pageEl) return;\n    const router = this;\n    const $pageEl = $(pageEl);\n    if (!$pageEl.length) return;\n    const $navbarEl = $(navbarEl);\n    const {\n      route\n    } = options;\n    const restoreScrollTopOnBack = router.params.restoreScrollTopOnBack && !(router.params.masterDetailBreakpoint > 0 && $pageEl.hasClass('page-master') && router.app.width >= router.params.masterDetailBreakpoint);\n    const keepAlive = $pageEl[0].f7Page && $pageEl[0].f7Page.route && $pageEl[0].f7Page.route.route && $pageEl[0].f7Page.route.route.keepAlive;\n\n    if (callback === 'beforeRemove' && keepAlive) {\n      callback = 'beforeUnmount'; // eslint-disable-line\n    }\n\n    const camelName = `page${callback[0].toUpperCase() + callback.slice(1, callback.length)}`;\n    const colonName = `page:${callback.toLowerCase()}`;\n    let page = {};\n\n    if (callback === 'beforeRemove' && $pageEl[0].f7Page) {\n      page = extend($pageEl[0].f7Page, {\n        from,\n        to,\n        position: from\n      });\n    } else {\n      page = router.getPageData($pageEl[0], $navbarEl[0], from, to, route, pageFromEl);\n    }\n\n    page.swipeBack = !!options.swipeBack;\n    const {\n      on = {},\n      once = {}\n    } = options.route ? options.route.route : {};\n\n    if (options.on) {\n      extend(on, options.on);\n    }\n\n    if (options.once) {\n      extend(once, options.once);\n    }\n\n    function attachEvents() {\n      if ($pageEl[0].f7RouteEventsAttached) return;\n      $pageEl[0].f7RouteEventsAttached = true;\n\n      if (on && Object.keys(on).length > 0) {\n        $pageEl[0].f7RouteEventsOn = on;\n        Object.keys(on).forEach(eventName => {\n          on[eventName] = on[eventName].bind(router);\n          $pageEl.on(eventNameToColonCase(eventName), on[eventName]);\n        });\n      }\n\n      if (once && Object.keys(once).length > 0) {\n        $pageEl[0].f7RouteEventsOnce = once;\n        Object.keys(once).forEach(eventName => {\n          once[eventName] = once[eventName].bind(router);\n          $pageEl.once(eventNameToColonCase(eventName), once[eventName]);\n        });\n      }\n    }\n\n    function detachEvents() {\n      if (!$pageEl[0].f7RouteEventsAttached) return;\n\n      if ($pageEl[0].f7RouteEventsOn) {\n        Object.keys($pageEl[0].f7RouteEventsOn).forEach(eventName => {\n          $pageEl.off(eventNameToColonCase(eventName), $pageEl[0].f7RouteEventsOn[eventName]);\n        });\n      }\n\n      if ($pageEl[0].f7RouteEventsOnce) {\n        Object.keys($pageEl[0].f7RouteEventsOnce).forEach(eventName => {\n          $pageEl.off(eventNameToColonCase(eventName), $pageEl[0].f7RouteEventsOnce[eventName]);\n        });\n      }\n\n      $pageEl[0].f7RouteEventsAttached = null;\n      $pageEl[0].f7RouteEventsOn = null;\n      $pageEl[0].f7RouteEventsOnce = null;\n      delete $pageEl[0].f7RouteEventsAttached;\n      delete $pageEl[0].f7RouteEventsOn;\n      delete $pageEl[0].f7RouteEventsOnce;\n    }\n\n    if (callback === 'mounted') {\n      attachEvents();\n    }\n\n    if (callback === 'init') {\n      if (restoreScrollTopOnBack && (from === 'previous' || !from) && to === 'current' && router.scrollHistory[page.route.url] && !$pageEl.hasClass('no-restore-scroll')) {\n        let $pageContent = $pageEl.find('.page-content');\n\n        if ($pageContent.length > 0) {\n          // eslint-disable-next-line\n          $pageContent = $pageContent.filter(pageContentEl => {\n            return $(pageContentEl).parents('.tab:not(.tab-active)').length === 0 && !$(pageContentEl).is('.tab:not(.tab-active)');\n          });\n        }\n\n        $pageContent.scrollTop(router.scrollHistory[page.route.url]);\n      }\n\n      attachEvents();\n\n      if ($pageEl[0].f7PageInitialized) {\n        $pageEl.trigger('page:reinit', page);\n        router.emit('pageReinit', page);\n        return;\n      }\n\n      $pageEl[0].f7PageInitialized = true;\n    }\n\n    if (restoreScrollTopOnBack && callback === 'beforeOut' && from === 'current' && to === 'previous') {\n      // Save scroll position\n      let $pageContent = $pageEl.find('.page-content');\n\n      if ($pageContent.length > 0) {\n        // eslint-disable-next-line\n        $pageContent = $pageContent.filter(pageContentEl => {\n          return $(pageContentEl).parents('.tab:not(.tab-active)').length === 0 && !$(pageContentEl).is('.tab:not(.tab-active)');\n        });\n      }\n\n      router.scrollHistory[page.route.url] = $pageContent.scrollTop();\n    }\n\n    if (restoreScrollTopOnBack && callback === 'beforeOut' && from === 'current' && to === 'next') {\n      // Delete scroll position\n      delete router.scrollHistory[page.route.url];\n    }\n\n    $pageEl.trigger(colonName, page);\n    router.emit(camelName, page);\n\n    if (callback === 'beforeRemove' || callback === 'beforeUnmount') {\n      detachEvents();\n\n      if (!keepAlive) {\n        if ($pageEl[0].f7Page && $pageEl[0].f7Page.navbarEl) {\n          delete $pageEl[0].f7Page.navbarEl.f7Page;\n        }\n\n        $pageEl[0].f7Page = null;\n      }\n    }\n  }\n\n  saveHistory() {\n    const router = this;\n    const window = getWindow();\n    router.view.history = router.history;\n\n    if (router.params.browserHistory && router.params.browserHistoryStoreHistory && window.localStorage) {\n      window.localStorage[`f7router-${router.view.id}-history`] = JSON.stringify(router.history);\n    }\n  }\n\n  restoreHistory() {\n    const router = this;\n    const window = getWindow();\n\n    if (router.params.browserHistory && router.params.browserHistoryStoreHistory && window.localStorage && window.localStorage[`f7router-${router.view.id}-history`]) {\n      router.history = JSON.parse(window.localStorage[`f7router-${router.view.id}-history`]);\n      router.view.history = router.history;\n    }\n  }\n\n  clearHistory() {\n    const router = this;\n    router.history = [];\n    if (router.view) router.view.history = [];\n    router.saveHistory();\n  }\n\n  updateCurrentUrl(newUrl) {\n    const router = this;\n    appRouterCheck(router, 'updateCurrentUrl'); // Update history\n\n    if (router.history.length) {\n      router.history[router.history.length - 1] = newUrl;\n    } else {\n      router.history.push(newUrl);\n    } // Update current route params\n\n\n    const {\n      query,\n      hash,\n      params,\n      url,\n      path\n    } = router.parseRouteUrl(newUrl);\n\n    if (router.currentRoute) {\n      extend(router.currentRoute, {\n        query,\n        hash,\n        params,\n        url,\n        path\n      });\n    }\n\n    if (router.params.browserHistory) {\n      const browserHistoryRoot = router.params.browserHistoryRoot || '';\n      History.replace(router.view.id, {\n        url: newUrl\n      }, browserHistoryRoot + router.params.browserHistorySeparator + newUrl);\n    } // Save History\n\n\n    router.saveHistory();\n    router.emit('routeUrlUpdate', router.currentRoute, router);\n  }\n\n  getInitialUrl() {\n    const router = this;\n\n    if (router.initialUrl) {\n      return {\n        initialUrl: router.initialUrl,\n        historyRestored: router.historyRestored\n      };\n    }\n\n    const {\n      app,\n      view\n    } = router;\n    const document = getDocument();\n    const window = getWindow();\n    const location = app.params.url && typeof app.params.url === 'string' && typeof URL !== 'undefined' ? new URL(app.params.url) : document.location;\n    let initialUrl = router.params.url;\n    let documentUrl = location.href.split(location.origin)[1];\n    let historyRestored;\n    const {\n      browserHistory,\n      browserHistoryOnLoad,\n      browserHistorySeparator\n    } = router.params;\n    let {\n      browserHistoryRoot\n    } = router.params;\n\n    if ((window.cordova || window.Capacitor && window.Capacitor.isNative) && browserHistory && !browserHistorySeparator && !browserHistoryRoot && location.pathname.indexOf('index.html')) {\n      // eslint-disable-next-line\n      console.warn('Framework7: wrong or not complete browserHistory configuration, trying to guess browserHistoryRoot');\n      browserHistoryRoot = location.pathname.split('index.html')[0];\n    }\n\n    if (!browserHistory || !browserHistoryOnLoad) {\n      if (!initialUrl) {\n        initialUrl = documentUrl;\n      }\n\n      if (location.search && initialUrl.indexOf('?') < 0) {\n        initialUrl += location.search;\n      }\n\n      if (location.hash && initialUrl.indexOf('#') < 0) {\n        initialUrl += location.hash;\n      }\n    } else {\n      if (browserHistoryRoot && documentUrl.indexOf(browserHistoryRoot) >= 0) {\n        documentUrl = documentUrl.split(browserHistoryRoot)[1];\n        if (documentUrl === '') documentUrl = '/';\n      }\n\n      if (browserHistorySeparator.length > 0 && documentUrl.indexOf(browserHistorySeparator) >= 0) {\n        initialUrl = documentUrl.split(browserHistorySeparator)[1];\n      } else {\n        initialUrl = documentUrl;\n      }\n\n      router.restoreHistory();\n\n      if (router.history.indexOf(initialUrl) >= 0) {\n        router.history = router.history.slice(0, router.history.indexOf(initialUrl) + 1);\n      } else if (router.params.url === initialUrl) {\n        router.history = [initialUrl];\n      } else if (History.state && History.state[view.id] && History.state[view.id].url === router.history[router.history.length - 1]) {\n        initialUrl = router.history[router.history.length - 1];\n      } else {\n        router.history = [documentUrl.split(browserHistorySeparator)[0] || '/', initialUrl];\n      }\n\n      if (router.history.length > 1) {\n        historyRestored = true;\n      } else {\n        router.history = [];\n      }\n\n      router.saveHistory();\n    }\n\n    router.initialUrl = initialUrl;\n    router.historyRestored = historyRestored;\n    return {\n      initialUrl,\n      historyRestored\n    };\n  }\n\n  init() {\n    const router = this;\n    const {\n      app,\n      view\n    } = router;\n    const document = getDocument();\n    router.mount();\n    const {\n      initialUrl,\n      historyRestored\n    } = router.getInitialUrl(); // Init Swipeback\n\n    if (view && router.params.iosSwipeBack && app.theme === 'ios' || view && router.params.mdSwipeBack && app.theme === 'md' || view && router.params.auroraSwipeBack && app.theme === 'aurora') {\n      SwipeBack(router);\n    }\n\n    const {\n      browserHistory,\n      browserHistoryOnLoad,\n      browserHistoryAnimateOnLoad,\n      browserHistoryInitialMatch\n    } = router.params;\n    let currentRoute;\n\n    if (router.history.length > 1) {\n      // Will load page\n      const initUrl = browserHistoryInitialMatch ? initialUrl : router.history[0];\n      currentRoute = router.findMatchingRoute(initUrl);\n\n      if (!currentRoute) {\n        currentRoute = extend(router.parseRouteUrl(initUrl), {\n          route: {\n            url: initUrl,\n            path: initUrl.split('?')[0]\n          }\n        });\n      }\n    } else {\n      // Don't load page\n      currentRoute = router.findMatchingRoute(initialUrl);\n\n      if (!currentRoute) {\n        currentRoute = extend(router.parseRouteUrl(initialUrl), {\n          route: {\n            url: initialUrl,\n            path: initialUrl.split('?')[0]\n          }\n        });\n      }\n    }\n\n    if (router.params.stackPages) {\n      router.$el.children('.page').each(pageEl => {\n        const $pageEl = $(pageEl);\n        router.initialPages.push($pageEl[0]);\n\n        if (router.dynamicNavbar && $pageEl.children('.navbar').length > 0) {\n          router.initialNavbars.push($pageEl.children('.navbar')[0]);\n        }\n      });\n    }\n\n    if (router.$el.children('.page:not(.stacked)').length === 0 && initialUrl && router.params.loadInitialPage) {\n      // No pages presented in DOM, reload new page\n      router.navigate(initialUrl, {\n        initial: true,\n        reloadCurrent: true,\n        browserHistory: false,\n        animate: false,\n        once: {\n          modalOpen() {\n            if (!historyRestored) return;\n            const preloadPreviousPage = router.params.preloadPreviousPage || router.params[`${app.theme}SwipeBack`];\n\n            if (preloadPreviousPage && router.history.length > 1) {\n              router.back({\n                preload: true\n              });\n            }\n          },\n\n          pageAfterIn() {\n            if (!historyRestored) return;\n            const preloadPreviousPage = router.params.preloadPreviousPage || router.params[`${app.theme}SwipeBack`];\n\n            if (preloadPreviousPage && router.history.length > 1) {\n              router.back({\n                preload: true\n              });\n            }\n          }\n\n        }\n      });\n    } else if (router.$el.children('.page:not(.stacked)').length) {\n      // Init current DOM page\n      let hasTabRoute;\n      router.currentRoute = currentRoute;\n      router.$el.children('.page:not(.stacked)').each(pageEl => {\n        const $pageEl = $(pageEl);\n        let $navbarEl;\n        router.setPagePosition($pageEl, 'current');\n\n        if (router.dynamicNavbar) {\n          $navbarEl = $pageEl.children('.navbar');\n\n          if ($navbarEl.length > 0) {\n            if (!router.$navbarsEl.parents(document).length) {\n              router.$el.prepend(router.$navbarsEl);\n            }\n\n            router.setNavbarPosition($navbarEl, 'current');\n            router.$navbarsEl.append($navbarEl);\n\n            if ($navbarEl.children('.title-large').length) {\n              $navbarEl.addClass('navbar-large');\n            }\n\n            $pageEl.children('.navbar').remove();\n          } else {\n            router.$navbarsEl.addClass('navbar-hidden');\n\n            if ($navbarEl.children('.title-large').length) {\n              router.$navbarsEl.addClass('navbar-hidden navbar-large-hidden');\n            }\n          }\n        }\n\n        if (router.currentRoute && router.currentRoute.route && (router.currentRoute.route.master === true || typeof router.currentRoute.route.master === 'function' && router.currentRoute.route.master(app, router)) && router.params.masterDetailBreakpoint > 0) {\n          $pageEl.addClass('page-master');\n          $pageEl.trigger('page:role', {\n            role: 'master'\n          });\n\n          if ($navbarEl && $navbarEl.length) {\n            $navbarEl.addClass('navbar-master');\n          }\n\n          view.checkMasterDetailBreakpoint();\n        }\n\n        const initOptions = {\n          route: router.currentRoute\n        };\n\n        if (router.currentRoute && router.currentRoute.route && router.currentRoute.route.options) {\n          extend(initOptions, router.currentRoute.route.options);\n        }\n\n        router.currentPageEl = $pageEl[0];\n\n        if (router.dynamicNavbar && $navbarEl.length) {\n          router.currentNavbarEl = $navbarEl[0];\n        }\n\n        router.removeThemeElements($pageEl);\n\n        if (router.dynamicNavbar && $navbarEl.length) {\n          router.removeThemeElements($navbarEl);\n        }\n\n        if (initOptions.route.route.tab) {\n          hasTabRoute = true;\n          router.tabLoad(initOptions.route.route.tab, extend({}, initOptions));\n        }\n\n        router.pageCallback('init', $pageEl, $navbarEl, 'current', undefined, initOptions);\n        router.pageCallback('beforeIn', $pageEl, $navbarEl, 'current', undefined, initOptions);\n        router.pageCallback('afterIn', $pageEl, $navbarEl, 'current', undefined, initOptions);\n      });\n\n      if (historyRestored) {\n        if (browserHistoryInitialMatch) {\n          const preloadPreviousPage = router.params.preloadPreviousPage || router.params[`${app.theme}SwipeBack`];\n\n          if (preloadPreviousPage && router.history.length > 1) {\n            router.back({\n              preload: true\n            });\n          }\n        } else {\n          router.navigate(initialUrl, {\n            initial: true,\n            browserHistory: false,\n            history: false,\n            animate: browserHistoryAnimateOnLoad,\n            once: {\n              pageAfterIn() {\n                const preloadPreviousPage = router.params.preloadPreviousPage || router.params[`${app.theme}SwipeBack`];\n\n                if (preloadPreviousPage && router.history.length > 2) {\n                  router.back({\n                    preload: true\n                  });\n                }\n              }\n\n            }\n          });\n        }\n      }\n\n      if (!historyRestored && !hasTabRoute) {\n        router.history.push(initialUrl);\n        router.saveHistory();\n      }\n    }\n\n    if (initialUrl && browserHistory && browserHistoryOnLoad && (!History.state || !History.state[view.id])) {\n      History.initViewState(view.id, {\n        url: initialUrl\n      });\n    }\n\n    router.emit('local::init routerInit', router);\n  }\n\n  destroy() {\n    let router = this;\n    router.emit('local::destroy routerDestroy', router); // Delete props & methods\n\n    Object.keys(router).forEach(routerProp => {\n      router[routerProp] = null;\n      delete router[routerProp];\n    });\n    router = null;\n  }\n\n} // Load\n\n\nRouter.prototype.navigate = navigate;\nRouter.prototype.refreshPage = refreshPage; // Tab\n\nRouter.prototype.tabLoad = tabLoad;\nRouter.prototype.tabRemove = tabRemove; // Modal\n\nRouter.prototype.modalLoad = modalLoad;\nRouter.prototype.modalRemove = modalRemove; // Back\n\nRouter.prototype.back = back; // Clear history\n\nRouter.prototype.clearPreviousHistory = clearPreviousHistory;\nexport default Router;"],"mappings":"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"},"metadata":{},"sourceType":"module"}