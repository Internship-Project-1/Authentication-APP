{"ast":null,"code":"import $ from '../../shared/dom7.js';\nexport default class TouchRipple {\n  constructor(app, $el, x, y) {\n    const ripple = this;\n    if (!$el) return undefined;\n    const {\n      left,\n      top,\n      width,\n      height\n    } = $el[0].getBoundingClientRect();\n    const center = {\n      x: x - left,\n      y: y - top\n    };\n    let diameter = Math.max((height ** 2 + width ** 2) ** 0.5, 48);\n    let isInset = false;\n    const insetElements = app.params.touch.touchRippleInsetElements || '';\n\n    if (insetElements && $el.is(insetElements)) {\n      isInset = true;\n    }\n\n    if (isInset) {\n      diameter = Math.max(Math.min(width, height), 48);\n    }\n\n    if (!isInset && $el.css('overflow') === 'hidden') {\n      const distanceFromCenter = ((center.x - width / 2) ** 2 + (center.y - height / 2) ** 2) ** 0.5;\n      const scale = (diameter / 2 + distanceFromCenter) / (diameter / 2);\n      ripple.rippleTransform = `translate3d(0px, 0px, 0) scale(${scale})`;\n    } else {\n      // prettier-ignore\n      ripple.rippleTransform = `translate3d(${-center.x + width / 2}px, ${-center.y + height / 2}px, 0) scale(1)`;\n    }\n\n    if (isInset) {\n      $el.addClass('ripple-inset');\n    }\n\n    ripple.$rippleWaveEl = $(`<div class=\"ripple-wave\" style=\"width: ${diameter}px; height: ${diameter}px; margin-top:-${diameter / 2}px; margin-left:-${diameter / 2}px; left:${center.x}px; top:${center.y}px; --f7-ripple-transform: ${ripple.rippleTransform}\"></div>`);\n    $el.prepend(ripple.$rippleWaveEl);\n    ripple.$rippleWaveEl.animationEnd(() => {\n      if (!ripple.$rippleWaveEl) return;\n      if (ripple.$rippleWaveEl.hasClass('ripple-wave-out')) return;\n      ripple.$rippleWaveEl.addClass('ripple-wave-in');\n\n      if (ripple.shouldBeRemoved) {\n        ripple.out();\n      }\n    });\n    return ripple;\n  }\n\n  destroy() {\n    let ripple = this;\n\n    if (ripple.$rippleWaveEl) {\n      ripple.$rippleWaveEl.remove();\n    }\n\n    Object.keys(ripple).forEach(key => {\n      ripple[key] = null;\n      delete ripple[key];\n    });\n    ripple = null;\n  }\n\n  out() {\n    const ripple = this;\n    const {\n      $rippleWaveEl\n    } = this;\n    clearTimeout(ripple.removeTimeout);\n    $rippleWaveEl.addClass('ripple-wave-out');\n    ripple.removeTimeout = setTimeout(() => {\n      ripple.destroy();\n    }, 300);\n    $rippleWaveEl.animationEnd(() => {\n      clearTimeout(ripple.removeTimeout);\n      ripple.destroy();\n    });\n  }\n\n  remove() {\n    const ripple = this;\n    if (ripple.shouldBeRemoved) return;\n    ripple.removeTimeout = setTimeout(() => {\n      ripple.destroy();\n    }, 400);\n    ripple.shouldBeRemoved = true;\n\n    if (ripple.$rippleWaveEl.hasClass('ripple-wave-in')) {\n      ripple.out();\n    }\n  }\n\n}","map":{"version":3,"names":["$","TouchRipple","constructor","app","$el","x","y","ripple","undefined","left","top","width","height","getBoundingClientRect","center","diameter","Math","max","isInset","insetElements","params","touch","touchRippleInsetElements","is","min","css","distanceFromCenter","scale","rippleTransform","addClass","$rippleWaveEl","prepend","animationEnd","hasClass","shouldBeRemoved","out","destroy","remove","Object","keys","forEach","key","clearTimeout","removeTimeout","setTimeout"],"sources":["C:/Users/Babak/userlogin/node_modules/framework7/components/touch-ripple/touch-ripple-class.js"],"sourcesContent":["import $ from '../../shared/dom7.js';\nexport default class TouchRipple {\n  constructor(app, $el, x, y) {\n    const ripple = this;\n    if (!$el) return undefined;\n    const {\n      left,\n      top,\n      width,\n      height\n    } = $el[0].getBoundingClientRect();\n    const center = {\n      x: x - left,\n      y: y - top\n    };\n    let diameter = Math.max((height ** 2 + width ** 2) ** 0.5, 48);\n    let isInset = false;\n    const insetElements = app.params.touch.touchRippleInsetElements || '';\n\n    if (insetElements && $el.is(insetElements)) {\n      isInset = true;\n    }\n\n    if (isInset) {\n      diameter = Math.max(Math.min(width, height), 48);\n    }\n\n    if (!isInset && $el.css('overflow') === 'hidden') {\n      const distanceFromCenter = ((center.x - width / 2) ** 2 + (center.y - height / 2) ** 2) ** 0.5;\n      const scale = (diameter / 2 + distanceFromCenter) / (diameter / 2);\n      ripple.rippleTransform = `translate3d(0px, 0px, 0) scale(${scale})`;\n    } else {\n      // prettier-ignore\n      ripple.rippleTransform = `translate3d(${-center.x + width / 2}px, ${-center.y + height / 2}px, 0) scale(1)`;\n    }\n\n    if (isInset) {\n      $el.addClass('ripple-inset');\n    }\n\n    ripple.$rippleWaveEl = $(`<div class=\"ripple-wave\" style=\"width: ${diameter}px; height: ${diameter}px; margin-top:-${diameter / 2}px; margin-left:-${diameter / 2}px; left:${center.x}px; top:${center.y}px; --f7-ripple-transform: ${ripple.rippleTransform}\"></div>`);\n    $el.prepend(ripple.$rippleWaveEl);\n    ripple.$rippleWaveEl.animationEnd(() => {\n      if (!ripple.$rippleWaveEl) return;\n      if (ripple.$rippleWaveEl.hasClass('ripple-wave-out')) return;\n      ripple.$rippleWaveEl.addClass('ripple-wave-in');\n\n      if (ripple.shouldBeRemoved) {\n        ripple.out();\n      }\n    });\n    return ripple;\n  }\n\n  destroy() {\n    let ripple = this;\n\n    if (ripple.$rippleWaveEl) {\n      ripple.$rippleWaveEl.remove();\n    }\n\n    Object.keys(ripple).forEach(key => {\n      ripple[key] = null;\n      delete ripple[key];\n    });\n    ripple = null;\n  }\n\n  out() {\n    const ripple = this;\n    const {\n      $rippleWaveEl\n    } = this;\n    clearTimeout(ripple.removeTimeout);\n    $rippleWaveEl.addClass('ripple-wave-out');\n    ripple.removeTimeout = setTimeout(() => {\n      ripple.destroy();\n    }, 300);\n    $rippleWaveEl.animationEnd(() => {\n      clearTimeout(ripple.removeTimeout);\n      ripple.destroy();\n    });\n  }\n\n  remove() {\n    const ripple = this;\n    if (ripple.shouldBeRemoved) return;\n    ripple.removeTimeout = setTimeout(() => {\n      ripple.destroy();\n    }, 400);\n    ripple.shouldBeRemoved = true;\n\n    if (ripple.$rippleWaveEl.hasClass('ripple-wave-in')) {\n      ripple.out();\n    }\n  }\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}